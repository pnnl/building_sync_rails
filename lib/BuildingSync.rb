# encoding: UTF-8
require 'xsd/qname'

module BuildingSync
  # {http://buildingsync.net/schemas/bedes-auc/2019}SiteType
  #   premisesIdentifiers - BuildingSync::PremisesIdentifiers
  #   premisesName - SOAP::SOAPString
  #   premisesNotes - SOAP::SOAPString
  #   occupancyClassification - BuildingSync::OccupancyClassificationType
  #   address - BuildingSync::Address
  #   climateZoneType - BuildingSync::ClimateZoneType
  #   eGRIDRegionCode - SOAP::SOAPString
  #   eGRIDSubregionCodes - BuildingSync::EGRIDSubregionCodes
  #   weatherDataStationID - BuildingSync::WeatherDataStationID
  #   weatherStationName - BuildingSync::WeatherStationName
  #   weatherStationCategory - SOAP::SOAPString
  #   weatherStations - BuildingSync::WeatherStations
  #   longitude - BuildingSync::Longitude
  #   latitude - BuildingSync::Latitude
  #   floorAreas - BuildingSync::FloorAreas
  #   ownership - SOAP::SOAPString
  #   ownershipStatus - SOAP::SOAPString
  #   primaryContactID - BuildingSync::PrimaryContactID
  #   buildings - BuildingSync::SiteType::Buildings
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class SiteType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: Buildings
    # {http://buildingsync.net/schemas/bedes-auc/2019}Buildings
    class Buildings < ::Array
    end

    attr_accessor :premisesIdentifiers
    attr_accessor :premisesName
    attr_accessor :premisesNotes
    attr_accessor :occupancyClassification
    attr_accessor :address
    attr_accessor :climateZoneType
    attr_accessor :eGRIDRegionCode
    attr_accessor :eGRIDSubregionCodes
    attr_accessor :weatherDataStationID
    attr_accessor :weatherStationName
    attr_accessor :weatherStationCategory
    attr_accessor :weatherStations
    attr_accessor :longitude
    attr_accessor :latitude
    attr_accessor :floorAreas
    attr_accessor :ownership
    attr_accessor :ownershipStatus
    attr_accessor :primaryContactID
    attr_accessor :buildings
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(premisesIdentifiers = nil, premisesName = nil, premisesNotes = nil, occupancyClassification = nil, address = nil, climateZoneType = nil, eGRIDRegionCode = nil, eGRIDSubregionCodes = nil, weatherDataStationID = nil, weatherStationName = nil, weatherStationCategory = nil, weatherStations = nil, longitude = nil, latitude = nil, floorAreas = nil, ownership = nil, ownershipStatus = nil, primaryContactID = nil, buildings = nil, userDefinedFields = nil)
      @premisesIdentifiers = premisesIdentifiers
      @premisesName = premisesName
      @premisesNotes = premisesNotes
      @occupancyClassification = occupancyClassification
      @address = address
      @climateZoneType = climateZoneType
      @eGRIDRegionCode = eGRIDRegionCode
      @eGRIDSubregionCodes = eGRIDSubregionCodes
      @weatherDataStationID = weatherDataStationID
      @weatherStationName = weatherStationName
      @weatherStationCategory = weatherStationCategory
      @weatherStations = weatherStations
      @longitude = longitude
      @latitude = latitude
      @floorAreas = floorAreas
      @ownership = ownership
      @ownershipStatus = ownershipStatus
      @primaryContactID = primaryContactID
      @buildings = buildings
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingType
  #   premisesName - SOAP::SOAPString
  #   premisesNotes - SOAP::SOAPString
  #   premisesIdentifiers - BuildingSync::PremisesIdentifiers
  #   address - BuildingSync::Address
  #   climateZoneType - BuildingSync::ClimateZoneType
  #   eGRIDRegionCode - SOAP::SOAPString
  #   eGRIDSubregionCodes - BuildingSync::EGRIDSubregionCodes
  #   weatherDataStationID - BuildingSync::WeatherDataStationID
  #   weatherStationName - BuildingSync::WeatherStationName
  #   weatherStationCategory - SOAP::SOAPString
  #   weatherStations - BuildingSync::WeatherStations
  #   longitude - BuildingSync::Longitude
  #   latitude - BuildingSync::Latitude
  #   buildingClassification - SOAP::SOAPString
  #   occupancyClassification - BuildingSync::OccupancyClassificationType
  #   occupancyLevels - BuildingSync::OccupancyLevels
  #   typicalOccupantUsages - BuildingSync::TypicalOccupantUsages
  #   spatialUnits - BuildingSync::SpatialUnits
  #   ownership - SOAP::SOAPString
  #   ownershipStatus - SOAP::SOAPString
  #   primaryContactID - BuildingSync::PrimaryContactID
  #   tenantIDs - BuildingSync::TenantIDs
  #   multiTenant - SOAP::SOAPBoolean
  #   nAICSCode - SOAP::SOAPString
  #   publiclySubsidized - SOAP::SOAPBoolean
  #   federalBuilding - BuildingSync::BuildingType::FederalBuilding
  #   portfolioManager - BuildingSync::PortfolioManagerType
  #   numberOfBusinesses - BuildingSync::BuildingType::NumberOfBusinesses
  #   floorsAboveGrade - BuildingSync::FloorsAboveGrade
  #   floorsBelowGrade - BuildingSync::FloorsBelowGrade
  #   conditionedFloorsAboveGrade - BuildingSync::BuildingType::ConditionedFloorsAboveGrade
  #   conditionedFloorsBelowGrade - BuildingSync::BuildingType::ConditionedFloorsBelowGrade
  #   unconditionedFloorsAboveGrade - BuildingSync::BuildingType::UnconditionedFloorsAboveGrade
  #   unconditionedFloorsBelowGrade - BuildingSync::BuildingType::UnconditionedFloorsBelowGrade
  #   buildingAutomationSystem - SOAP::SOAPBoolean
  #   lightingAutomationSystem - SOAP::SOAPBoolean
  #   historicalLandmark - SOAP::SOAPBoolean
  #   floorAreas - BuildingSync::FloorAreas
  #   aspectRatio - BuildingSync::BuildingType::AspectRatio
  #   perimeter - BuildingSync::BuildingType::Perimeter
  #   totalExteriorAboveGradeWallArea - BuildingSync::BuildingType::TotalExteriorAboveGradeWallArea
  #   totalExteriorBelowGradeWallArea - BuildingSync::BuildingType::TotalExteriorBelowGradeWallArea
  #   totalCommonConditionedAboveGradeWallArea - BuildingSync::BuildingType::TotalCommonConditionedAboveGradeWallArea
  #   overallWindowToWallRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   overallDoorToWallRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   heightDistribution - SOAP::SOAPString
  #   horizontalSurroundings - SOAP::SOAPString
  #   verticalSurroundings - SOAP::SOAPString
  #   assessments - BuildingSync::BuildingType::Assessments
  #   yearOfConstruction - SOAP::SOAPGYear
  #   yearOccupied - SOAP::SOAPGYear
  #   yearOfLastEnergyAudit - SOAP::SOAPGYear
  #   retrocommissioningDate - SOAP::SOAPDate
  #   yearOfLatestRetrofit - SOAP::SOAPGYear
  #   yearOfLastMajorRemodel - SOAP::SOAPGYear
  #   percentOccupiedByOwner - BuildingSync::BuildingType::PercentOccupiedByOwner
  #   percentLeasedByOwner - BuildingSync::BuildingType::PercentLeasedByOwner
  #   numberOfFacilitiesOnSite - BuildingSync::BuildingType::NumberOfFacilitiesOnSite
  #   operatorType - SOAP::SOAPString
  #   sections - BuildingSync::BuildingType::Sections
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class BuildingType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: FederalBuilding
    # {http://buildingsync.net/schemas/bedes-auc/2019}FederalBuilding
    #   agency - SOAP::SOAPString
    #   departmentRegion - SOAP::SOAPString
    class FederalBuilding
      attr_accessor :agency
      attr_accessor :departmentRegion

      def initialize(agency = nil, departmentRegion = nil)
        @agency = agency
        @departmentRegion = departmentRegion
      end
    end

    # inner class for member: NumberOfBusinesses
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfBusinesses
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfBusinesses < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ConditionedFloorsAboveGrade
    # {http://buildingsync.net/schemas/bedes-auc/2019}ConditionedFloorsAboveGrade
    #   xmlattr_Source - SOAP::SOAPString
    class ConditionedFloorsAboveGrade < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ConditionedFloorsBelowGrade
    # {http://buildingsync.net/schemas/bedes-auc/2019}ConditionedFloorsBelowGrade
    #   xmlattr_Source - SOAP::SOAPString
    class ConditionedFloorsBelowGrade < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: UnconditionedFloorsAboveGrade
    # {http://buildingsync.net/schemas/bedes-auc/2019}UnconditionedFloorsAboveGrade
    #   xmlattr_Source - SOAP::SOAPString
    class UnconditionedFloorsAboveGrade < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: UnconditionedFloorsBelowGrade
    # {http://buildingsync.net/schemas/bedes-auc/2019}UnconditionedFloorsBelowGrade
    #   xmlattr_Source - SOAP::SOAPString
    class UnconditionedFloorsBelowGrade < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AspectRatio
    # {http://buildingsync.net/schemas/bedes-auc/2019}AspectRatio
    #   xmlattr_Source - SOAP::SOAPString
    class AspectRatio < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Perimeter
    # {http://buildingsync.net/schemas/bedes-auc/2019}Perimeter
    #   xmlattr_Source - SOAP::SOAPString
    class Perimeter < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: TotalExteriorAboveGradeWallArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}TotalExteriorAboveGradeWallArea
    #   xmlattr_Source - SOAP::SOAPString
    class TotalExteriorAboveGradeWallArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: TotalExteriorBelowGradeWallArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}TotalExteriorBelowGradeWallArea
    #   xmlattr_Source - SOAP::SOAPString
    class TotalExteriorBelowGradeWallArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: TotalCommonConditionedAboveGradeWallArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}TotalCommonConditionedAboveGradeWallArea
    #   xmlattr_Source - SOAP::SOAPString
    class TotalCommonConditionedAboveGradeWallArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Assessments
    # {http://buildingsync.net/schemas/bedes-auc/2019}Assessments
    class Assessments < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Assessment
      #   assessmentProgram - SOAP::SOAPString
      #   assessmentLevel - SOAP::SOAPString
      #   assessmentValue - SOAP::SOAPDecimal
      #   assessmentYear - SOAP::SOAPGYear
      #   assessmentVersion - SOAP::SOAPString
      class Assessment
        attr_accessor :assessmentProgram
        attr_accessor :assessmentLevel
        attr_accessor :assessmentValue
        attr_accessor :assessmentYear
        attr_accessor :assessmentVersion

        def initialize(assessmentProgram = nil, assessmentLevel = nil, assessmentValue = nil, assessmentYear = nil, assessmentVersion = nil)
          @assessmentProgram = assessmentProgram
          @assessmentLevel = assessmentLevel
          @assessmentValue = assessmentValue
          @assessmentYear = assessmentYear
          @assessmentVersion = assessmentVersion
        end
      end
    end

    # inner class for member: PercentOccupiedByOwner
    # {http://buildingsync.net/schemas/bedes-auc/2019}PercentOccupiedByOwner
    #   xmlattr_Source - SOAP::SOAPString
    class PercentOccupiedByOwner < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PercentLeasedByOwner
    # {http://buildingsync.net/schemas/bedes-auc/2019}PercentLeasedByOwner
    #   xmlattr_Source - SOAP::SOAPString
    class PercentLeasedByOwner < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfFacilitiesOnSite
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfFacilitiesOnSite
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfFacilitiesOnSite < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Sections
    # {http://buildingsync.net/schemas/bedes-auc/2019}Sections
    class Sections < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Section
      #   premisesName - SOAP::SOAPString
      #   sectionType - SOAP::SOAPString
      #   premisesNotes - SOAP::SOAPString
      #   premisesIdentifiers - BuildingSync::PremisesIdentifiers
      #   occupancyClassification - BuildingSync::OccupancyClassificationType
      #   originalOccupancyClassification - BuildingSync::OccupancyClassificationType
      #   occupancyLevels - BuildingSync::OccupancyLevels
      #   typicalOccupantUsages - BuildingSync::TypicalOccupantUsages
      #   spatialUnits - BuildingSync::SpatialUnits
      #   primaryContactID - BuildingSync::PrimaryContactID
      #   tenantIDs - BuildingSync::TenantIDs
      #   yearOfConstruction - SOAP::SOAPGYear
      #   footprintShape - SOAP::SOAPString
      #   numberOfSides - BuildingSync::BuildingType::Sections::Section::NumberOfSides
      #   story - SOAP::SOAPInt
      #   floorAreas - BuildingSync::FloorAreas
      #   thermalZoneLayout - SOAP::SOAPString
      #   perimeterZoneDepth - BuildingSync::BuildingType::Sections::Section::PerimeterZoneDepth
      #   sideA1Orientation - BuildingSync::BuildingType::Sections::Section::SideA1Orientation
      #   sides - BuildingSync::BuildingType::Sections::Section::Sides
      #   roofs - BuildingSync::BuildingType::Sections::Section::Roofs
      #   ceilings - BuildingSync::BuildingType::Sections::Section::Ceilings
      #   exteriorFloors - BuildingSync::BuildingType::Sections::Section::ExteriorFloors
      #   foundations - BuildingSync::BuildingType::Sections::Section::Foundations
      #   xOffset - BuildingSync::BuildingType::Sections::Section::XOffset
      #   yOffset - BuildingSync::BuildingType::Sections::Section::YOffset
      #   zOffset - BuildingSync::BuildingType::Sections::Section::ZOffset
      #   floorsAboveGrade - BuildingSync::FloorsAboveGrade
      #   floorsBelowGrade - BuildingSync::FloorsBelowGrade
      #   floorsPartiallyBelowGrade - BuildingSync::BuildingType::Sections::Section::FloorsPartiallyBelowGrade
      #   floorToFloorHeight - BuildingSync::BuildingType::Sections::Section::FloorToFloorHeight
      #   floorToCeilingHeight - BuildingSync::BuildingType::Sections::Section::FloorToCeilingHeight
      #   userDefinedFields - BuildingSync::UserDefinedFields
      #   thermalZones - BuildingSync::BuildingType::Sections::Section::ThermalZones
      #   xmlattr_ID - SOAP::SOAPID
      class Section
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: NumberOfSides
        # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfSides
        #   xmlattr_Source - SOAP::SOAPString
        class NumberOfSides < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: PerimeterZoneDepth
        # {http://buildingsync.net/schemas/bedes-auc/2019}PerimeterZoneDepth
        #   xmlattr_Source - SOAP::SOAPString
        class PerimeterZoneDepth < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: SideA1Orientation
        # {http://buildingsync.net/schemas/bedes-auc/2019}SideA1Orientation
        #   xmlattr_Source - SOAP::SOAPString
        class SideA1Orientation < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: Sides
        # {http://buildingsync.net/schemas/bedes-auc/2019}Sides
        class Sides < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}Side
          #   sideNumber - SOAP::SOAPString
          #   sideLength - BuildingSync::BuildingType::Sections::Section::Sides::Side::SideLength
          #   wallID - BuildingSync::WallID
          #   wallIDs - BuildingSync::BuildingType::Sections::Section::Sides::Side::WallIDs
          #   windowID - BuildingSync::WindowID
          #   windowIDs - BuildingSync::BuildingType::Sections::Section::Sides::Side::WindowIDs
          #   doorID - BuildingSync::DoorID
          #   doorIDs - BuildingSync::BuildingType::Sections::Section::Sides::Side::DoorIDs
          #   thermalZoneIDs - BuildingSync::ThermalZoneIDs
          class Side

            # inner class for member: SideLength
            # {http://buildingsync.net/schemas/bedes-auc/2019}SideLength
            #   xmlattr_Source - SOAP::SOAPString
            class SideLength < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: WallIDs
            # {http://buildingsync.net/schemas/bedes-auc/2019}WallIDs
            class WallIDs < ::Array
            end

            # inner class for member: WindowIDs
            # {http://buildingsync.net/schemas/bedes-auc/2019}WindowIDs
            class WindowIDs < ::Array
            end

            # inner class for member: DoorIDs
            # {http://buildingsync.net/schemas/bedes-auc/2019}DoorIDs
            class DoorIDs < ::Array
            end

            attr_accessor :sideNumber
            attr_accessor :sideLength
            attr_accessor :wallID
            attr_accessor :wallIDs
            attr_accessor :windowID
            attr_accessor :windowIDs
            attr_accessor :doorID
            attr_accessor :doorIDs
            attr_accessor :thermalZoneIDs

            def initialize(sideNumber = nil, sideLength = nil, wallID = nil, wallIDs = nil, windowID = nil, windowIDs = nil, doorID = nil, doorIDs = nil, thermalZoneIDs = nil)
              @sideNumber = sideNumber
              @sideLength = sideLength
              @wallID = wallID
              @wallIDs = wallIDs
              @windowID = windowID
              @windowIDs = windowIDs
              @doorID = doorID
              @doorIDs = doorIDs
              @thermalZoneIDs = thermalZoneIDs
            end
          end
        end

        # inner class for member: Roofs
        # {http://buildingsync.net/schemas/bedes-auc/2019}Roofs
        class Roofs < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}Roof
          #   roofID - BuildingSync::BuildingType::Sections::Section::Roofs::Roof::RoofID
          class Roof

            # inner class for member: RoofID
            # {http://buildingsync.net/schemas/bedes-auc/2019}RoofID
            #   roofArea - BuildingSync::BuildingType::Sections::Section::Roofs::Roof::RoofID::RoofArea
            #   roofInsulatedArea - BuildingSync::BuildingType::Sections::Section::Roofs::Roof::RoofID::RoofInsulatedArea
            #   roofCondition - BuildingSync::EquipmentCondition
            #   skylightIDs - BuildingSync::BuildingType::Sections::Section::Roofs::Roof::RoofID::SkylightIDs
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class RoofID
              AttrIDref = XSD::QName.new(nil, "IDref")

              # inner class for member: RoofArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}RoofArea
              #   xmlattr_Source - SOAP::SOAPString
              class RoofArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: RoofInsulatedArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}RoofInsulatedArea
              #   xmlattr_Source - SOAP::SOAPString
              class RoofInsulatedArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: SkylightIDs
              # {http://buildingsync.net/schemas/bedes-auc/2019}SkylightIDs
              class SkylightIDs < ::Array

                # {http://buildingsync.net/schemas/bedes-auc/2019}SkylightID
                #   percentSkylightArea - BuildingSync::BuildingType::Sections::Section::Roofs::Roof::RoofID::SkylightIDs::SkylightID::PercentSkylightArea
                #   xmlattr_IDref - SOAP::SOAPIDREF
                class SkylightID
                  AttrIDref = XSD::QName.new(nil, "IDref")

                  # inner class for member: PercentSkylightArea
                  # {http://buildingsync.net/schemas/bedes-auc/2019}PercentSkylightArea
                  #   xmlattr_Source - SOAP::SOAPString
                  class PercentSkylightArea < ::String
                    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                    def __xmlattr
                      @__xmlattr ||= {}
                    end

                    def xmlattr_Source
                      __xmlattr[AttrSource]
                    end

                    def xmlattr_Source=(value)
                      __xmlattr[AttrSource] = value
                    end

                    def initialize(*arg)
                      super
                      @__xmlattr = {}
                    end
                  end

                  attr_accessor :percentSkylightArea

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_IDref
                    __xmlattr[AttrIDref]
                  end

                  def xmlattr_IDref=(value)
                    __xmlattr[AttrIDref] = value
                  end

                  def initialize(percentSkylightArea = nil)
                    @percentSkylightArea = percentSkylightArea
                    @__xmlattr = {}
                  end
                end
              end

              attr_accessor :roofArea
              attr_accessor :roofInsulatedArea
              attr_accessor :roofCondition
              attr_accessor :skylightIDs

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize(roofArea = nil, roofInsulatedArea = nil, roofCondition = nil, skylightIDs = nil)
                @roofArea = roofArea
                @roofInsulatedArea = roofInsulatedArea
                @roofCondition = roofCondition
                @skylightIDs = skylightIDs
                @__xmlattr = {}
              end
            end

            attr_accessor :roofID

            def initialize(roofID = nil)
              @roofID = roofID
            end
          end
        end

        # inner class for member: Ceilings
        # {http://buildingsync.net/schemas/bedes-auc/2019}Ceilings
        class Ceilings < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}Ceiling
          #   ceilingID - BuildingSync::BuildingType::Sections::Section::Ceilings::Ceiling::CeilingID
          class Ceiling

            # inner class for member: CeilingID
            # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingID
            #   ceilingArea - BuildingSync::BuildingType::Sections::Section::Ceilings::Ceiling::CeilingID::CeilingArea
            #   ceilingInsulatedArea - BuildingSync::BuildingType::Sections::Section::Ceilings::Ceiling::CeilingID::CeilingInsulatedArea
            #   thermalZoneIDs - BuildingSync::ThermalZoneIDs
            #   spaceIDs - BuildingSync::SpaceIDs
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class CeilingID
              AttrIDref = XSD::QName.new(nil, "IDref")

              # inner class for member: CeilingArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingArea
              #   xmlattr_Source - SOAP::SOAPString
              class CeilingArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: CeilingInsulatedArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingInsulatedArea
              #   xmlattr_Source - SOAP::SOAPString
              class CeilingInsulatedArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              attr_accessor :ceilingArea
              attr_accessor :ceilingInsulatedArea
              attr_accessor :thermalZoneIDs
              attr_accessor :spaceIDs

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize(ceilingArea = nil, ceilingInsulatedArea = nil, thermalZoneIDs = nil, spaceIDs = nil)
                @ceilingArea = ceilingArea
                @ceilingInsulatedArea = ceilingInsulatedArea
                @thermalZoneIDs = thermalZoneIDs
                @spaceIDs = spaceIDs
                @__xmlattr = {}
              end
            end

            attr_accessor :ceilingID

            def initialize(ceilingID = nil)
              @ceilingID = ceilingID
            end
          end
        end

        # inner class for member: ExteriorFloors
        # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloors
        class ExteriorFloors < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloor
          #   exteriorFloorID - BuildingSync::BuildingType::Sections::Section::ExteriorFloors::ExteriorFloor::ExteriorFloorID
          class ExteriorFloor

            # inner class for member: ExteriorFloorID
            # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorID
            #   exteriorFloorArea - BuildingSync::BuildingType::Sections::Section::ExteriorFloors::ExteriorFloor::ExteriorFloorID::ExteriorFloorArea
            #   thermalZoneIDs - BuildingSync::ThermalZoneIDs
            #   spaceIDs - BuildingSync::SpaceIDs
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class ExteriorFloorID
              AttrIDref = XSD::QName.new(nil, "IDref")

              # inner class for member: ExteriorFloorArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorArea
              #   xmlattr_Source - SOAP::SOAPString
              class ExteriorFloorArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              attr_accessor :exteriorFloorArea
              attr_accessor :thermalZoneIDs
              attr_accessor :spaceIDs

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize(exteriorFloorArea = nil, thermalZoneIDs = nil, spaceIDs = nil)
                @exteriorFloorArea = exteriorFloorArea
                @thermalZoneIDs = thermalZoneIDs
                @spaceIDs = spaceIDs
                @__xmlattr = {}
              end
            end

            attr_accessor :exteriorFloorID

            def initialize(exteriorFloorID = nil)
              @exteriorFloorID = exteriorFloorID
            end
          end
        end

        # inner class for member: Foundations
        # {http://buildingsync.net/schemas/bedes-auc/2019}Foundations
        class Foundations < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}Foundation
          #   foundationID - BuildingSync::BuildingType::Sections::Section::Foundations::Foundation::FoundationID
          class Foundation

            # inner class for member: FoundationID
            # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationID
            #   foundationArea - BuildingSync::BuildingType::Sections::Section::Foundations::Foundation::FoundationID::FoundationArea
            #   thermalZoneIDs - BuildingSync::ThermalZoneIDs
            #   spaceIDs - BuildingSync::SpaceIDs
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class FoundationID
              AttrIDref = XSD::QName.new(nil, "IDref")

              # inner class for member: FoundationArea
              # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationArea
              #   xmlattr_Source - SOAP::SOAPString
              class FoundationArea < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              attr_accessor :foundationArea
              attr_accessor :thermalZoneIDs
              attr_accessor :spaceIDs

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize(foundationArea = nil, thermalZoneIDs = nil, spaceIDs = nil)
                @foundationArea = foundationArea
                @thermalZoneIDs = thermalZoneIDs
                @spaceIDs = spaceIDs
                @__xmlattr = {}
              end
            end

            attr_accessor :foundationID

            def initialize(foundationID = nil)
              @foundationID = foundationID
            end
          end
        end

        # inner class for member: XOffset
        # {http://buildingsync.net/schemas/bedes-auc/2019}XOffset
        #   xmlattr_Source - SOAP::SOAPString
        class XOffset < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: YOffset
        # {http://buildingsync.net/schemas/bedes-auc/2019}YOffset
        #   xmlattr_Source - SOAP::SOAPString
        class YOffset < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: ZOffset
        # {http://buildingsync.net/schemas/bedes-auc/2019}ZOffset
        #   xmlattr_Source - SOAP::SOAPString
        class ZOffset < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: FloorsPartiallyBelowGrade
        # {http://buildingsync.net/schemas/bedes-auc/2019}FloorsPartiallyBelowGrade
        #   xmlattr_Source - SOAP::SOAPString
        class FloorsPartiallyBelowGrade < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: FloorToFloorHeight
        # {http://buildingsync.net/schemas/bedes-auc/2019}FloorToFloorHeight
        #   xmlattr_Source - SOAP::SOAPString
        class FloorToFloorHeight < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: FloorToCeilingHeight
        # {http://buildingsync.net/schemas/bedes-auc/2019}FloorToCeilingHeight
        #   xmlattr_Source - SOAP::SOAPString
        class FloorToCeilingHeight < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: ThermalZones
        # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZones
        class ThermalZones < ::Array
        end

        attr_accessor :premisesName
        attr_accessor :sectionType
        attr_accessor :premisesNotes
        attr_accessor :premisesIdentifiers
        attr_accessor :occupancyClassification
        attr_accessor :originalOccupancyClassification
        attr_accessor :occupancyLevels
        attr_accessor :typicalOccupantUsages
        attr_accessor :spatialUnits
        attr_accessor :primaryContactID
        attr_accessor :tenantIDs
        attr_accessor :yearOfConstruction
        attr_accessor :footprintShape
        attr_accessor :numberOfSides
        attr_accessor :story
        attr_accessor :floorAreas
        attr_accessor :thermalZoneLayout
        attr_accessor :perimeterZoneDepth
        attr_accessor :sideA1Orientation
        attr_accessor :sides
        attr_accessor :roofs
        attr_accessor :ceilings
        attr_accessor :exteriorFloors
        attr_accessor :foundations
        attr_accessor :xOffset
        attr_accessor :yOffset
        attr_accessor :zOffset
        attr_accessor :floorsAboveGrade
        attr_accessor :floorsBelowGrade
        attr_accessor :floorsPartiallyBelowGrade
        attr_accessor :floorToFloorHeight
        attr_accessor :floorToCeilingHeight
        attr_accessor :userDefinedFields
        attr_accessor :thermalZones

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(premisesName = nil, sectionType = nil, premisesNotes = nil, premisesIdentifiers = nil, occupancyClassification = nil, originalOccupancyClassification = nil, occupancyLevels = nil, typicalOccupantUsages = nil, spatialUnits = nil, primaryContactID = nil, tenantIDs = [], yearOfConstruction = nil, footprintShape = nil, numberOfSides = nil, story = nil, floorAreas = nil, thermalZoneLayout = nil, perimeterZoneDepth = nil, sideA1Orientation = nil, sides = nil, roofs = nil, ceilings = nil, exteriorFloors = nil, foundations = nil, xOffset = nil, yOffset = nil, zOffset = nil, floorsAboveGrade = nil, floorsBelowGrade = nil, floorsPartiallyBelowGrade = nil, floorToFloorHeight = nil, floorToCeilingHeight = nil, userDefinedFields = nil, thermalZones = nil)
          @premisesName = premisesName
          @sectionType = sectionType
          @premisesNotes = premisesNotes
          @premisesIdentifiers = premisesIdentifiers
          @occupancyClassification = occupancyClassification
          @originalOccupancyClassification = originalOccupancyClassification
          @occupancyLevels = occupancyLevels
          @typicalOccupantUsages = typicalOccupantUsages
          @spatialUnits = spatialUnits
          @primaryContactID = primaryContactID
          @tenantIDs = tenantIDs
          @yearOfConstruction = yearOfConstruction
          @footprintShape = footprintShape
          @numberOfSides = numberOfSides
          @story = story
          @floorAreas = floorAreas
          @thermalZoneLayout = thermalZoneLayout
          @perimeterZoneDepth = perimeterZoneDepth
          @sideA1Orientation = sideA1Orientation
          @sides = sides
          @roofs = roofs
          @ceilings = ceilings
          @exteriorFloors = exteriorFloors
          @foundations = foundations
          @xOffset = xOffset
          @yOffset = yOffset
          @zOffset = zOffset
          @floorsAboveGrade = floorsAboveGrade
          @floorsBelowGrade = floorsBelowGrade
          @floorsPartiallyBelowGrade = floorsPartiallyBelowGrade
          @floorToFloorHeight = floorToFloorHeight
          @floorToCeilingHeight = floorToCeilingHeight
          @userDefinedFields = userDefinedFields
          @thermalZones = thermalZones
          @__xmlattr = {}
        end
      end
    end

    attr_accessor :premisesName
    attr_accessor :premisesNotes
    attr_accessor :premisesIdentifiers
    attr_accessor :address
    attr_accessor :climateZoneType
    attr_accessor :eGRIDRegionCode
    attr_accessor :eGRIDSubregionCodes
    attr_accessor :weatherDataStationID
    attr_accessor :weatherStationName
    attr_accessor :weatherStationCategory
    attr_accessor :weatherStations
    attr_accessor :longitude
    attr_accessor :latitude
    attr_accessor :buildingClassification
    attr_accessor :occupancyClassification
    attr_accessor :occupancyLevels
    attr_accessor :typicalOccupantUsages
    attr_accessor :spatialUnits
    attr_accessor :ownership
    attr_accessor :ownershipStatus
    attr_accessor :primaryContactID
    attr_accessor :tenantIDs
    attr_accessor :multiTenant
    attr_accessor :nAICSCode
    attr_accessor :publiclySubsidized
    attr_accessor :federalBuilding
    attr_accessor :portfolioManager
    attr_accessor :numberOfBusinesses
    attr_accessor :floorsAboveGrade
    attr_accessor :floorsBelowGrade
    attr_accessor :conditionedFloorsAboveGrade
    attr_accessor :conditionedFloorsBelowGrade
    attr_accessor :unconditionedFloorsAboveGrade
    attr_accessor :unconditionedFloorsBelowGrade
    attr_accessor :buildingAutomationSystem
    attr_accessor :lightingAutomationSystem
    attr_accessor :historicalLandmark
    attr_accessor :floorAreas
    attr_accessor :aspectRatio
    attr_accessor :perimeter
    attr_accessor :totalExteriorAboveGradeWallArea
    attr_accessor :totalExteriorBelowGradeWallArea
    attr_accessor :totalCommonConditionedAboveGradeWallArea
    attr_accessor :overallWindowToWallRatio
    attr_accessor :overallDoorToWallRatio
    attr_accessor :heightDistribution
    attr_accessor :horizontalSurroundings
    attr_accessor :verticalSurroundings
    attr_accessor :assessments
    attr_accessor :yearOfConstruction
    attr_accessor :yearOccupied
    attr_accessor :yearOfLastEnergyAudit
    attr_accessor :retrocommissioningDate
    attr_accessor :yearOfLatestRetrofit
    attr_accessor :yearOfLastMajorRemodel
    attr_accessor :percentOccupiedByOwner
    attr_accessor :percentLeasedByOwner
    attr_accessor :numberOfFacilitiesOnSite
    attr_accessor :operatorType
    attr_accessor :sections
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(premisesName = nil, premisesNotes = nil, premisesIdentifiers = nil, address = nil, climateZoneType = nil, eGRIDRegionCode = nil, eGRIDSubregionCodes = nil, weatherDataStationID = nil, weatherStationName = nil, weatherStationCategory = nil, weatherStations = nil, longitude = nil, latitude = nil, buildingClassification = nil, occupancyClassification = nil, occupancyLevels = nil, typicalOccupantUsages = nil, spatialUnits = nil, ownership = nil, ownershipStatus = nil, primaryContactID = nil, tenantIDs = [], multiTenant = nil, nAICSCode = nil, publiclySubsidized = nil, federalBuilding = nil, portfolioManager = nil, numberOfBusinesses = nil, floorsAboveGrade = nil, floorsBelowGrade = nil, conditionedFloorsAboveGrade = nil, conditionedFloorsBelowGrade = nil, unconditionedFloorsAboveGrade = nil, unconditionedFloorsBelowGrade = nil, buildingAutomationSystem = nil, lightingAutomationSystem = nil, historicalLandmark = nil, floorAreas = nil, aspectRatio = nil, perimeter = nil, totalExteriorAboveGradeWallArea = nil, totalExteriorBelowGradeWallArea = nil, totalCommonConditionedAboveGradeWallArea = nil, overallWindowToWallRatio = nil, overallDoorToWallRatio = nil, heightDistribution = nil, horizontalSurroundings = nil, verticalSurroundings = nil, assessments = nil, yearOfConstruction = nil, yearOccupied = nil, yearOfLastEnergyAudit = nil, retrocommissioningDate = nil, yearOfLatestRetrofit = nil, yearOfLastMajorRemodel = nil, percentOccupiedByOwner = nil, percentLeasedByOwner = nil, numberOfFacilitiesOnSite = nil, operatorType = nil, sections = nil, userDefinedFields = nil)
      @premisesName = premisesName
      @premisesNotes = premisesNotes
      @premisesIdentifiers = premisesIdentifiers
      @address = address
      @climateZoneType = climateZoneType
      @eGRIDRegionCode = eGRIDRegionCode
      @eGRIDSubregionCodes = eGRIDSubregionCodes
      @weatherDataStationID = weatherDataStationID
      @weatherStationName = weatherStationName
      @weatherStationCategory = weatherStationCategory
      @weatherStations = weatherStations
      @longitude = longitude
      @latitude = latitude
      @buildingClassification = buildingClassification
      @occupancyClassification = occupancyClassification
      @occupancyLevels = occupancyLevels
      @typicalOccupantUsages = typicalOccupantUsages
      @spatialUnits = spatialUnits
      @ownership = ownership
      @ownershipStatus = ownershipStatus
      @primaryContactID = primaryContactID
      @tenantIDs = tenantIDs
      @multiTenant = multiTenant
      @nAICSCode = nAICSCode
      @publiclySubsidized = publiclySubsidized
      @federalBuilding = federalBuilding
      @portfolioManager = portfolioManager
      @numberOfBusinesses = numberOfBusinesses
      @floorsAboveGrade = floorsAboveGrade
      @floorsBelowGrade = floorsBelowGrade
      @conditionedFloorsAboveGrade = conditionedFloorsAboveGrade
      @conditionedFloorsBelowGrade = conditionedFloorsBelowGrade
      @unconditionedFloorsAboveGrade = unconditionedFloorsAboveGrade
      @unconditionedFloorsBelowGrade = unconditionedFloorsBelowGrade
      @buildingAutomationSystem = buildingAutomationSystem
      @lightingAutomationSystem = lightingAutomationSystem
      @historicalLandmark = historicalLandmark
      @floorAreas = floorAreas
      @aspectRatio = aspectRatio
      @perimeter = perimeter
      @totalExteriorAboveGradeWallArea = totalExteriorAboveGradeWallArea
      @totalExteriorBelowGradeWallArea = totalExteriorBelowGradeWallArea
      @totalCommonConditionedAboveGradeWallArea = totalCommonConditionedAboveGradeWallArea
      @overallWindowToWallRatio = overallWindowToWallRatio
      @overallDoorToWallRatio = overallDoorToWallRatio
      @heightDistribution = heightDistribution
      @horizontalSurroundings = horizontalSurroundings
      @verticalSurroundings = verticalSurroundings
      @assessments = assessments
      @yearOfConstruction = yearOfConstruction
      @yearOccupied = yearOccupied
      @yearOfLastEnergyAudit = yearOfLastEnergyAudit
      @retrocommissioningDate = retrocommissioningDate
      @yearOfLatestRetrofit = yearOfLatestRetrofit
      @yearOfLastMajorRemodel = yearOfLastMajorRemodel
      @percentOccupiedByOwner = percentOccupiedByOwner
      @percentLeasedByOwner = percentLeasedByOwner
      @numberOfFacilitiesOnSite = numberOfFacilitiesOnSite
      @operatorType = operatorType
      @sections = sections
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZoneType
  #   premisesName - SOAP::SOAPString
  #   deliveryIDs - BuildingSync::ThermalZoneType::DeliveryIDs
  #   hVACScheduleIDs - BuildingSync::ThermalZoneType::HVACScheduleIDs
  #   setpointTemperatureHeating - BuildingSync::ThermalZoneType::SetpointTemperatureHeating
  #   setbackTemperatureHeating - BuildingSync::ThermalZoneType::SetbackTemperatureHeating
  #   heatLowered - SOAP::SOAPString
  #   setpointTemperatureCooling - BuildingSync::ThermalZoneType::SetpointTemperatureCooling
  #   setupTemperatureCooling - BuildingSync::ThermalZoneType::SetupTemperatureCooling
  #   aCAdjusted - SOAP::SOAPString
  #   spaces - BuildingSync::ThermalZoneType::Spaces
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class ThermalZoneType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: DeliveryIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}DeliveryIDs
    class DeliveryIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}DeliveryID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class DeliveryID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: HVACScheduleIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}HVACScheduleIDs
    class HVACScheduleIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}HVACScheduleID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class HVACScheduleID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: SetpointTemperatureHeating
    # {http://buildingsync.net/schemas/bedes-auc/2019}SetpointTemperatureHeating
    #   xmlattr_Source - SOAP::SOAPString
    class SetpointTemperatureHeating < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SetbackTemperatureHeating
    # {http://buildingsync.net/schemas/bedes-auc/2019}SetbackTemperatureHeating
    #   xmlattr_Source - SOAP::SOAPString
    class SetbackTemperatureHeating < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SetpointTemperatureCooling
    # {http://buildingsync.net/schemas/bedes-auc/2019}SetpointTemperatureCooling
    #   xmlattr_Source - SOAP::SOAPString
    class SetpointTemperatureCooling < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SetupTemperatureCooling
    # {http://buildingsync.net/schemas/bedes-auc/2019}SetupTemperatureCooling
    #   xmlattr_Source - SOAP::SOAPString
    class SetupTemperatureCooling < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Spaces
    # {http://buildingsync.net/schemas/bedes-auc/2019}Spaces
    class Spaces < ::Array
    end

    attr_accessor :premisesName
    attr_accessor :deliveryIDs
    attr_accessor :hVACScheduleIDs
    attr_accessor :setpointTemperatureHeating
    attr_accessor :setbackTemperatureHeating
    attr_accessor :heatLowered
    attr_accessor :setpointTemperatureCooling
    attr_accessor :setupTemperatureCooling
    attr_accessor :aCAdjusted
    attr_accessor :spaces
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(premisesName = nil, deliveryIDs = nil, hVACScheduleIDs = nil, setpointTemperatureHeating = nil, setbackTemperatureHeating = nil, heatLowered = nil, setpointTemperatureCooling = nil, setupTemperatureCooling = nil, aCAdjusted = nil, spaces = nil, userDefinedFields = nil)
      @premisesName = premisesName
      @deliveryIDs = deliveryIDs
      @hVACScheduleIDs = hVACScheduleIDs
      @setpointTemperatureHeating = setpointTemperatureHeating
      @setbackTemperatureHeating = setbackTemperatureHeating
      @heatLowered = heatLowered
      @setpointTemperatureCooling = setpointTemperatureCooling
      @setupTemperatureCooling = setupTemperatureCooling
      @aCAdjusted = aCAdjusted
      @spaces = spaces
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SpaceType
  #   premisesName - SOAP::SOAPString
  #   premisesNotes - SOAP::SOAPString
  #   premisesIdentifiers - BuildingSync::PremisesIdentifiers
  #   occupancyClassification - BuildingSync::OccupancyClassificationType
  #   occupancyLevels - BuildingSync::OccupancyLevels
  #   typicalOccupantUsages - BuildingSync::TypicalOccupantUsages
  #   occupancyScheduleIDs - BuildingSync::SpaceType::OccupancyScheduleIDs
  #   occupantsActivityLevel - SOAP::SOAPString
  #   daylitFloorArea - SOAP::SOAPDecimal
  #   daylightingIlluminanceSetpoint - BuildingSync::SpaceType::DaylightingIlluminanceSetpoint
  #   primaryContactID - BuildingSync::PrimaryContactID
  #   tenantIDs - BuildingSync::TenantIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   percentageOfCommonSpace - BuildingSync::SpaceType::PercentageOfCommonSpace
  #   conditionedVolume - BuildingSync::SpaceType::ConditionedVolume
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   area - BuildingSync::Area
  #   volume - BuildingSync::Volume
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   spaceBoundary - BuildingSync::SpaceBoundary
  #   xmlattr_ID - SOAP::SOAPID
  class SpaceType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: OccupancyScheduleIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}OccupancyScheduleIDs
    class OccupancyScheduleIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}OccupancyScheduleID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class OccupancyScheduleID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: DaylightingIlluminanceSetpoint
    # {http://buildingsync.net/schemas/bedes-auc/2019}DaylightingIlluminanceSetpoint
    #   xmlattr_Source - SOAP::SOAPString
    class DaylightingIlluminanceSetpoint < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PercentageOfCommonSpace
    # {http://buildingsync.net/schemas/bedes-auc/2019}PercentageOfCommonSpace
    #   xmlattr_Source - SOAP::SOAPString
    class PercentageOfCommonSpace < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ConditionedVolume
    # {http://buildingsync.net/schemas/bedes-auc/2019}ConditionedVolume
    #   xmlattr_Source - SOAP::SOAPString
    class ConditionedVolume < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :premisesName
    attr_accessor :premisesNotes
    attr_accessor :premisesIdentifiers
    attr_accessor :occupancyClassification
    attr_accessor :occupancyLevels
    attr_accessor :typicalOccupantUsages
    attr_accessor :occupancyScheduleIDs
    attr_accessor :occupantsActivityLevel
    attr_accessor :daylitFloorArea
    attr_accessor :daylightingIlluminanceSetpoint
    attr_accessor :primaryContactID
    attr_accessor :tenantIDs
    attr_accessor :floorAreas
    attr_accessor :percentageOfCommonSpace
    attr_accessor :conditionedVolume
    attr_accessor :userDefinedFields
    attr_accessor :area
    attr_accessor :volume
    attr_accessor :planarGeometry
    attr_accessor :shellGeometry
    attr_accessor :spaceBoundary

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(premisesName = nil, premisesNotes = nil, premisesIdentifiers = nil, occupancyClassification = nil, occupancyLevels = nil, typicalOccupantUsages = nil, occupancyScheduleIDs = nil, occupantsActivityLevel = nil, daylitFloorArea = nil, daylightingIlluminanceSetpoint = nil, primaryContactID = nil, tenantIDs = [], floorAreas = nil, percentageOfCommonSpace = nil, conditionedVolume = nil, userDefinedFields = nil, area = nil, volume = nil, planarGeometry = nil, shellGeometry = nil, spaceBoundary = [])
      @premisesName = premisesName
      @premisesNotes = premisesNotes
      @premisesIdentifiers = premisesIdentifiers
      @occupancyClassification = occupancyClassification
      @occupancyLevels = occupancyLevels
      @typicalOccupantUsages = typicalOccupantUsages
      @occupancyScheduleIDs = occupancyScheduleIDs
      @occupantsActivityLevel = occupantsActivityLevel
      @daylitFloorArea = daylitFloorArea
      @daylightingIlluminanceSetpoint = daylightingIlluminanceSetpoint
      @primaryContactID = primaryContactID
      @tenantIDs = tenantIDs
      @floorAreas = floorAreas
      @percentageOfCommonSpace = percentageOfCommonSpace
      @conditionedVolume = conditionedVolume
      @userDefinedFields = userDefinedFields
      @area = area
      @volume = volume
      @planarGeometry = planarGeometry
      @shellGeometry = shellGeometry
      @spaceBoundary = spaceBoundary
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ScheduleType
  #   schedulePeriodBeginDate - SOAP::SOAPDate
  #   schedulePeriodEndDate - SOAP::SOAPDate
  #   scheduleDetails - BuildingSync::ScheduleType::ScheduleDetails
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class ScheduleType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: ScheduleDetails
    # {http://buildingsync.net/schemas/bedes-auc/2019}ScheduleDetails
    class ScheduleDetails < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}ScheduleDetail
      #   dayType - SOAP::SOAPString
      #   scheduleCategory - SOAP::SOAPString
      #   dayStartTime - SOAP::SOAPTime
      #   dayEndTime - SOAP::SOAPTime
      #   partialOperationPercentage - BuildingSync::ScheduleType::ScheduleDetails::ScheduleDetail::PartialOperationPercentage
      class ScheduleDetail

        # inner class for member: PartialOperationPercentage
        # {http://buildingsync.net/schemas/bedes-auc/2019}PartialOperationPercentage
        #   xmlattr_Source - SOAP::SOAPString
        class PartialOperationPercentage < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :dayType
        attr_accessor :scheduleCategory
        attr_accessor :dayStartTime
        attr_accessor :dayEndTime
        attr_accessor :partialOperationPercentage

        def initialize(dayType = nil, scheduleCategory = nil, dayStartTime = nil, dayEndTime = nil, partialOperationPercentage = nil)
          @dayType = dayType
          @scheduleCategory = scheduleCategory
          @dayStartTime = dayStartTime
          @dayEndTime = dayEndTime
          @partialOperationPercentage = partialOperationPercentage
        end
      end
    end

    attr_accessor :schedulePeriodBeginDate
    attr_accessor :schedulePeriodEndDate
    attr_accessor :scheduleDetails
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(schedulePeriodBeginDate = nil, schedulePeriodEndDate = nil, scheduleDetails = nil, linkedPremises = nil, userDefinedFields = nil)
      @schedulePeriodBeginDate = schedulePeriodBeginDate
      @schedulePeriodEndDate = schedulePeriodEndDate
      @scheduleDetails = scheduleDetails
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ContactType
  #   contactRoles - BuildingSync::ContactType::ContactRoles
  #   contactName - SOAP::SOAPString
  #   contactCompany - SOAP::SOAPString
  #   contactTitle - SOAP::SOAPString
  #   address - BuildingSync::Address
  #   contactTelephoneNumbers - BuildingSync::ContactType::ContactTelephoneNumbers
  #   contactEmailAddresses - BuildingSync::ContactType::ContactEmailAddresses
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class ContactType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: ContactRoles
    # {http://buildingsync.net/schemas/bedes-auc/2019}ContactRoles
    class ContactRoles < ::Array
    end

    # inner class for member: ContactTelephoneNumbers
    # {http://buildingsync.net/schemas/bedes-auc/2019}ContactTelephoneNumbers
    class ContactTelephoneNumbers < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}ContactTelephoneNumber
      #   contactTelephoneNumberLabel - SOAP::SOAPString
      #   telephoneNumber - SOAP::SOAPString
      class ContactTelephoneNumber
        attr_accessor :contactTelephoneNumberLabel
        attr_accessor :telephoneNumber

        def initialize(contactTelephoneNumberLabel = nil, telephoneNumber = nil)
          @contactTelephoneNumberLabel = contactTelephoneNumberLabel
          @telephoneNumber = telephoneNumber
        end
      end
    end

    # inner class for member: ContactEmailAddresses
    # {http://buildingsync.net/schemas/bedes-auc/2019}ContactEmailAddresses
    class ContactEmailAddresses < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}ContactEmailAddress
      #   contactEmailAddressLabel - SOAP::SOAPString
      #   emailAddress - SOAP::SOAPString
      class ContactEmailAddress
        attr_accessor :contactEmailAddressLabel
        attr_accessor :emailAddress

        def initialize(contactEmailAddressLabel = nil, emailAddress = nil)
          @contactEmailAddressLabel = contactEmailAddressLabel
          @emailAddress = emailAddress
        end
      end
    end

    attr_accessor :contactRoles
    attr_accessor :contactName
    attr_accessor :contactCompany
    attr_accessor :contactTitle
    attr_accessor :address
    attr_accessor :contactTelephoneNumbers
    attr_accessor :contactEmailAddresses
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(contactRoles = nil, contactName = nil, contactCompany = nil, contactTitle = nil, address = nil, contactTelephoneNumbers = nil, contactEmailAddresses = nil, userDefinedFields = nil)
      @contactRoles = contactRoles
      @contactName = contactName
      @contactCompany = contactCompany
      @contactTitle = contactTitle
      @address = address
      @contactTelephoneNumbers = contactTelephoneNumbers
      @contactEmailAddresses = contactEmailAddresses
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TenantType
  #   tenantName - SOAP::SOAPString
  #   address - BuildingSync::Address
  #   tenantTelephoneNumbers - BuildingSync::TenantType::TenantTelephoneNumbers
  #   tenantEmailAddresses - BuildingSync::TenantType::TenantEmailAddresses
  #   contactIDs - BuildingSync::TenantType::ContactIDs
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class TenantType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: TenantTelephoneNumbers
    # {http://buildingsync.net/schemas/bedes-auc/2019}TenantTelephoneNumbers
    class TenantTelephoneNumbers < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}TenantTelephoneNumber
      #   tenantTelephoneNumberLabel - SOAP::SOAPString
      #   telephoneNumber - SOAP::SOAPString
      class TenantTelephoneNumber
        attr_accessor :tenantTelephoneNumberLabel
        attr_accessor :telephoneNumber

        def initialize(tenantTelephoneNumberLabel = nil, telephoneNumber = nil)
          @tenantTelephoneNumberLabel = tenantTelephoneNumberLabel
          @telephoneNumber = telephoneNumber
        end
      end
    end

    # inner class for member: TenantEmailAddresses
    # {http://buildingsync.net/schemas/bedes-auc/2019}TenantEmailAddresses
    class TenantEmailAddresses < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}TenantEmailAddress
      #   tenantEmailAddressLabel - SOAP::SOAPString
      #   emailAddress - SOAP::SOAPString
      class TenantEmailAddress
        attr_accessor :tenantEmailAddressLabel
        attr_accessor :emailAddress

        def initialize(tenantEmailAddressLabel = nil, emailAddress = nil)
          @tenantEmailAddressLabel = tenantEmailAddressLabel
          @emailAddress = emailAddress
        end
      end
    end

    # inner class for member: ContactIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}ContactIDs
    class ContactIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}ContactID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class ContactID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    attr_accessor :tenantName
    attr_accessor :address
    attr_accessor :tenantTelephoneNumbers
    attr_accessor :tenantEmailAddresses
    attr_accessor :contactIDs
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(tenantName = nil, address = nil, tenantTelephoneNumbers = nil, tenantEmailAddresses = nil, contactIDs = nil, userDefinedFields = nil)
      @tenantName = tenantName
      @address = address
      @tenantTelephoneNumbers = tenantTelephoneNumbers
      @tenantEmailAddresses = tenantEmailAddresses
      @contactIDs = contactIDs
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ScenarioType
  #   scenarioName - SOAP::SOAPString
  #   scenarioNotes - SOAP::SOAPString
  #   temporalStatus - SOAP::SOAPString
  #   normalization - SOAP::SOAPString
  #   scenarioType - BuildingSync::ScenarioType::ScenarioType
  #   weatherType - BuildingSync::ScenarioType::WeatherType
  #   resourceUses - BuildingSync::ScenarioType::ResourceUses
  #   timeSeriesData - BuildingSync::ScenarioType::TimeSeriesData
  #   allResourceTotals - BuildingSync::ScenarioType::AllResourceTotals
  #   annualHeatingDegreeDays - BuildingSync::ScenarioType::AnnualHeatingDegreeDays
  #   annualCoolingDegreeDays - BuildingSync::ScenarioType::AnnualCoolingDegreeDays
  #   hDDBaseTemperature - BuildingSync::HDDBaseTemperature
  #   cDDBaseTemperature - BuildingSync::CDDBaseTemperature
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class ScenarioType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: ScenarioType
    # {http://buildingsync.net/schemas/bedes-auc/2019}ScenarioType
    #   currentBuilding - BuildingSync::ScenarioType::ScenarioType::CurrentBuilding
    #   benchmark - BuildingSync::ScenarioType::ScenarioType::Benchmark
    #   target - BuildingSync::ScenarioType::ScenarioType::Target
    #   packageOfMeasures - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures
    #   derivedModel - BuildingSync::DerivedModelType
    #   other - BuildingSync::ScenarioType::ScenarioType::Other
    class ScenarioType

      # inner class for member: CurrentBuilding
      # {http://buildingsync.net/schemas/bedes-auc/2019}CurrentBuilding
      #   calculationMethod - BuildingSync::CalculationMethodType
      #   assetScore - BuildingSync::AssetScore
      #   eNERGYSTARScore - BuildingSync::ENERGYSTARScore
      class CurrentBuilding
        attr_accessor :calculationMethod
        attr_accessor :assetScore
        attr_accessor :eNERGYSTARScore

        def initialize(calculationMethod = nil, assetScore = nil, eNERGYSTARScore = nil)
          @calculationMethod = calculationMethod
          @assetScore = assetScore
          @eNERGYSTARScore = eNERGYSTARScore
        end
      end

      # inner class for member: Benchmark
      # {http://buildingsync.net/schemas/bedes-auc/2019}Benchmark
      #   benchmarkType - BuildingSync::ScenarioType::ScenarioType::Benchmark::BenchmarkType
      #   benchmarkTool - SOAP::SOAPString
      #   benchmarkYear - SOAP::SOAPGYear
      #   benchmarkValue - BuildingSync::ScenarioType::ScenarioType::Benchmark::BenchmarkValue
      #   linkedPremises - BuildingSync::LinkedPremises
      class Benchmark

        # inner class for member: BenchmarkType
        # {http://buildingsync.net/schemas/bedes-auc/2019}BenchmarkType
        #   portfolioManager - BuildingSync::PortfolioManagerType
        #   cBECS - BuildingSync::CBECSType
        #   codeMinimum - BuildingSync::ScenarioType::ScenarioType::Benchmark::BenchmarkType::CodeMinimum
        #   standardPractice - BuildingSync::ScenarioType::ScenarioType::Benchmark::BenchmarkType::StandardPractice
        #   other - BuildingSync::ScenarioType::ScenarioType::Benchmark::BenchmarkType::Other
        class BenchmarkType

          # inner class for member: CodeMinimum
          # {http://buildingsync.net/schemas/bedes-auc/2019}CodeMinimum
          #   codeName - SOAP::SOAPString
          #   codeVersion - SOAP::SOAPString
          #   codeYear - SOAP::SOAPGYear
          #   calculationMethod - BuildingSync::CalculationMethodType
          class CodeMinimum
            attr_accessor :codeName
            attr_accessor :codeVersion
            attr_accessor :codeYear
            attr_accessor :calculationMethod

            def initialize(codeName = nil, codeVersion = nil, codeYear = nil, calculationMethod = nil)
              @codeName = codeName
              @codeVersion = codeVersion
              @codeYear = codeYear
              @calculationMethod = calculationMethod
            end
          end

          # inner class for member: StandardPractice
          # {http://buildingsync.net/schemas/bedes-auc/2019}StandardPractice
          #   standardPracticeDescription - SOAP::SOAPString
          #   calculationMethod - BuildingSync::CalculationMethodType
          class StandardPractice
            attr_accessor :standardPracticeDescription
            attr_accessor :calculationMethod

            def initialize(standardPracticeDescription = nil, calculationMethod = nil)
              @standardPracticeDescription = standardPracticeDescription
              @calculationMethod = calculationMethod
            end
          end

          # inner class for member: Other
          # {http://buildingsync.net/schemas/bedes-auc/2019}Other
          #   otherBenchmarkDescription - SOAP::SOAPString
          #   calculationMethod - BuildingSync::CalculationMethodType
          class Other
            attr_accessor :otherBenchmarkDescription
            attr_accessor :calculationMethod

            def initialize(otherBenchmarkDescription = nil, calculationMethod = nil)
              @otherBenchmarkDescription = otherBenchmarkDescription
              @calculationMethod = calculationMethod
            end
          end

          attr_accessor :portfolioManager
          attr_accessor :cBECS
          attr_accessor :codeMinimum
          attr_accessor :standardPractice
          attr_accessor :other

          def initialize(portfolioManager = nil, cBECS = nil, codeMinimum = nil, standardPractice = nil, other = nil)
            @portfolioManager = portfolioManager
            @cBECS = cBECS
            @codeMinimum = codeMinimum
            @standardPractice = standardPractice
            @other = other
          end
        end

        # inner class for member: BenchmarkValue
        # {http://buildingsync.net/schemas/bedes-auc/2019}BenchmarkValue
        #   xmlattr_Source - SOAP::SOAPString
        class BenchmarkValue < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :benchmarkType
        attr_accessor :benchmarkTool
        attr_accessor :benchmarkYear
        attr_accessor :benchmarkValue
        attr_accessor :linkedPremises

        def initialize(benchmarkType = nil, benchmarkTool = nil, benchmarkYear = nil, benchmarkValue = nil, linkedPremises = nil)
          @benchmarkType = benchmarkType
          @benchmarkTool = benchmarkTool
          @benchmarkYear = benchmarkYear
          @benchmarkValue = benchmarkValue
          @linkedPremises = linkedPremises
        end
      end

      # inner class for member: Target
      # {http://buildingsync.net/schemas/bedes-auc/2019}Target
      #   referenceCase - BuildingSync::ReferenceCase
      #   annualSavingsSiteEnergy - BuildingSync::AnnualSavingsSiteEnergy
      #   annualSavingsSourceEnergy - BuildingSync::AnnualSavingsSourceEnergy
      #   annualSavingsCost - BuildingSync::AnnualSavingsCost
      #   summerPeakElectricityReduction - BuildingSync::SummerPeakElectricityReduction
      #   winterPeakElectricityReduction - BuildingSync::WinterPeakElectricityReduction
      #   annualPeakElectricityReduction - BuildingSync::AnnualPeakElectricityReduction
      #   annualWaterSavings - BuildingSync::AnnualWaterSavings
      #   annualWaterCostSavings - BuildingSync::AnnualWaterCostSavings
      #   annualSavingsAverageGHGEmissions - BuildingSync::AnnualSavingsAverageGHGEmissions
      #   annualSavingsMarginalGHGEmissions - BuildingSync::AnnualSavingsMarginalGHGEmissions
      #   annualSavingsGHGEmissionIntensity - BuildingSync::AnnualSavingsGHGEmissionIntensity
      #   simplePayback - BuildingSync::SimplePayback
      #   netPresentValue - BuildingSync::NetPresentValue
      #   internalRateOfReturn - BuildingSync::InternalRateOfReturn
      #   assetScore - BuildingSync::AssetScore
      #   eNERGYSTARScore - BuildingSync::ENERGYSTARScore
      class Target
        attr_accessor :referenceCase
        attr_accessor :annualSavingsSiteEnergy
        attr_accessor :annualSavingsSourceEnergy
        attr_accessor :annualSavingsCost
        attr_accessor :summerPeakElectricityReduction
        attr_accessor :winterPeakElectricityReduction
        attr_accessor :annualPeakElectricityReduction
        attr_accessor :annualWaterSavings
        attr_accessor :annualWaterCostSavings
        attr_accessor :annualSavingsAverageGHGEmissions
        attr_accessor :annualSavingsMarginalGHGEmissions
        attr_accessor :annualSavingsGHGEmissionIntensity
        attr_accessor :simplePayback
        attr_accessor :netPresentValue
        attr_accessor :internalRateOfReturn
        attr_accessor :assetScore
        attr_accessor :eNERGYSTARScore

        def initialize(referenceCase = nil, annualSavingsSiteEnergy = nil, annualSavingsSourceEnergy = nil, annualSavingsCost = nil, summerPeakElectricityReduction = nil, winterPeakElectricityReduction = nil, annualPeakElectricityReduction = nil, annualWaterSavings = nil, annualWaterCostSavings = nil, annualSavingsAverageGHGEmissions = nil, annualSavingsMarginalGHGEmissions = nil, annualSavingsGHGEmissionIntensity = nil, simplePayback = nil, netPresentValue = nil, internalRateOfReturn = nil, assetScore = nil, eNERGYSTARScore = nil)
          @referenceCase = referenceCase
          @annualSavingsSiteEnergy = annualSavingsSiteEnergy
          @annualSavingsSourceEnergy = annualSavingsSourceEnergy
          @annualSavingsCost = annualSavingsCost
          @summerPeakElectricityReduction = summerPeakElectricityReduction
          @winterPeakElectricityReduction = winterPeakElectricityReduction
          @annualPeakElectricityReduction = annualPeakElectricityReduction
          @annualWaterSavings = annualWaterSavings
          @annualWaterCostSavings = annualWaterCostSavings
          @annualSavingsAverageGHGEmissions = annualSavingsAverageGHGEmissions
          @annualSavingsMarginalGHGEmissions = annualSavingsMarginalGHGEmissions
          @annualSavingsGHGEmissionIntensity = annualSavingsGHGEmissionIntensity
          @simplePayback = simplePayback
          @netPresentValue = netPresentValue
          @internalRateOfReturn = internalRateOfReturn
          @assetScore = assetScore
          @eNERGYSTARScore = eNERGYSTARScore
        end
      end

      # inner class for member: PackageOfMeasures
      # {http://buildingsync.net/schemas/bedes-auc/2019}PackageOfMeasures
      #   referenceCase - BuildingSync::ReferenceCase
      #   measureIDs - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::MeasureIDs
      #   costCategory - SOAP::SOAPString
      #   simpleImpactAnalysis - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::SimpleImpactAnalysis
      #   calculationMethod - BuildingSync::CalculationMethodType
      #   annualSavingsSiteEnergy - BuildingSync::AnnualSavingsSiteEnergy
      #   annualSavingsSourceEnergy - BuildingSync::AnnualSavingsSourceEnergy
      #   annualSavingsCost - BuildingSync::AnnualSavingsCost
      #   annualSavingsByFuels - BuildingSync::AnnualSavingsByFuels
      #   summerPeakElectricityReduction - BuildingSync::SummerPeakElectricityReduction
      #   winterPeakElectricityReduction - BuildingSync::WinterPeakElectricityReduction
      #   annualPeakElectricityReduction - BuildingSync::AnnualPeakElectricityReduction
      #   annualDemandSavingsCost - BuildingSync::AnnualDemandSavingsCost
      #   annualWaterSavings - BuildingSync::AnnualWaterSavings
      #   annualWaterCostSavings - BuildingSync::AnnualWaterCostSavings
      #   annualSavingsAverageGHGEmissions - BuildingSync::AnnualSavingsAverageGHGEmissions
      #   annualSavingsMarginalGHGEmissions - BuildingSync::AnnualSavingsMarginalGHGEmissions
      #   annualSavingsGHGEmissionIntensity - BuildingSync::AnnualSavingsGHGEmissionIntensity
      #   implementationPeriod - SOAP::SOAPInteger
      #   packageFirstCost - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::PackageFirstCost
      #   mVCost - BuildingSync::MVCost
      #   oMCostAnnualSavings - BuildingSync::OMCostAnnualSavings
      #   equipmentDisposalAndSalvageCosts - BuildingSync::EquipmentDisposalAndSalvageCosts
      #   implementationPeriodCostSavings - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::ImplementationPeriodCostSavings
      #   percentGuaranteedSavings - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::PercentGuaranteedSavings
      #   projectMarkup - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::ProjectMarkup
      #   fundingFromIncentives - BuildingSync::FundingFromIncentives
      #   fundingFromTaxCredits - BuildingSync::FundingFromTaxCredits
      #   otherFinancialIncentives - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::OtherFinancialIncentives
      #   recurringIncentives - BuildingSync::ScenarioType::ScenarioType::PackageOfMeasures::RecurringIncentives
      #   nPVofTaxImplications - BuildingSync::NPVofTaxImplications
      #   costEffectivenessScreeningMethod - SOAP::SOAPString
      #   simplePayback - BuildingSync::SimplePayback
      #   netPresentValue - BuildingSync::NetPresentValue
      #   internalRateOfReturn - BuildingSync::InternalRateOfReturn
      #   nonquantifiableFactors - SOAP::SOAPString
      #   assetScore - BuildingSync::AssetScore
      #   eNERGYSTARScore - BuildingSync::ENERGYSTARScore
      #   userDefinedFields - BuildingSync::UserDefinedFields
      #   xmlattr_ID - SOAP::SOAPID
      class PackageOfMeasures
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: MeasureIDs
        # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureIDs
        class MeasureIDs < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureID
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class MeasureID
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end
        end

        # inner class for member: SimpleImpactAnalysis
        # {http://buildingsync.net/schemas/bedes-auc/2019}SimpleImpactAnalysis
        #   impactOnOccupantComfort - SOAP::SOAPString
        #   estimatedCost - BuildingSync::LowMedHigh
        #   estimatedAnnualSavings - BuildingSync::LowMedHigh
        #   estimatedROI - BuildingSync::LowMedHigh
        #   priority - BuildingSync::LowMedHigh
        class SimpleImpactAnalysis
          attr_accessor :impactOnOccupantComfort
          attr_accessor :estimatedCost
          attr_accessor :estimatedAnnualSavings
          attr_accessor :estimatedROI
          attr_accessor :priority

          def initialize(impactOnOccupantComfort = nil, estimatedCost = nil, estimatedAnnualSavings = nil, estimatedROI = nil, priority = nil)
            @impactOnOccupantComfort = impactOnOccupantComfort
            @estimatedCost = estimatedCost
            @estimatedAnnualSavings = estimatedAnnualSavings
            @estimatedROI = estimatedROI
            @priority = priority
          end
        end

        # inner class for member: PackageFirstCost
        # {http://buildingsync.net/schemas/bedes-auc/2019}PackageFirstCost
        #   xmlattr_Source - SOAP::SOAPString
        class PackageFirstCost < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: ImplementationPeriodCostSavings
        # {http://buildingsync.net/schemas/bedes-auc/2019}ImplementationPeriodCostSavings
        #   xmlattr_Source - SOAP::SOAPString
        class ImplementationPeriodCostSavings < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: PercentGuaranteedSavings
        # {http://buildingsync.net/schemas/bedes-auc/2019}PercentGuaranteedSavings
        #   xmlattr_Source - SOAP::SOAPString
        class PercentGuaranteedSavings < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: ProjectMarkup
        # {http://buildingsync.net/schemas/bedes-auc/2019}ProjectMarkup
        #   xmlattr_Source - SOAP::SOAPString
        class ProjectMarkup < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: OtherFinancialIncentives
        # {http://buildingsync.net/schemas/bedes-auc/2019}OtherFinancialIncentives
        #   xmlattr_Source - SOAP::SOAPString
        class OtherFinancialIncentives < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: RecurringIncentives
        # {http://buildingsync.net/schemas/bedes-auc/2019}RecurringIncentives
        #   xmlattr_Source - SOAP::SOAPString
        class RecurringIncentives < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :referenceCase
        attr_accessor :measureIDs
        attr_accessor :costCategory
        attr_accessor :simpleImpactAnalysis
        attr_accessor :calculationMethod
        attr_accessor :annualSavingsSiteEnergy
        attr_accessor :annualSavingsSourceEnergy
        attr_accessor :annualSavingsCost
        attr_accessor :annualSavingsByFuels
        attr_accessor :summerPeakElectricityReduction
        attr_accessor :winterPeakElectricityReduction
        attr_accessor :annualPeakElectricityReduction
        attr_accessor :annualDemandSavingsCost
        attr_accessor :annualWaterSavings
        attr_accessor :annualWaterCostSavings
        attr_accessor :annualSavingsAverageGHGEmissions
        attr_accessor :annualSavingsMarginalGHGEmissions
        attr_accessor :annualSavingsGHGEmissionIntensity
        attr_accessor :implementationPeriod
        attr_accessor :packageFirstCost
        attr_accessor :mVCost
        attr_accessor :oMCostAnnualSavings
        attr_accessor :equipmentDisposalAndSalvageCosts
        attr_accessor :implementationPeriodCostSavings
        attr_accessor :percentGuaranteedSavings
        attr_accessor :projectMarkup
        attr_accessor :fundingFromIncentives
        attr_accessor :fundingFromTaxCredits
        attr_accessor :otherFinancialIncentives
        attr_accessor :recurringIncentives
        attr_accessor :nPVofTaxImplications
        attr_accessor :costEffectivenessScreeningMethod
        attr_accessor :simplePayback
        attr_accessor :netPresentValue
        attr_accessor :internalRateOfReturn
        attr_accessor :nonquantifiableFactors
        attr_accessor :assetScore
        attr_accessor :eNERGYSTARScore
        attr_accessor :userDefinedFields

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(referenceCase = nil, measureIDs = nil, costCategory = nil, simpleImpactAnalysis = nil, calculationMethod = nil, annualSavingsSiteEnergy = nil, annualSavingsSourceEnergy = nil, annualSavingsCost = nil, annualSavingsByFuels = nil, summerPeakElectricityReduction = nil, winterPeakElectricityReduction = nil, annualPeakElectricityReduction = nil, annualDemandSavingsCost = nil, annualWaterSavings = nil, annualWaterCostSavings = nil, annualSavingsAverageGHGEmissions = nil, annualSavingsMarginalGHGEmissions = nil, annualSavingsGHGEmissionIntensity = nil, implementationPeriod = nil, packageFirstCost = nil, mVCost = nil, oMCostAnnualSavings = nil, equipmentDisposalAndSalvageCosts = nil, implementationPeriodCostSavings = nil, percentGuaranteedSavings = nil, projectMarkup = nil, fundingFromIncentives = nil, fundingFromTaxCredits = nil, otherFinancialIncentives = nil, recurringIncentives = nil, nPVofTaxImplications = nil, costEffectivenessScreeningMethod = nil, simplePayback = nil, netPresentValue = nil, internalRateOfReturn = nil, nonquantifiableFactors = nil, assetScore = nil, eNERGYSTARScore = nil, userDefinedFields = nil)
          @referenceCase = referenceCase
          @measureIDs = measureIDs
          @costCategory = costCategory
          @simpleImpactAnalysis = simpleImpactAnalysis
          @calculationMethod = calculationMethod
          @annualSavingsSiteEnergy = annualSavingsSiteEnergy
          @annualSavingsSourceEnergy = annualSavingsSourceEnergy
          @annualSavingsCost = annualSavingsCost
          @annualSavingsByFuels = annualSavingsByFuels
          @summerPeakElectricityReduction = summerPeakElectricityReduction
          @winterPeakElectricityReduction = winterPeakElectricityReduction
          @annualPeakElectricityReduction = annualPeakElectricityReduction
          @annualDemandSavingsCost = annualDemandSavingsCost
          @annualWaterSavings = annualWaterSavings
          @annualWaterCostSavings = annualWaterCostSavings
          @annualSavingsAverageGHGEmissions = annualSavingsAverageGHGEmissions
          @annualSavingsMarginalGHGEmissions = annualSavingsMarginalGHGEmissions
          @annualSavingsGHGEmissionIntensity = annualSavingsGHGEmissionIntensity
          @implementationPeriod = implementationPeriod
          @packageFirstCost = packageFirstCost
          @mVCost = mVCost
          @oMCostAnnualSavings = oMCostAnnualSavings
          @equipmentDisposalAndSalvageCosts = equipmentDisposalAndSalvageCosts
          @implementationPeriodCostSavings = implementationPeriodCostSavings
          @percentGuaranteedSavings = percentGuaranteedSavings
          @projectMarkup = projectMarkup
          @fundingFromIncentives = fundingFromIncentives
          @fundingFromTaxCredits = fundingFromTaxCredits
          @otherFinancialIncentives = otherFinancialIncentives
          @recurringIncentives = recurringIncentives
          @nPVofTaxImplications = nPVofTaxImplications
          @costEffectivenessScreeningMethod = costEffectivenessScreeningMethod
          @simplePayback = simplePayback
          @netPresentValue = netPresentValue
          @internalRateOfReturn = internalRateOfReturn
          @nonquantifiableFactors = nonquantifiableFactors
          @assetScore = assetScore
          @eNERGYSTARScore = eNERGYSTARScore
          @userDefinedFields = userDefinedFields
          @__xmlattr = {}
        end
      end

      # inner class for member: Other
      # {http://buildingsync.net/schemas/bedes-auc/2019}Other
      #   referenceCase - BuildingSync::ReferenceCase
      #   annualSavingsSiteEnergy - BuildingSync::AnnualSavingsSiteEnergy
      #   annualSavingsSourceEnergy - BuildingSync::AnnualSavingsSourceEnergy
      #   annualSavingsCost - BuildingSync::AnnualSavingsCost
      #   summerPeakElectricityReduction - BuildingSync::SummerPeakElectricityReduction
      #   winterPeakElectricityReduction - BuildingSync::WinterPeakElectricityReduction
      #   annualPeakElectricityReduction - BuildingSync::AnnualPeakElectricityReduction
      #   annualWaterSavings - BuildingSync::AnnualWaterSavings
      #   annualWaterCostSavings - BuildingSync::AnnualWaterCostSavings
      #   annualSavingsAverageGHGEmissions - BuildingSync::AnnualSavingsAverageGHGEmissions
      #   annualSavingsMarginalGHGEmissions - BuildingSync::AnnualSavingsMarginalGHGEmissions
      #   annualSavingsGHGEmissionIntensity - BuildingSync::AnnualSavingsGHGEmissionIntensity
      #   simplePayback - BuildingSync::SimplePayback
      #   netPresentValue - BuildingSync::NetPresentValue
      #   internalRateOfReturn - BuildingSync::InternalRateOfReturn
      #   assetScore - BuildingSync::AssetScore
      #   eNERGYSTARScore - BuildingSync::ENERGYSTARScore
      class Other
        attr_accessor :referenceCase
        attr_accessor :annualSavingsSiteEnergy
        attr_accessor :annualSavingsSourceEnergy
        attr_accessor :annualSavingsCost
        attr_accessor :summerPeakElectricityReduction
        attr_accessor :winterPeakElectricityReduction
        attr_accessor :annualPeakElectricityReduction
        attr_accessor :annualWaterSavings
        attr_accessor :annualWaterCostSavings
        attr_accessor :annualSavingsAverageGHGEmissions
        attr_accessor :annualSavingsMarginalGHGEmissions
        attr_accessor :annualSavingsGHGEmissionIntensity
        attr_accessor :simplePayback
        attr_accessor :netPresentValue
        attr_accessor :internalRateOfReturn
        attr_accessor :assetScore
        attr_accessor :eNERGYSTARScore

        def initialize(referenceCase = nil, annualSavingsSiteEnergy = nil, annualSavingsSourceEnergy = nil, annualSavingsCost = nil, summerPeakElectricityReduction = nil, winterPeakElectricityReduction = nil, annualPeakElectricityReduction = nil, annualWaterSavings = nil, annualWaterCostSavings = nil, annualSavingsAverageGHGEmissions = nil, annualSavingsMarginalGHGEmissions = nil, annualSavingsGHGEmissionIntensity = nil, simplePayback = nil, netPresentValue = nil, internalRateOfReturn = nil, assetScore = nil, eNERGYSTARScore = nil)
          @referenceCase = referenceCase
          @annualSavingsSiteEnergy = annualSavingsSiteEnergy
          @annualSavingsSourceEnergy = annualSavingsSourceEnergy
          @annualSavingsCost = annualSavingsCost
          @summerPeakElectricityReduction = summerPeakElectricityReduction
          @winterPeakElectricityReduction = winterPeakElectricityReduction
          @annualPeakElectricityReduction = annualPeakElectricityReduction
          @annualWaterSavings = annualWaterSavings
          @annualWaterCostSavings = annualWaterCostSavings
          @annualSavingsAverageGHGEmissions = annualSavingsAverageGHGEmissions
          @annualSavingsMarginalGHGEmissions = annualSavingsMarginalGHGEmissions
          @annualSavingsGHGEmissionIntensity = annualSavingsGHGEmissionIntensity
          @simplePayback = simplePayback
          @netPresentValue = netPresentValue
          @internalRateOfReturn = internalRateOfReturn
          @assetScore = assetScore
          @eNERGYSTARScore = eNERGYSTARScore
        end
      end

      attr_accessor :currentBuilding
      attr_accessor :benchmark
      attr_accessor :target
      attr_accessor :packageOfMeasures
      attr_accessor :derivedModel
      attr_accessor :other

      def initialize(currentBuilding = nil, benchmark = nil, target = nil, packageOfMeasures = nil, derivedModel = nil, other = nil)
        @currentBuilding = currentBuilding
        @benchmark = benchmark
        @target = target
        @packageOfMeasures = packageOfMeasures
        @derivedModel = derivedModel
        @other = other
      end
    end

    # inner class for member: WeatherType
    # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherType
    #   normalized - BuildingSync::ScenarioType::WeatherType::Normalized
    #   adjustedToYear - BuildingSync::ScenarioType::WeatherType::AdjustedToYear
    #   actual - BuildingSync::ScenarioType::WeatherType::Actual
    #   other - BuildingSync::OtherType
    class WeatherType

      # inner class for member: Normalized
      # {http://buildingsync.net/schemas/bedes-auc/2019}Normalized
      #   normalizationYears - BuildingSync::ScenarioType::WeatherType::Normalized::NormalizationYears
      #   normalizationStartYear - SOAP::SOAPGYear
      #   weatherDataSource - SOAP::SOAPString
      class Normalized

        # inner class for member: NormalizationYears
        # {http://buildingsync.net/schemas/bedes-auc/2019}NormalizationYears
        #   xmlattr_Source - SOAP::SOAPString
        class NormalizationYears < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :normalizationYears
        attr_accessor :normalizationStartYear
        attr_accessor :weatherDataSource

        def initialize(normalizationYears = nil, normalizationStartYear = nil, weatherDataSource = nil)
          @normalizationYears = normalizationYears
          @normalizationStartYear = normalizationStartYear
          @weatherDataSource = weatherDataSource
        end
      end

      # inner class for member: AdjustedToYear
      # {http://buildingsync.net/schemas/bedes-auc/2019}AdjustedToYear
      #   weatherYear - SOAP::SOAPGYear
      #   weatherDataSource - SOAP::SOAPString
      class AdjustedToYear
        attr_accessor :weatherYear
        attr_accessor :weatherDataSource

        def initialize(weatherYear = nil, weatherDataSource = nil)
          @weatherYear = weatherYear
          @weatherDataSource = weatherDataSource
        end
      end

      # inner class for member: Actual
      # {http://buildingsync.net/schemas/bedes-auc/2019}Actual
      #   weatherDataSource - SOAP::SOAPString
      class Actual
        attr_accessor :weatherDataSource

        def initialize(weatherDataSource = nil)
          @weatherDataSource = weatherDataSource
        end
      end

      attr_accessor :normalized
      attr_accessor :adjustedToYear
      attr_accessor :actual
      attr_accessor :other

      def initialize(normalized = nil, adjustedToYear = nil, actual = nil, other = nil)
        @normalized = normalized
        @adjustedToYear = adjustedToYear
        @actual = actual
        @other = other
      end
    end

    # inner class for member: ResourceUses
    # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUses
    class ResourceUses < ::Array
    end

    # inner class for member: TimeSeriesData
    # {http://buildingsync.net/schemas/bedes-auc/2019}TimeSeriesData
    class TimeSeriesData < ::Array
    end

    # inner class for member: AllResourceTotals
    # {http://buildingsync.net/schemas/bedes-auc/2019}AllResourceTotals
    class AllResourceTotals < ::Array
    end

    # inner class for member: AnnualHeatingDegreeDays
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualHeatingDegreeDays
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualHeatingDegreeDays < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualCoolingDegreeDays
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualCoolingDegreeDays
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualCoolingDegreeDays < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :scenarioName
    attr_accessor :scenarioNotes
    attr_accessor :temporalStatus
    attr_accessor :normalization
    attr_accessor :scenarioType
    attr_accessor :weatherType
    attr_accessor :resourceUses
    attr_accessor :timeSeriesData
    attr_accessor :allResourceTotals
    attr_accessor :annualHeatingDegreeDays
    attr_accessor :annualCoolingDegreeDays
    attr_accessor :hDDBaseTemperature
    attr_accessor :cDDBaseTemperature
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(scenarioName = nil, scenarioNotes = nil, temporalStatus = nil, normalization = nil, scenarioType = nil, weatherType = nil, resourceUses = nil, timeSeriesData = nil, allResourceTotals = nil, annualHeatingDegreeDays = nil, annualCoolingDegreeDays = nil, hDDBaseTemperature = nil, cDDBaseTemperature = nil, linkedPremises = nil, userDefinedFields = nil)
      @scenarioName = scenarioName
      @scenarioNotes = scenarioNotes
      @temporalStatus = temporalStatus
      @normalization = normalization
      @scenarioType = scenarioType
      @weatherType = weatherType
      @resourceUses = resourceUses
      @timeSeriesData = timeSeriesData
      @allResourceTotals = allResourceTotals
      @annualHeatingDegreeDays = annualHeatingDegreeDays
      @annualCoolingDegreeDays = annualCoolingDegreeDays
      @hDDBaseTemperature = hDDBaseTemperature
      @cDDBaseTemperature = cDDBaseTemperature
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}UtilityType
  #   rateSchedules - BuildingSync::UtilityType::RateSchedules
  #   meteringConfiguration - SOAP::SOAPString
  #   typeOfResourceMeter - SOAP::SOAPString
  #   fuelInterruptibility - SOAP::SOAPString
  #   eIAUtilityID - SOAP::SOAPNonNegativeInteger
  #   utilityName - SOAP::SOAPString
  #   powerPlant - SOAP::SOAPString
  #   utilityMeterNumbers - BuildingSync::UtilityType::UtilityMeterNumbers
  #   utilityAccountNumber - SOAP::SOAPString
  #   utilityBillpayer - SOAP::SOAPString
  #   electricDistributionUtility - SOAP::SOAPString
  #   sourceSiteRatio - BuildingSync::UtilityType::SourceSiteRatio
  #   xmlattr_ID - SOAP::SOAPID
  class UtilityType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: RateSchedules
    # {http://buildingsync.net/schemas/bedes-auc/2019}RateSchedules
    class RateSchedules < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}RateSchedule
      #   rateStructureName - SOAP::SOAPString
      #   typeOfRateStructure - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure
      #   rateStructureSector - SOAP::SOAPString
      #   referenceForRateStructure - SOAP::SOAPString
      #   rateStructureEffectiveDate - SOAP::SOAPDate
      #   rateStructureEndDate - SOAP::SOAPDate
      #   reactivePowerCharge - BuildingSync::UtilityType::RateSchedules::RateSchedule::ReactivePowerCharge
      #   minimumPowerFactorWithoutPenalty - BuildingSync::UtilityType::RateSchedules::RateSchedule::MinimumPowerFactorWithoutPenalty
      #   fixedMonthlyCharge - BuildingSync::UtilityType::RateSchedules::RateSchedule::FixedMonthlyCharge
      #   netMetering - BuildingSync::UtilityType::RateSchedules::RateSchedule::NetMetering
      #   averageMarginalCostRate - BuildingSync::UtilityType::RateSchedules::RateSchedule::AverageMarginalCostRate
      #   xmlattr_ID - SOAP::SOAPID
      class RateSchedule
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: TypeOfRateStructure
        # {http://buildingsync.net/schemas/bedes-auc/2019}TypeOfRateStructure
        #   flatRate - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::FlatRate
        #   timeOfUseRate - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TimeOfUseRate
        #   tieredRates - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates
        #   realTimePricing - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::RealTimePricing
        #   variablePeakPricing - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::VariablePeakPricing
        #   criticalPeakPricing - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::CriticalPeakPricing
        #   criticalPeakRebates - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::CriticalPeakRebates
        #   other - BuildingSync::OtherType
        #   unknown - BuildingSync::UnknownType
        class TypeOfRateStructure

          # inner class for member: FlatRate
          # {http://buildingsync.net/schemas/bedes-auc/2019}FlatRate
          #   ratePeriods - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::FlatRate::RatePeriods
          class FlatRate

            # inner class for member: RatePeriods
            # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriods
            class RatePeriods < ::Array

              # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriod
              #   ratePeriodName - SOAP::SOAPString
              #   applicableStartDateForEnergyRate - SOAP::SOAPGMonthDay
              #   applicableEndDateForEnergyRate - SOAP::SOAPGMonthDay
              #   applicableStartDateForDemandRate - SOAP::SOAPGMonthDay
              #   applicableEndDateForDemandRate - SOAP::SOAPGMonthDay
              #   demandWindow - BuildingSync::DemandWindow
              #   demandRatchetPercentage - BuildingSync::DemandRatchetPercentage
              #   energyCostRate - BuildingSync::EnergyCostRate
              #   energyRateAdjustment - BuildingSync::EnergyRateAdjustment
              #   electricDemandRate - BuildingSync::ElectricDemandRate
              #   demandRateAdjustment - BuildingSync::DemandRateAdjustment
              #   energySellRate - BuildingSync::EnergySellRate
              class RatePeriod
                attr_accessor :ratePeriodName
                attr_accessor :applicableStartDateForEnergyRate
                attr_accessor :applicableEndDateForEnergyRate
                attr_accessor :applicableStartDateForDemandRate
                attr_accessor :applicableEndDateForDemandRate
                attr_accessor :demandWindow
                attr_accessor :demandRatchetPercentage
                attr_accessor :energyCostRate
                attr_accessor :energyRateAdjustment
                attr_accessor :electricDemandRate
                attr_accessor :demandRateAdjustment
                attr_accessor :energySellRate

                def initialize(ratePeriodName = nil, applicableStartDateForEnergyRate = nil, applicableEndDateForEnergyRate = nil, applicableStartDateForDemandRate = nil, applicableEndDateForDemandRate = nil, demandWindow = nil, demandRatchetPercentage = nil, energyCostRate = nil, energyRateAdjustment = nil, electricDemandRate = nil, demandRateAdjustment = nil, energySellRate = nil)
                  @ratePeriodName = ratePeriodName
                  @applicableStartDateForEnergyRate = applicableStartDateForEnergyRate
                  @applicableEndDateForEnergyRate = applicableEndDateForEnergyRate
                  @applicableStartDateForDemandRate = applicableStartDateForDemandRate
                  @applicableEndDateForDemandRate = applicableEndDateForDemandRate
                  @demandWindow = demandWindow
                  @demandRatchetPercentage = demandRatchetPercentage
                  @energyCostRate = energyCostRate
                  @energyRateAdjustment = energyRateAdjustment
                  @electricDemandRate = electricDemandRate
                  @demandRateAdjustment = demandRateAdjustment
                  @energySellRate = energySellRate
                end
              end
            end

            attr_accessor :ratePeriods

            def initialize(ratePeriods = nil)
              @ratePeriods = ratePeriods
            end
          end

          # inner class for member: TimeOfUseRate
          # {http://buildingsync.net/schemas/bedes-auc/2019}TimeOfUseRate
          #   ratePeriods - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TimeOfUseRate::RatePeriods
          class TimeOfUseRate

            # inner class for member: RatePeriods
            # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriods
            class RatePeriods < ::Array

              # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriod
              #   ratePeriodName - SOAP::SOAPString
              #   applicableStartDateForEnergyRate - SOAP::SOAPGMonthDay
              #   applicableEndDateForEnergyRate - SOAP::SOAPGMonthDay
              #   applicableStartDateForDemandRate - SOAP::SOAPGMonthDay
              #   applicableEndDateForDemandRate - SOAP::SOAPGMonthDay
              #   timeOfUsePeriods - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TimeOfUseRate::RatePeriods::RatePeriod::TimeOfUsePeriods
              #   energySellRate - BuildingSync::EnergySellRate
              class RatePeriod

                # inner class for member: TimeOfUsePeriods
                # {http://buildingsync.net/schemas/bedes-auc/2019}TimeOfUsePeriods
                class TimeOfUsePeriods < ::Array

                  # {http://buildingsync.net/schemas/bedes-auc/2019}TimeOfUsePeriod
                  #   tOUNumberForRateStructure - SOAP::SOAPInt
                  #   applicableStartTimeForEnergyRate - SOAP::SOAPTime
                  #   applicableEndTimeForEnergyRate - SOAP::SOAPTime
                  #   applicableStartTimeForDemandRate - SOAP::SOAPTime
                  #   applicableEndTimeForDemandRate - SOAP::SOAPTime
                  #   energyCostRate - BuildingSync::EnergyCostRate
                  #   electricDemandRate - BuildingSync::ElectricDemandRate
                  #   energyRateAdjustment - BuildingSync::EnergyRateAdjustment
                  #   demandRateAdjustment - BuildingSync::DemandRateAdjustment
                  #   demandWindow - BuildingSync::DemandWindow
                  #   demandRatchetPercentage - BuildingSync::DemandRatchetPercentage
                  class TimeOfUsePeriod
                    attr_accessor :tOUNumberForRateStructure
                    attr_accessor :applicableStartTimeForEnergyRate
                    attr_accessor :applicableEndTimeForEnergyRate
                    attr_accessor :applicableStartTimeForDemandRate
                    attr_accessor :applicableEndTimeForDemandRate
                    attr_accessor :energyCostRate
                    attr_accessor :electricDemandRate
                    attr_accessor :energyRateAdjustment
                    attr_accessor :demandRateAdjustment
                    attr_accessor :demandWindow
                    attr_accessor :demandRatchetPercentage

                    def initialize(tOUNumberForRateStructure = nil, applicableStartTimeForEnergyRate = nil, applicableEndTimeForEnergyRate = nil, applicableStartTimeForDemandRate = nil, applicableEndTimeForDemandRate = nil, energyCostRate = nil, electricDemandRate = nil, energyRateAdjustment = nil, demandRateAdjustment = nil, demandWindow = nil, demandRatchetPercentage = nil)
                      @tOUNumberForRateStructure = tOUNumberForRateStructure
                      @applicableStartTimeForEnergyRate = applicableStartTimeForEnergyRate
                      @applicableEndTimeForEnergyRate = applicableEndTimeForEnergyRate
                      @applicableStartTimeForDemandRate = applicableStartTimeForDemandRate
                      @applicableEndTimeForDemandRate = applicableEndTimeForDemandRate
                      @energyCostRate = energyCostRate
                      @electricDemandRate = electricDemandRate
                      @energyRateAdjustment = energyRateAdjustment
                      @demandRateAdjustment = demandRateAdjustment
                      @demandWindow = demandWindow
                      @demandRatchetPercentage = demandRatchetPercentage
                    end
                  end
                end

                attr_accessor :ratePeriodName
                attr_accessor :applicableStartDateForEnergyRate
                attr_accessor :applicableEndDateForEnergyRate
                attr_accessor :applicableStartDateForDemandRate
                attr_accessor :applicableEndDateForDemandRate
                attr_accessor :timeOfUsePeriods
                attr_accessor :energySellRate

                def initialize(ratePeriodName = nil, applicableStartDateForEnergyRate = nil, applicableEndDateForEnergyRate = nil, applicableStartDateForDemandRate = nil, applicableEndDateForDemandRate = nil, timeOfUsePeriods = nil, energySellRate = nil)
                  @ratePeriodName = ratePeriodName
                  @applicableStartDateForEnergyRate = applicableStartDateForEnergyRate
                  @applicableEndDateForEnergyRate = applicableEndDateForEnergyRate
                  @applicableStartDateForDemandRate = applicableStartDateForDemandRate
                  @applicableEndDateForDemandRate = applicableEndDateForDemandRate
                  @timeOfUsePeriods = timeOfUsePeriods
                  @energySellRate = energySellRate
                end
              end
            end

            attr_accessor :ratePeriods

            def initialize(ratePeriods = nil)
              @ratePeriods = ratePeriods
            end
          end

          # inner class for member: TieredRates
          # {http://buildingsync.net/schemas/bedes-auc/2019}TieredRates
          class TieredRates < ::Array

            # {http://buildingsync.net/schemas/bedes-auc/2019}TieredRate
            #   ratePeriods - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates::TieredRate::RatePeriods
            #   tierDirection - SOAP::SOAPString
            class TieredRate

              # inner class for member: RatePeriods
              # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriods
              class RatePeriods < ::Array

                # {http://buildingsync.net/schemas/bedes-auc/2019}RatePeriod
                #   ratePeriodName - SOAP::SOAPString
                #   applicableStartDateForEnergyRate - SOAP::SOAPGMonthDay
                #   applicableEndDateForEnergyRate - SOAP::SOAPGMonthDay
                #   applicableStartDateForDemandRate - SOAP::SOAPGMonthDay
                #   applicableEndDateForDemandRate - SOAP::SOAPGMonthDay
                #   rateTiers - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates::TieredRate::RatePeriods::RatePeriod::RateTiers
                #   energySellRate - BuildingSync::EnergySellRate
                class RatePeriod

                  # inner class for member: RateTiers
                  # {http://buildingsync.net/schemas/bedes-auc/2019}RateTiers
                  class RateTiers < ::Array

                    # {http://buildingsync.net/schemas/bedes-auc/2019}RateTier
                    #   consumptionEnergyTierDesignation - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates::TieredRate::RatePeriods::RatePeriod::RateTiers::RateTier::ConsumptionEnergyTierDesignation
                    #   maxkWhUsage - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates::TieredRate::RatePeriods::RatePeriod::RateTiers::RateTier::MaxkWhUsage
                    #   maxkWUsage - BuildingSync::UtilityType::RateSchedules::RateSchedule::TypeOfRateStructure::TieredRates::TieredRate::RatePeriods::RatePeriod::RateTiers::RateTier::MaxkWUsage
                    #   energyCostRate - BuildingSync::EnergyCostRate
                    #   electricDemandRate - BuildingSync::ElectricDemandRate
                    #   energyRateAdjustment - BuildingSync::EnergyRateAdjustment
                    #   demandRateAdjustment - BuildingSync::DemandRateAdjustment
                    #   demandWindow - BuildingSync::DemandWindow
                    #   demandRatchetPercentage - BuildingSync::DemandRatchetPercentage
                    class RateTier

                      # inner class for member: ConsumptionEnergyTierDesignation
                      # {http://buildingsync.net/schemas/bedes-auc/2019}ConsumptionEnergyTierDesignation
                      #   xmlattr_Source - SOAP::SOAPString
                      class ConsumptionEnergyTierDesignation < ::String
                        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                        def __xmlattr
                          @__xmlattr ||= {}
                        end

                        def xmlattr_Source
                          __xmlattr[AttrSource]
                        end

                        def xmlattr_Source=(value)
                          __xmlattr[AttrSource] = value
                        end

                        def initialize(*arg)
                          super
                          @__xmlattr = {}
                        end
                      end

                      # inner class for member: MaxkWhUsage
                      # {http://buildingsync.net/schemas/bedes-auc/2019}MaxkWhUsage
                      #   xmlattr_Source - SOAP::SOAPString
                      class MaxkWhUsage < ::String
                        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                        def __xmlattr
                          @__xmlattr ||= {}
                        end

                        def xmlattr_Source
                          __xmlattr[AttrSource]
                        end

                        def xmlattr_Source=(value)
                          __xmlattr[AttrSource] = value
                        end

                        def initialize(*arg)
                          super
                          @__xmlattr = {}
                        end
                      end

                      # inner class for member: MaxkWUsage
                      # {http://buildingsync.net/schemas/bedes-auc/2019}MaxkWUsage
                      #   xmlattr_Source - SOAP::SOAPString
                      class MaxkWUsage < ::String
                        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                        def __xmlattr
                          @__xmlattr ||= {}
                        end

                        def xmlattr_Source
                          __xmlattr[AttrSource]
                        end

                        def xmlattr_Source=(value)
                          __xmlattr[AttrSource] = value
                        end

                        def initialize(*arg)
                          super
                          @__xmlattr = {}
                        end
                      end

                      attr_accessor :consumptionEnergyTierDesignation
                      attr_accessor :maxkWhUsage
                      attr_accessor :maxkWUsage
                      attr_accessor :energyCostRate
                      attr_accessor :electricDemandRate
                      attr_accessor :energyRateAdjustment
                      attr_accessor :demandRateAdjustment
                      attr_accessor :demandWindow
                      attr_accessor :demandRatchetPercentage

                      def initialize(consumptionEnergyTierDesignation = nil, maxkWhUsage = nil, maxkWUsage = nil, energyCostRate = nil, electricDemandRate = nil, energyRateAdjustment = nil, demandRateAdjustment = nil, demandWindow = nil, demandRatchetPercentage = nil)
                        @consumptionEnergyTierDesignation = consumptionEnergyTierDesignation
                        @maxkWhUsage = maxkWhUsage
                        @maxkWUsage = maxkWUsage
                        @energyCostRate = energyCostRate
                        @electricDemandRate = electricDemandRate
                        @energyRateAdjustment = energyRateAdjustment
                        @demandRateAdjustment = demandRateAdjustment
                        @demandWindow = demandWindow
                        @demandRatchetPercentage = demandRatchetPercentage
                      end
                    end
                  end

                  attr_accessor :ratePeriodName
                  attr_accessor :applicableStartDateForEnergyRate
                  attr_accessor :applicableEndDateForEnergyRate
                  attr_accessor :applicableStartDateForDemandRate
                  attr_accessor :applicableEndDateForDemandRate
                  attr_accessor :rateTiers
                  attr_accessor :energySellRate

                  def initialize(ratePeriodName = nil, applicableStartDateForEnergyRate = nil, applicableEndDateForEnergyRate = nil, applicableStartDateForDemandRate = nil, applicableEndDateForDemandRate = nil, rateTiers = nil, energySellRate = nil)
                    @ratePeriodName = ratePeriodName
                    @applicableStartDateForEnergyRate = applicableStartDateForEnergyRate
                    @applicableEndDateForEnergyRate = applicableEndDateForEnergyRate
                    @applicableStartDateForDemandRate = applicableStartDateForDemandRate
                    @applicableEndDateForDemandRate = applicableEndDateForDemandRate
                    @rateTiers = rateTiers
                    @energySellRate = energySellRate
                  end
                end
              end

              attr_accessor :ratePeriods
              attr_accessor :tierDirection

              def initialize(ratePeriods = nil, tierDirection = nil)
                @ratePeriods = ratePeriods
                @tierDirection = tierDirection
              end
            end
          end

          # inner class for member: RealTimePricing
          # {http://buildingsync.net/schemas/bedes-auc/2019}RealTimePricing
          class RealTimePricing
            def initialize
            end
          end

          # inner class for member: VariablePeakPricing
          # {http://buildingsync.net/schemas/bedes-auc/2019}VariablePeakPricing
          class VariablePeakPricing
            def initialize
            end
          end

          # inner class for member: CriticalPeakPricing
          # {http://buildingsync.net/schemas/bedes-auc/2019}CriticalPeakPricing
          class CriticalPeakPricing
            def initialize
            end
          end

          # inner class for member: CriticalPeakRebates
          # {http://buildingsync.net/schemas/bedes-auc/2019}CriticalPeakRebates
          class CriticalPeakRebates
            def initialize
            end
          end

          attr_accessor :flatRate
          attr_accessor :timeOfUseRate
          attr_accessor :tieredRates
          attr_accessor :realTimePricing
          attr_accessor :variablePeakPricing
          attr_accessor :criticalPeakPricing
          attr_accessor :criticalPeakRebates
          attr_accessor :other
          attr_accessor :unknown

          def initialize(flatRate = nil, timeOfUseRate = nil, tieredRates = nil, realTimePricing = nil, variablePeakPricing = nil, criticalPeakPricing = nil, criticalPeakRebates = nil, other = nil, unknown = nil)
            @flatRate = flatRate
            @timeOfUseRate = timeOfUseRate
            @tieredRates = tieredRates
            @realTimePricing = realTimePricing
            @variablePeakPricing = variablePeakPricing
            @criticalPeakPricing = criticalPeakPricing
            @criticalPeakRebates = criticalPeakRebates
            @other = other
            @unknown = unknown
          end
        end

        # inner class for member: ReactivePowerCharge
        # {http://buildingsync.net/schemas/bedes-auc/2019}ReactivePowerCharge
        #   xmlattr_Source - SOAP::SOAPString
        class ReactivePowerCharge < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: MinimumPowerFactorWithoutPenalty
        # {http://buildingsync.net/schemas/bedes-auc/2019}MinimumPowerFactorWithoutPenalty
        #   xmlattr_Source - SOAP::SOAPString
        class MinimumPowerFactorWithoutPenalty < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: FixedMonthlyCharge
        # {http://buildingsync.net/schemas/bedes-auc/2019}FixedMonthlyCharge
        #   xmlattr_Source - SOAP::SOAPString
        class FixedMonthlyCharge < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: NetMetering
        # {http://buildingsync.net/schemas/bedes-auc/2019}NetMetering
        #   averageMarginalSellRate - BuildingSync::UtilityType::RateSchedules::RateSchedule::NetMetering::AverageMarginalSellRate
        class NetMetering

          # inner class for member: AverageMarginalSellRate
          # {http://buildingsync.net/schemas/bedes-auc/2019}AverageMarginalSellRate
          #   xmlattr_Source - SOAP::SOAPString
          class AverageMarginalSellRate < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          attr_accessor :averageMarginalSellRate

          def initialize(averageMarginalSellRate = nil)
            @averageMarginalSellRate = averageMarginalSellRate
          end
        end

        # inner class for member: AverageMarginalCostRate
        # {http://buildingsync.net/schemas/bedes-auc/2019}AverageMarginalCostRate
        #   xmlattr_Source - SOAP::SOAPString
        class AverageMarginalCostRate < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :rateStructureName
        attr_accessor :typeOfRateStructure
        attr_accessor :rateStructureSector
        attr_accessor :referenceForRateStructure
        attr_accessor :rateStructureEffectiveDate
        attr_accessor :rateStructureEndDate
        attr_accessor :reactivePowerCharge
        attr_accessor :minimumPowerFactorWithoutPenalty
        attr_accessor :fixedMonthlyCharge
        attr_accessor :netMetering
        attr_accessor :averageMarginalCostRate

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(rateStructureName = nil, typeOfRateStructure = nil, rateStructureSector = nil, referenceForRateStructure = nil, rateStructureEffectiveDate = nil, rateStructureEndDate = nil, reactivePowerCharge = nil, minimumPowerFactorWithoutPenalty = nil, fixedMonthlyCharge = nil, netMetering = nil, averageMarginalCostRate = nil)
          @rateStructureName = rateStructureName
          @typeOfRateStructure = typeOfRateStructure
          @rateStructureSector = rateStructureSector
          @referenceForRateStructure = referenceForRateStructure
          @rateStructureEffectiveDate = rateStructureEffectiveDate
          @rateStructureEndDate = rateStructureEndDate
          @reactivePowerCharge = reactivePowerCharge
          @minimumPowerFactorWithoutPenalty = minimumPowerFactorWithoutPenalty
          @fixedMonthlyCharge = fixedMonthlyCharge
          @netMetering = netMetering
          @averageMarginalCostRate = averageMarginalCostRate
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: UtilityMeterNumbers
    # {http://buildingsync.net/schemas/bedes-auc/2019}UtilityMeterNumbers
    class UtilityMeterNumbers < ::Array
    end

    # inner class for member: SourceSiteRatio
    # {http://buildingsync.net/schemas/bedes-auc/2019}SourceSiteRatio
    #   xmlattr_Source - SOAP::SOAPString
    class SourceSiteRatio < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :rateSchedules
    attr_accessor :meteringConfiguration
    attr_accessor :typeOfResourceMeter
    attr_accessor :fuelInterruptibility
    attr_accessor :eIAUtilityID
    attr_accessor :utilityName
    attr_accessor :powerPlant
    attr_accessor :utilityMeterNumbers
    attr_accessor :utilityAccountNumber
    attr_accessor :utilityBillpayer
    attr_accessor :electricDistributionUtility
    attr_accessor :sourceSiteRatio

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(rateSchedules = nil, meteringConfiguration = nil, typeOfResourceMeter = nil, fuelInterruptibility = nil, eIAUtilityID = nil, utilityName = nil, powerPlant = nil, utilityMeterNumbers = nil, utilityAccountNumber = nil, utilityBillpayer = nil, electricDistributionUtility = nil, sourceSiteRatio = nil)
      @rateSchedules = rateSchedules
      @meteringConfiguration = meteringConfiguration
      @typeOfResourceMeter = typeOfResourceMeter
      @fuelInterruptibility = fuelInterruptibility
      @eIAUtilityID = eIAUtilityID
      @utilityName = utilityName
      @powerPlant = powerPlant
      @utilityMeterNumbers = utilityMeterNumbers
      @utilityAccountNumber = utilityAccountNumber
      @utilityBillpayer = utilityBillpayer
      @electricDistributionUtility = electricDistributionUtility
      @sourceSiteRatio = sourceSiteRatio
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUseType
  #   energyResource - BuildingSync::FuelTypes
  #   resourceUseNotes - SOAP::SOAPString
  #   resourceBoundary - SOAP::SOAPString
  #   waterResource - SOAP::SOAPString
  #   resourceUnits - SOAP::SOAPString
  #   percentResource - SOAP::SOAPDecimal
  #   sharedResourceSystem - SOAP::SOAPString
  #   endUse - BuildingSync::EndUseType
  #   percentEndUse - SOAP::SOAPDecimal
  #   annualFuelUseNativeUnits - BuildingSync::ResourceUseType::AnnualFuelUseNativeUnits
  #   annualFuelUseConsistentUnits - BuildingSync::ResourceUseType::AnnualFuelUseConsistentUnits
  #   annualFuelUseLinkedTimeSeriesIDs - BuildingSync::ResourceUseType::AnnualFuelUseLinkedTimeSeriesIDs
  #   peakResourceUnits - SOAP::SOAPString
  #   annualPeakNativeUnits - BuildingSync::ResourceUseType::AnnualPeakNativeUnits
  #   annualPeakConsistentUnits - BuildingSync::ResourceUseType::AnnualPeakConsistentUnits
  #   annualFuelCost - BuildingSync::ResourceUseType::AnnualFuelCost
  #   fuelUseIntensity - BuildingSync::ResourceUseType::FuelUseIntensity
  #   utilityIDs - BuildingSync::ResourceUseType::UtilityIDs
  #   emissions - BuildingSync::ResourceUseType::Emissions
  #   meterID - SOAP::SOAPString
  #   parentResourceUseID - BuildingSync::ResourceUseType::ParentResourceUseID
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class ResourceUseType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: AnnualFuelUseNativeUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualFuelUseNativeUnits
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualFuelUseNativeUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualFuelUseConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualFuelUseConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualFuelUseConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualFuelUseLinkedTimeSeriesIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualFuelUseLinkedTimeSeriesIDs
    class AnnualFuelUseLinkedTimeSeriesIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedTimeSeriesID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class LinkedTimeSeriesID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: AnnualPeakNativeUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualPeakNativeUnits
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualPeakNativeUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualPeakConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualPeakConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualPeakConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualFuelCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualFuelCost
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualFuelCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FuelUseIntensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}FuelUseIntensity
    #   xmlattr_Source - SOAP::SOAPString
    class FuelUseIntensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: UtilityIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}UtilityIDs
    class UtilityIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}UtilityID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class UtilityID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: Emissions
    # {http://buildingsync.net/schemas/bedes-auc/2019}Emissions
    class Emissions < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Emission
      #   emissionBoundary - SOAP::SOAPString
      #   emissionsType - SOAP::SOAPString
      #   emissionsFactor - BuildingSync::ResourceUseType::Emissions::Emission::EmissionsFactor
      #   emissionsFactorSource - SOAP::SOAPString
      #   gHGEmissions - BuildingSync::ResourceUseType::Emissions::Emission::GHGEmissions
      #   gHGEmissionIntensity - BuildingSync::ResourceUseType::Emissions::Emission::GHGEmissionIntensity
      #   avoidedEmissions - BuildingSync::ResourceUseType::Emissions::Emission::AvoidedEmissions
      #   emissionsLinkedTimeSeriesIDs - BuildingSync::ResourceUseType::Emissions::Emission::EmissionsLinkedTimeSeriesIDs
      class Emission

        # inner class for member: EmissionsFactor
        # {http://buildingsync.net/schemas/bedes-auc/2019}EmissionsFactor
        #   xmlattr_Source - SOAP::SOAPString
        class EmissionsFactor < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: GHGEmissions
        # {http://buildingsync.net/schemas/bedes-auc/2019}GHGEmissions
        #   xmlattr_Source - SOAP::SOAPString
        class GHGEmissions < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: GHGEmissionIntensity
        # {http://buildingsync.net/schemas/bedes-auc/2019}GHGEmissionIntensity
        #   xmlattr_Source - SOAP::SOAPString
        class GHGEmissionIntensity < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: AvoidedEmissions
        # {http://buildingsync.net/schemas/bedes-auc/2019}AvoidedEmissions
        #   xmlattr_Source - SOAP::SOAPString
        class AvoidedEmissions < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: EmissionsLinkedTimeSeriesIDs
        # {http://buildingsync.net/schemas/bedes-auc/2019}EmissionsLinkedTimeSeriesIDs
        class EmissionsLinkedTimeSeriesIDs < ::Array

          # {http://buildingsync.net/schemas/bedes-auc/2019}EmissionsLinkedTimeSeriesID
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class EmissionsLinkedTimeSeriesID
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end
        end

        attr_accessor :emissionBoundary
        attr_accessor :emissionsType
        attr_accessor :emissionsFactor
        attr_accessor :emissionsFactorSource
        attr_accessor :gHGEmissions
        attr_accessor :gHGEmissionIntensity
        attr_accessor :avoidedEmissions
        attr_accessor :emissionsLinkedTimeSeriesIDs

        def initialize(emissionBoundary = nil, emissionsType = nil, emissionsFactor = nil, emissionsFactorSource = nil, gHGEmissions = nil, gHGEmissionIntensity = nil, avoidedEmissions = nil, emissionsLinkedTimeSeriesIDs = nil)
          @emissionBoundary = emissionBoundary
          @emissionsType = emissionsType
          @emissionsFactor = emissionsFactor
          @emissionsFactorSource = emissionsFactorSource
          @gHGEmissions = gHGEmissions
          @gHGEmissionIntensity = gHGEmissionIntensity
          @avoidedEmissions = avoidedEmissions
          @emissionsLinkedTimeSeriesIDs = emissionsLinkedTimeSeriesIDs
        end
      end
    end

    # inner class for member: ParentResourceUseID
    # {http://buildingsync.net/schemas/bedes-auc/2019}ParentResourceUseID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class ParentResourceUseID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    attr_accessor :energyResource
    attr_accessor :resourceUseNotes
    attr_accessor :resourceBoundary
    attr_accessor :waterResource
    attr_accessor :resourceUnits
    attr_accessor :percentResource
    attr_accessor :sharedResourceSystem
    attr_accessor :endUse
    attr_accessor :percentEndUse
    attr_accessor :annualFuelUseNativeUnits
    attr_accessor :annualFuelUseConsistentUnits
    attr_accessor :annualFuelUseLinkedTimeSeriesIDs
    attr_accessor :peakResourceUnits
    attr_accessor :annualPeakNativeUnits
    attr_accessor :annualPeakConsistentUnits
    attr_accessor :annualFuelCost
    attr_accessor :fuelUseIntensity
    attr_accessor :utilityIDs
    attr_accessor :emissions
    attr_accessor :meterID
    attr_accessor :parentResourceUseID
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(energyResource = nil, resourceUseNotes = nil, resourceBoundary = nil, waterResource = nil, resourceUnits = nil, percentResource = nil, sharedResourceSystem = nil, endUse = nil, percentEndUse = nil, annualFuelUseNativeUnits = nil, annualFuelUseConsistentUnits = nil, annualFuelUseLinkedTimeSeriesIDs = nil, peakResourceUnits = nil, annualPeakNativeUnits = nil, annualPeakConsistentUnits = nil, annualFuelCost = nil, fuelUseIntensity = nil, utilityIDs = nil, emissions = nil, meterID = nil, parentResourceUseID = nil, userDefinedFields = nil)
      @energyResource = energyResource
      @resourceUseNotes = resourceUseNotes
      @resourceBoundary = resourceBoundary
      @waterResource = waterResource
      @resourceUnits = resourceUnits
      @percentResource = percentResource
      @sharedResourceSystem = sharedResourceSystem
      @endUse = endUse
      @percentEndUse = percentEndUse
      @annualFuelUseNativeUnits = annualFuelUseNativeUnits
      @annualFuelUseConsistentUnits = annualFuelUseConsistentUnits
      @annualFuelUseLinkedTimeSeriesIDs = annualFuelUseLinkedTimeSeriesIDs
      @peakResourceUnits = peakResourceUnits
      @annualPeakNativeUnits = annualPeakNativeUnits
      @annualPeakConsistentUnits = annualPeakConsistentUnits
      @annualFuelCost = annualFuelCost
      @fuelUseIntensity = fuelUseIntensity
      @utilityIDs = utilityIDs
      @emissions = emissions
      @meterID = meterID
      @parentResourceUseID = parentResourceUseID
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AllResourceTotalType
  #   endUse - BuildingSync::EndUseType
  #   temporalStatus - SOAP::SOAPString
  #   resourceBoundary - SOAP::SOAPString
  #   siteEnergyUse - BuildingSync::AllResourceTotalType::SiteEnergyUse
  #   siteEnergyUseIntensity - BuildingSync::AllResourceTotalType::SiteEnergyUseIntensity
  #   sourceEnergyUse - BuildingSync::AllResourceTotalType::SourceEnergyUse
  #   sourceEnergyUseIntensity - BuildingSync::SourceEnergyUseIntensity
  #   buildingEnergyUse - BuildingSync::AllResourceTotalType::BuildingEnergyUse
  #   buildingEnergyUseIntensity - BuildingSync::AllResourceTotalType::BuildingEnergyUseIntensity
  #   importedEnergyConsistentUnits - BuildingSync::AllResourceTotalType::ImportedEnergyConsistentUnits
  #   onsiteEnergyProductionConsistentUnits - BuildingSync::AllResourceTotalType::OnsiteEnergyProductionConsistentUnits
  #   exportedEnergyConsistentUnits - BuildingSync::AllResourceTotalType::ExportedEnergyConsistentUnits
  #   netIncreaseInStoredEnergyConsistentUnits - BuildingSync::AllResourceTotalType::NetIncreaseInStoredEnergyConsistentUnits
  #   energyCost - BuildingSync::AllResourceTotalType::EnergyCost
  #   energyCostIndex - BuildingSync::AllResourceTotalType::EnergyCostIndex
  #   onsiteRenewableSystemElectricityExported - BuildingSync::AllResourceTotalType::OnsiteRenewableSystemElectricityExported
  #   electricitySourcedFromOnsiteRenewableSystems - BuildingSync::AllResourceTotalType::ElectricitySourcedFromOnsiteRenewableSystems
  #   summerPeak - BuildingSync::AllResourceTotalType::SummerPeak
  #   winterPeak - BuildingSync::AllResourceTotalType::WinterPeak
  #   waterResource - SOAP::SOAPString
  #   waterUse - BuildingSync::AllResourceTotalType::WaterUse
  #   waterIntensity - BuildingSync::AllResourceTotalType::WaterIntensity
  #   waterCost - BuildingSync::AllResourceTotalType::WaterCost
  #   wasteWaterVolume - BuildingSync::AllResourceTotalType::WasteWaterVolume
  #   annualAverageGHGEmissions - BuildingSync::AllResourceTotalType::AnnualAverageGHGEmissions
  #   annualMarginalGHGEmissions - BuildingSync::AllResourceTotalType::AnnualMarginalGHGEmissions
  #   annualGHGEmissionIntensity - BuildingSync::AllResourceTotalType::AnnualGHGEmissionIntensity
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class AllResourceTotalType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: SiteEnergyUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}SiteEnergyUse
    #   xmlattr_Source - SOAP::SOAPString
    class SiteEnergyUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SiteEnergyUseIntensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}SiteEnergyUseIntensity
    #   xmlattr_Source - SOAP::SOAPString
    class SiteEnergyUseIntensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SourceEnergyUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}SourceEnergyUse
    #   xmlattr_Source - SOAP::SOAPString
    class SourceEnergyUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: BuildingEnergyUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingEnergyUse
    #   xmlattr_Source - SOAP::SOAPString
    class BuildingEnergyUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: BuildingEnergyUseIntensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingEnergyUseIntensity
    #   xmlattr_Source - SOAP::SOAPString
    class BuildingEnergyUseIntensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ImportedEnergyConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}ImportedEnergyConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class ImportedEnergyConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OnsiteEnergyProductionConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}OnsiteEnergyProductionConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class OnsiteEnergyProductionConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExportedEnergyConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExportedEnergyConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class ExportedEnergyConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NetIncreaseInStoredEnergyConsistentUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}NetIncreaseInStoredEnergyConsistentUnits
    #   xmlattr_Source - SOAP::SOAPString
    class NetIncreaseInStoredEnergyConsistentUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: EnergyCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyCost
    #   xmlattr_Source - SOAP::SOAPString
    class EnergyCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: EnergyCostIndex
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyCostIndex
    #   xmlattr_Source - SOAP::SOAPString
    class EnergyCostIndex < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OnsiteRenewableSystemElectricityExported
    # {http://buildingsync.net/schemas/bedes-auc/2019}OnsiteRenewableSystemElectricityExported
    #   xmlattr_Source - SOAP::SOAPString
    class OnsiteRenewableSystemElectricityExported < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ElectricitySourcedFromOnsiteRenewableSystems
    # {http://buildingsync.net/schemas/bedes-auc/2019}ElectricitySourcedFromOnsiteRenewableSystems
    #   xmlattr_Source - SOAP::SOAPString
    class ElectricitySourcedFromOnsiteRenewableSystems < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SummerPeak
    # {http://buildingsync.net/schemas/bedes-auc/2019}SummerPeak
    #   xmlattr_Source - SOAP::SOAPString
    class SummerPeak < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WinterPeak
    # {http://buildingsync.net/schemas/bedes-auc/2019}WinterPeak
    #   xmlattr_Source - SOAP::SOAPString
    class WinterPeak < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterUse
    #   xmlattr_Source - SOAP::SOAPString
    class WaterUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterIntensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterIntensity
    #   xmlattr_Source - SOAP::SOAPString
    class WaterIntensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterCost
    #   xmlattr_Source - SOAP::SOAPString
    class WaterCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WasteWaterVolume
    # {http://buildingsync.net/schemas/bedes-auc/2019}WasteWaterVolume
    #   xmlattr_Source - SOAP::SOAPString
    class WasteWaterVolume < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualAverageGHGEmissions
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualAverageGHGEmissions
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualAverageGHGEmissions < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualMarginalGHGEmissions
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualMarginalGHGEmissions
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualMarginalGHGEmissions < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnnualGHGEmissionIntensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualGHGEmissionIntensity
    #   xmlattr_Source - SOAP::SOAPString
    class AnnualGHGEmissionIntensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :endUse
    attr_accessor :temporalStatus
    attr_accessor :resourceBoundary
    attr_accessor :siteEnergyUse
    attr_accessor :siteEnergyUseIntensity
    attr_accessor :sourceEnergyUse
    attr_accessor :sourceEnergyUseIntensity
    attr_accessor :buildingEnergyUse
    attr_accessor :buildingEnergyUseIntensity
    attr_accessor :importedEnergyConsistentUnits
    attr_accessor :onsiteEnergyProductionConsistentUnits
    attr_accessor :exportedEnergyConsistentUnits
    attr_accessor :netIncreaseInStoredEnergyConsistentUnits
    attr_accessor :energyCost
    attr_accessor :energyCostIndex
    attr_accessor :onsiteRenewableSystemElectricityExported
    attr_accessor :electricitySourcedFromOnsiteRenewableSystems
    attr_accessor :summerPeak
    attr_accessor :winterPeak
    attr_accessor :waterResource
    attr_accessor :waterUse
    attr_accessor :waterIntensity
    attr_accessor :waterCost
    attr_accessor :wasteWaterVolume
    attr_accessor :annualAverageGHGEmissions
    attr_accessor :annualMarginalGHGEmissions
    attr_accessor :annualGHGEmissionIntensity
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(endUse = nil, temporalStatus = nil, resourceBoundary = nil, siteEnergyUse = nil, siteEnergyUseIntensity = nil, sourceEnergyUse = nil, sourceEnergyUseIntensity = nil, buildingEnergyUse = nil, buildingEnergyUseIntensity = nil, importedEnergyConsistentUnits = nil, onsiteEnergyProductionConsistentUnits = nil, exportedEnergyConsistentUnits = nil, netIncreaseInStoredEnergyConsistentUnits = nil, energyCost = nil, energyCostIndex = nil, onsiteRenewableSystemElectricityExported = nil, electricitySourcedFromOnsiteRenewableSystems = nil, summerPeak = nil, winterPeak = nil, waterResource = nil, waterUse = nil, waterIntensity = nil, waterCost = nil, wasteWaterVolume = nil, annualAverageGHGEmissions = nil, annualMarginalGHGEmissions = nil, annualGHGEmissionIntensity = nil, userDefinedFields = nil)
      @endUse = endUse
      @temporalStatus = temporalStatus
      @resourceBoundary = resourceBoundary
      @siteEnergyUse = siteEnergyUse
      @siteEnergyUseIntensity = siteEnergyUseIntensity
      @sourceEnergyUse = sourceEnergyUse
      @sourceEnergyUseIntensity = sourceEnergyUseIntensity
      @buildingEnergyUse = buildingEnergyUse
      @buildingEnergyUseIntensity = buildingEnergyUseIntensity
      @importedEnergyConsistentUnits = importedEnergyConsistentUnits
      @onsiteEnergyProductionConsistentUnits = onsiteEnergyProductionConsistentUnits
      @exportedEnergyConsistentUnits = exportedEnergyConsistentUnits
      @netIncreaseInStoredEnergyConsistentUnits = netIncreaseInStoredEnergyConsistentUnits
      @energyCost = energyCost
      @energyCostIndex = energyCostIndex
      @onsiteRenewableSystemElectricityExported = onsiteRenewableSystemElectricityExported
      @electricitySourcedFromOnsiteRenewableSystems = electricitySourcedFromOnsiteRenewableSystems
      @summerPeak = summerPeak
      @winterPeak = winterPeak
      @waterResource = waterResource
      @waterUse = waterUse
      @waterIntensity = waterIntensity
      @waterCost = waterCost
      @wasteWaterVolume = wasteWaterVolume
      @annualAverageGHGEmissions = annualAverageGHGEmissions
      @annualMarginalGHGEmissions = annualMarginalGHGEmissions
      @annualGHGEmissionIntensity = annualGHGEmissionIntensity
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TimeSeriesType
  #   readingType - SOAP::SOAPString
  #   peakType - SOAP::SOAPString
  #   timeSeriesReadingQuantity - SOAP::SOAPString
  #   startTimestamp - SOAP::SOAPDateTime
  #   endTimestamp - SOAP::SOAPDateTime
  #   intervalDuration - SOAP::SOAPInteger
  #   intervalDurationUnits - BuildingSync::IntervalFrequencyType
  #   intervalFrequency - BuildingSync::IntervalFrequencyType
  #   intervalReading - BuildingSync::TimeSeriesType::IntervalReading
  #   phase - SOAP::SOAPString
  #   energyFlowDirection - SOAP::SOAPString
  #   heatingDegreeDays - BuildingSync::TimeSeriesType::HeatingDegreeDays
  #   coolingDegreeDays - BuildingSync::TimeSeriesType::CoolingDegreeDays
  #   hDDBaseTemperature - BuildingSync::HDDBaseTemperature
  #   cDDBaseTemperature - BuildingSync::CDDBaseTemperature
  #   resourceUseID - BuildingSync::TimeSeriesType::ResourceUseID
  #   weatherStationID - BuildingSync::TimeSeriesType::WeatherStationID
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class TimeSeriesType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: IntervalReading
    # {http://buildingsync.net/schemas/bedes-auc/2019}IntervalReading
    #   xmlattr_Source - SOAP::SOAPString
    class IntervalReading < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: HeatingDegreeDays
    # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingDegreeDays
    #   xmlattr_Source - SOAP::SOAPString
    class HeatingDegreeDays < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CoolingDegreeDays
    # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingDegreeDays
    #   xmlattr_Source - SOAP::SOAPString
    class CoolingDegreeDays < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ResourceUseID
    # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUseID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class ResourceUseID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    # inner class for member: WeatherStationID
    # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherStationID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class WeatherStationID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    attr_accessor :readingType
    attr_accessor :peakType
    attr_accessor :timeSeriesReadingQuantity
    attr_accessor :startTimestamp
    attr_accessor :endTimestamp
    attr_accessor :intervalDuration
    attr_accessor :intervalDurationUnits
    attr_accessor :intervalFrequency
    attr_accessor :intervalReading
    attr_accessor :phase
    attr_accessor :energyFlowDirection
    attr_accessor :heatingDegreeDays
    attr_accessor :coolingDegreeDays
    attr_accessor :hDDBaseTemperature
    attr_accessor :cDDBaseTemperature
    attr_accessor :resourceUseID
    attr_accessor :weatherStationID
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(readingType = nil, peakType = nil, timeSeriesReadingQuantity = nil, startTimestamp = nil, endTimestamp = nil, intervalDuration = nil, intervalDurationUnits = nil, intervalFrequency = nil, intervalReading = nil, phase = nil, energyFlowDirection = nil, heatingDegreeDays = nil, coolingDegreeDays = nil, hDDBaseTemperature = nil, cDDBaseTemperature = nil, resourceUseID = nil, weatherStationID = nil, userDefinedFields = nil)
      @readingType = readingType
      @peakType = peakType
      @timeSeriesReadingQuantity = timeSeriesReadingQuantity
      @startTimestamp = startTimestamp
      @endTimestamp = endTimestamp
      @intervalDuration = intervalDuration
      @intervalDurationUnits = intervalDurationUnits
      @intervalFrequency = intervalFrequency
      @intervalReading = intervalReading
      @phase = phase
      @energyFlowDirection = energyFlowDirection
      @heatingDegreeDays = heatingDegreeDays
      @coolingDegreeDays = coolingDegreeDays
      @hDDBaseTemperature = hDDBaseTemperature
      @cDDBaseTemperature = cDDBaseTemperature
      @resourceUseID = resourceUseID
      @weatherStationID = weatherStationID
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureType
  #   typeOfMeasure - BuildingSync::MeasureType::TypeOfMeasure
  #   systemCategoryAffected - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   technologyCategories - BuildingSync::MeasureType::TechnologyCategories
  #   measureScaleOfApplication - SOAP::SOAPString
  #   customMeasureName - SOAP::SOAPString
  #   longDescription - SOAP::SOAPString
  #   measureSavingsAnalysis - BuildingSync::MeasureType::MeasureSavingsAnalysis
  #   mVCost - BuildingSync::MVCost
  #   mVOption - SOAP::SOAPString
  #   usefulLife - BuildingSync::MeasureType::UsefulLife
  #   measureTotalFirstCost - BuildingSync::MeasureType::MeasureTotalFirstCost
  #   measureInstallationCost - BuildingSync::MeasureType::MeasureInstallationCost
  #   measureMaterialCost - BuildingSync::MeasureType::MeasureMaterialCost
  #   capitalReplacementCost - BuildingSync::MeasureType::CapitalReplacementCost
  #   residualValue - BuildingSync::MeasureType::ResidualValue
  #   recommended - SOAP::SOAPBoolean
  #   startDate - SOAP::SOAPDate
  #   endDate - SOAP::SOAPDate
  #   implementationStatus - SOAP::SOAPString
  #   discardReason - SOAP::SOAPString
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class MeasureType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: TypeOfMeasure
    # {http://buildingsync.net/schemas/bedes-auc/2019}TypeOfMeasure
    #   replacements - BuildingSync::MeasureType::TypeOfMeasure::Replacements
    #   modificationRetrocommissions - BuildingSync::MeasureType::TypeOfMeasure::ModificationRetrocommissions
    #   additions - BuildingSync::MeasureType::TypeOfMeasure::Additions
    #   removals - BuildingSync::MeasureType::TypeOfMeasure::Removals
    class TypeOfMeasure

      # inner class for member: Replacements
      # {http://buildingsync.net/schemas/bedes-auc/2019}Replacements
      #   replacement - BuildingSync::MeasureType::TypeOfMeasure::Replacements::Replacement
      class Replacements

        # inner class for member: Replacement
        # {http://buildingsync.net/schemas/bedes-auc/2019}Replacement
        #   existingSystemReplaced - BuildingSync::MeasureType::TypeOfMeasure::Replacements::Replacement::ExistingSystemReplaced
        #   alternativeSystemReplacement - BuildingSync::MeasureType::TypeOfMeasure::Replacements::Replacement::AlternativeSystemReplacement
        #   existingScheduleAffected - BuildingSync::ExistingScheduleAffected
        #   modifiedSchedule - BuildingSync::ModifiedSchedule
        class Replacement

          # inner class for member: ExistingSystemReplaced
          # {http://buildingsync.net/schemas/bedes-auc/2019}ExistingSystemReplaced
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class ExistingSystemReplaced
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          # inner class for member: AlternativeSystemReplacement
          # {http://buildingsync.net/schemas/bedes-auc/2019}AlternativeSystemReplacement
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class AlternativeSystemReplacement
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          attr_accessor :existingSystemReplaced
          attr_accessor :alternativeSystemReplacement
          attr_accessor :existingScheduleAffected
          attr_accessor :modifiedSchedule

          def initialize(existingSystemReplaced = [], alternativeSystemReplacement = [], existingScheduleAffected = [], modifiedSchedule = [])
            @existingSystemReplaced = existingSystemReplaced
            @alternativeSystemReplacement = alternativeSystemReplacement
            @existingScheduleAffected = existingScheduleAffected
            @modifiedSchedule = modifiedSchedule
          end
        end

        attr_accessor :replacement

        def initialize(replacement = nil)
          @replacement = replacement
        end
      end

      # inner class for member: ModificationRetrocommissions
      # {http://buildingsync.net/schemas/bedes-auc/2019}ModificationRetrocommissions
      #   modificationRetrocommissioning - BuildingSync::MeasureType::TypeOfMeasure::ModificationRetrocommissions::ModificationRetrocommissioning
      class ModificationRetrocommissions

        # inner class for member: ModificationRetrocommissioning
        # {http://buildingsync.net/schemas/bedes-auc/2019}ModificationRetrocommissioning
        #   existingSystemAffected - BuildingSync::MeasureType::TypeOfMeasure::ModificationRetrocommissions::ModificationRetrocommissioning::ExistingSystemAffected
        #   modifiedSystem - BuildingSync::MeasureType::TypeOfMeasure::ModificationRetrocommissions::ModificationRetrocommissioning::ModifiedSystem
        #   existingScheduleAffected - BuildingSync::ExistingScheduleAffected
        #   modifiedSchedule - BuildingSync::ModifiedSchedule
        class ModificationRetrocommissioning

          # inner class for member: ExistingSystemAffected
          # {http://buildingsync.net/schemas/bedes-auc/2019}ExistingSystemAffected
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class ExistingSystemAffected
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          # inner class for member: ModifiedSystem
          # {http://buildingsync.net/schemas/bedes-auc/2019}ModifiedSystem
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class ModifiedSystem
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          attr_accessor :existingSystemAffected
          attr_accessor :modifiedSystem
          attr_accessor :existingScheduleAffected
          attr_accessor :modifiedSchedule

          def initialize(existingSystemAffected = [], modifiedSystem = [], existingScheduleAffected = [], modifiedSchedule = [])
            @existingSystemAffected = existingSystemAffected
            @modifiedSystem = modifiedSystem
            @existingScheduleAffected = existingScheduleAffected
            @modifiedSchedule = modifiedSchedule
          end
        end

        attr_accessor :modificationRetrocommissioning

        def initialize(modificationRetrocommissioning = nil)
          @modificationRetrocommissioning = modificationRetrocommissioning
        end
      end

      # inner class for member: Additions
      # {http://buildingsync.net/schemas/bedes-auc/2019}Additions
      #   addition - BuildingSync::MeasureType::TypeOfMeasure::Additions::Addition
      class Additions

        # inner class for member: Addition
        # {http://buildingsync.net/schemas/bedes-auc/2019}Addition
        #   alternativeSystemAdded - BuildingSync::MeasureType::TypeOfMeasure::Additions::Addition::AlternativeSystemAdded
        #   existingScheduleAffected - BuildingSync::ExistingScheduleAffected
        #   modifiedSchedule - BuildingSync::ModifiedSchedule
        class Addition

          # inner class for member: AlternativeSystemAdded
          # {http://buildingsync.net/schemas/bedes-auc/2019}AlternativeSystemAdded
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class AlternativeSystemAdded
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          attr_accessor :alternativeSystemAdded
          attr_accessor :existingScheduleAffected
          attr_accessor :modifiedSchedule

          def initialize(alternativeSystemAdded = [], existingScheduleAffected = [], modifiedSchedule = [])
            @alternativeSystemAdded = alternativeSystemAdded
            @existingScheduleAffected = existingScheduleAffected
            @modifiedSchedule = modifiedSchedule
          end
        end

        attr_accessor :addition

        def initialize(addition = nil)
          @addition = addition
        end
      end

      # inner class for member: Removals
      # {http://buildingsync.net/schemas/bedes-auc/2019}Removals
      #   removal - BuildingSync::MeasureType::TypeOfMeasure::Removals::Removal
      class Removals

        # inner class for member: Removal
        # {http://buildingsync.net/schemas/bedes-auc/2019}Removal
        #   existingSystemRemoved - BuildingSync::MeasureType::TypeOfMeasure::Removals::Removal::ExistingSystemRemoved
        #   existingScheduleAffected - BuildingSync::ExistingScheduleAffected
        #   modifiedSchedule - BuildingSync::ModifiedSchedule
        class Removal

          # inner class for member: ExistingSystemRemoved
          # {http://buildingsync.net/schemas/bedes-auc/2019}ExistingSystemRemoved
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class ExistingSystemRemoved
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          attr_accessor :existingSystemRemoved
          attr_accessor :existingScheduleAffected
          attr_accessor :modifiedSchedule

          def initialize(existingSystemRemoved = [], existingScheduleAffected = [], modifiedSchedule = [])
            @existingSystemRemoved = existingSystemRemoved
            @existingScheduleAffected = existingScheduleAffected
            @modifiedSchedule = modifiedSchedule
          end
        end

        attr_accessor :removal

        def initialize(removal = nil)
          @removal = removal
        end
      end

      attr_accessor :replacements
      attr_accessor :modificationRetrocommissions
      attr_accessor :additions
      attr_accessor :removals

      def initialize(replacements = nil, modificationRetrocommissions = nil, additions = nil, removals = nil)
        @replacements = replacements
        @modificationRetrocommissions = modificationRetrocommissions
        @additions = additions
        @removals = removals
      end
    end

    # inner class for member: TechnologyCategories
    # {http://buildingsync.net/schemas/bedes-auc/2019}TechnologyCategories
    class TechnologyCategories < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}TechnologyCategory
      #   boilerPlantImprovements - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::BoilerPlantImprovements
      #   chillerPlantImprovements - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::ChillerPlantImprovements
      #   buildingAutomationSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::BuildingAutomationSystems
      #   otherHVAC - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::OtherHVAC
      #   lightingImprovements - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::LightingImprovements
      #   buildingEnvelopeModifications - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::BuildingEnvelopeModifications
      #   chilledWaterHotWaterAndSteamDistributionSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::ChilledWaterHotWaterAndSteamDistributionSystems
      #   conveyanceSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::ConveyanceSystems
      #   otherElectricMotorsAndDrives - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::OtherElectricMotorsAndDrives
      #   refrigeration - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::Refrigeration
      #   distributedGeneration - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::DistributedGeneration
      #   renewableEnergySystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::RenewableEnergySystems
      #   energyDistributionSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::EnergyDistributionSystems
      #   serviceHotWaterSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::ServiceHotWaterSystems
      #   waterAndSewerConservationSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::WaterAndSewerConservationSystems
      #   electricalPeakShavingLoadShifting - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::ElectricalPeakShavingLoadShifting
      #   energyCostReductionThroughRateAdjustments - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::EnergyCostReductionThroughRateAdjustments
      #   energyRelatedProcessImprovements - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::EnergyRelatedProcessImprovements
      #   advancedMeteringSystems - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::AdvancedMeteringSystems
      #   plugLoadReductions - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::PlugLoadReductions
      #   dataCenterImprovements - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::DataCenterImprovements
      #   futureOtherECMs - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::FutureOtherECMs
      #   healthAndSafety - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::HealthAndSafety
      #   uncategorized - BuildingSync::MeasureType::TechnologyCategories::TechnologyCategory::Uncategorized
      class TechnologyCategory

        # inner class for member: BoilerPlantImprovements
        # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerPlantImprovements
        class BoilerPlantImprovements < ::Array
        end

        # inner class for member: ChillerPlantImprovements
        # {http://buildingsync.net/schemas/bedes-auc/2019}ChillerPlantImprovements
        class ChillerPlantImprovements < ::Array
        end

        # inner class for member: BuildingAutomationSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingAutomationSystems
        class BuildingAutomationSystems < ::Array
        end

        # inner class for member: OtherHVAC
        # {http://buildingsync.net/schemas/bedes-auc/2019}OtherHVAC
        class OtherHVAC < ::Array
        end

        # inner class for member: LightingImprovements
        # {http://buildingsync.net/schemas/bedes-auc/2019}LightingImprovements
        class LightingImprovements < ::Array
        end

        # inner class for member: BuildingEnvelopeModifications
        # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingEnvelopeModifications
        class BuildingEnvelopeModifications < ::Array
        end

        # inner class for member: ChilledWaterHotWaterAndSteamDistributionSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}ChilledWaterHotWaterAndSteamDistributionSystems
        class ChilledWaterHotWaterAndSteamDistributionSystems < ::Array
        end

        # inner class for member: ConveyanceSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}ConveyanceSystems
        class ConveyanceSystems < ::Array
        end

        # inner class for member: OtherElectricMotorsAndDrives
        # {http://buildingsync.net/schemas/bedes-auc/2019}OtherElectricMotorsAndDrives
        class OtherElectricMotorsAndDrives < ::Array
        end

        # inner class for member: Refrigeration
        # {http://buildingsync.net/schemas/bedes-auc/2019}Refrigeration
        class Refrigeration < ::Array
        end

        # inner class for member: DistributedGeneration
        # {http://buildingsync.net/schemas/bedes-auc/2019}DistributedGeneration
        class DistributedGeneration < ::Array
        end

        # inner class for member: RenewableEnergySystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}RenewableEnergySystems
        class RenewableEnergySystems < ::Array
        end

        # inner class for member: EnergyDistributionSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyDistributionSystems
        class EnergyDistributionSystems < ::Array
        end

        # inner class for member: ServiceHotWaterSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}ServiceHotWaterSystems
        class ServiceHotWaterSystems < ::Array
        end

        # inner class for member: WaterAndSewerConservationSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}WaterAndSewerConservationSystems
        class WaterAndSewerConservationSystems < ::Array
        end

        # inner class for member: ElectricalPeakShavingLoadShifting
        # {http://buildingsync.net/schemas/bedes-auc/2019}ElectricalPeakShavingLoadShifting
        class ElectricalPeakShavingLoadShifting < ::Array
        end

        # inner class for member: EnergyCostReductionThroughRateAdjustments
        # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyCostReductionThroughRateAdjustments
        class EnergyCostReductionThroughRateAdjustments < ::Array
        end

        # inner class for member: EnergyRelatedProcessImprovements
        # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyRelatedProcessImprovements
        class EnergyRelatedProcessImprovements < ::Array
        end

        # inner class for member: AdvancedMeteringSystems
        # {http://buildingsync.net/schemas/bedes-auc/2019}AdvancedMeteringSystems
        class AdvancedMeteringSystems < ::Array
        end

        # inner class for member: PlugLoadReductions
        # {http://buildingsync.net/schemas/bedes-auc/2019}PlugLoadReductions
        class PlugLoadReductions < ::Array
        end

        # inner class for member: DataCenterImprovements
        # {http://buildingsync.net/schemas/bedes-auc/2019}DataCenterImprovements
        class DataCenterImprovements < ::Array
        end

        # inner class for member: FutureOtherECMs
        # {http://buildingsync.net/schemas/bedes-auc/2019}FutureOtherECMs
        class FutureOtherECMs < ::Array
        end

        # inner class for member: HealthAndSafety
        # {http://buildingsync.net/schemas/bedes-auc/2019}HealthAndSafety
        class HealthAndSafety < ::Array
        end

        # inner class for member: Uncategorized
        # {http://buildingsync.net/schemas/bedes-auc/2019}Uncategorized
        class Uncategorized < ::Array
        end

        attr_accessor :boilerPlantImprovements
        attr_accessor :chillerPlantImprovements
        attr_accessor :buildingAutomationSystems
        attr_accessor :otherHVAC
        attr_accessor :lightingImprovements
        attr_accessor :buildingEnvelopeModifications
        attr_accessor :chilledWaterHotWaterAndSteamDistributionSystems
        attr_accessor :conveyanceSystems
        attr_accessor :otherElectricMotorsAndDrives
        attr_accessor :refrigeration
        attr_accessor :distributedGeneration
        attr_accessor :renewableEnergySystems
        attr_accessor :energyDistributionSystems
        attr_accessor :serviceHotWaterSystems
        attr_accessor :waterAndSewerConservationSystems
        attr_accessor :electricalPeakShavingLoadShifting
        attr_accessor :energyCostReductionThroughRateAdjustments
        attr_accessor :energyRelatedProcessImprovements
        attr_accessor :advancedMeteringSystems
        attr_accessor :plugLoadReductions
        attr_accessor :dataCenterImprovements
        attr_accessor :futureOtherECMs
        attr_accessor :healthAndSafety
        attr_accessor :uncategorized

        def initialize(boilerPlantImprovements = nil, chillerPlantImprovements = nil, buildingAutomationSystems = nil, otherHVAC = nil, lightingImprovements = nil, buildingEnvelopeModifications = nil, chilledWaterHotWaterAndSteamDistributionSystems = nil, conveyanceSystems = nil, otherElectricMotorsAndDrives = nil, refrigeration = nil, distributedGeneration = nil, renewableEnergySystems = nil, energyDistributionSystems = nil, serviceHotWaterSystems = nil, waterAndSewerConservationSystems = nil, electricalPeakShavingLoadShifting = nil, energyCostReductionThroughRateAdjustments = nil, energyRelatedProcessImprovements = nil, advancedMeteringSystems = nil, plugLoadReductions = nil, dataCenterImprovements = nil, futureOtherECMs = nil, healthAndSafety = nil, uncategorized = nil)
          @boilerPlantImprovements = boilerPlantImprovements
          @chillerPlantImprovements = chillerPlantImprovements
          @buildingAutomationSystems = buildingAutomationSystems
          @otherHVAC = otherHVAC
          @lightingImprovements = lightingImprovements
          @buildingEnvelopeModifications = buildingEnvelopeModifications
          @chilledWaterHotWaterAndSteamDistributionSystems = chilledWaterHotWaterAndSteamDistributionSystems
          @conveyanceSystems = conveyanceSystems
          @otherElectricMotorsAndDrives = otherElectricMotorsAndDrives
          @refrigeration = refrigeration
          @distributedGeneration = distributedGeneration
          @renewableEnergySystems = renewableEnergySystems
          @energyDistributionSystems = energyDistributionSystems
          @serviceHotWaterSystems = serviceHotWaterSystems
          @waterAndSewerConservationSystems = waterAndSewerConservationSystems
          @electricalPeakShavingLoadShifting = electricalPeakShavingLoadShifting
          @energyCostReductionThroughRateAdjustments = energyCostReductionThroughRateAdjustments
          @energyRelatedProcessImprovements = energyRelatedProcessImprovements
          @advancedMeteringSystems = advancedMeteringSystems
          @plugLoadReductions = plugLoadReductions
          @dataCenterImprovements = dataCenterImprovements
          @futureOtherECMs = futureOtherECMs
          @healthAndSafety = healthAndSafety
          @uncategorized = uncategorized
        end
      end
    end

    # inner class for member: MeasureSavingsAnalysis
    # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureSavingsAnalysis
    #   measureRank - BuildingSync::MeasureType::MeasureSavingsAnalysis::MeasureRank
    #   referenceCase - BuildingSync::ReferenceCase
    #   calculationMethod - BuildingSync::CalculationMethodType
    #   annualSavingsSiteEnergy - BuildingSync::AnnualSavingsSiteEnergy
    #   annualSavingsSourceEnergy - BuildingSync::AnnualSavingsSourceEnergy
    #   annualSavingsCost - BuildingSync::AnnualSavingsCost
    #   annualSavingsByFuels - BuildingSync::AnnualSavingsByFuels
    #   summerPeakElectricityReduction - BuildingSync::SummerPeakElectricityReduction
    #   winterPeakElectricityReduction - BuildingSync::WinterPeakElectricityReduction
    #   annualPeakElectricityReduction - BuildingSync::AnnualPeakElectricityReduction
    #   annualDemandSavingsCost - BuildingSync::AnnualDemandSavingsCost
    #   annualWaterSavings - BuildingSync::AnnualWaterSavings
    #   annualWaterCostSavings - BuildingSync::AnnualWaterCostSavings
    #   oMCostAnnualSavings - BuildingSync::OMCostAnnualSavings
    #   otherCostAnnualSavings - BuildingSync::MeasureType::MeasureSavingsAnalysis::OtherCostAnnualSavings
    #   equipmentDisposalAndSalvageCosts - BuildingSync::EquipmentDisposalAndSalvageCosts
    #   fundingFromIncentives - BuildingSync::FundingFromIncentives
    #   fundingFromTaxCredits - BuildingSync::FundingFromTaxCredits
    #   nPVofTaxImplications - BuildingSync::NPVofTaxImplications
    #   costEffectivenessScreeningMethod - SOAP::SOAPString
    #   simplePayback - BuildingSync::SimplePayback
    #   netPresentValue - BuildingSync::NetPresentValue
    #   internalRateOfReturn - BuildingSync::InternalRateOfReturn
    class MeasureSavingsAnalysis

      # inner class for member: MeasureRank
      # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureRank
      #   xmlattr_Source - SOAP::SOAPString
      class MeasureRank < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: OtherCostAnnualSavings
      # {http://buildingsync.net/schemas/bedes-auc/2019}OtherCostAnnualSavings
      #   xmlattr_Source - SOAP::SOAPString
      class OtherCostAnnualSavings < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :measureRank
      attr_accessor :referenceCase
      attr_accessor :calculationMethod
      attr_accessor :annualSavingsSiteEnergy
      attr_accessor :annualSavingsSourceEnergy
      attr_accessor :annualSavingsCost
      attr_accessor :annualSavingsByFuels
      attr_accessor :summerPeakElectricityReduction
      attr_accessor :winterPeakElectricityReduction
      attr_accessor :annualPeakElectricityReduction
      attr_accessor :annualDemandSavingsCost
      attr_accessor :annualWaterSavings
      attr_accessor :annualWaterCostSavings
      attr_accessor :oMCostAnnualSavings
      attr_accessor :otherCostAnnualSavings
      attr_accessor :equipmentDisposalAndSalvageCosts
      attr_accessor :fundingFromIncentives
      attr_accessor :fundingFromTaxCredits
      attr_accessor :nPVofTaxImplications
      attr_accessor :costEffectivenessScreeningMethod
      attr_accessor :simplePayback
      attr_accessor :netPresentValue
      attr_accessor :internalRateOfReturn

      def initialize(measureRank = nil, referenceCase = nil, calculationMethod = nil, annualSavingsSiteEnergy = nil, annualSavingsSourceEnergy = nil, annualSavingsCost = nil, annualSavingsByFuels = nil, summerPeakElectricityReduction = nil, winterPeakElectricityReduction = nil, annualPeakElectricityReduction = nil, annualDemandSavingsCost = nil, annualWaterSavings = nil, annualWaterCostSavings = nil, oMCostAnnualSavings = nil, otherCostAnnualSavings = nil, equipmentDisposalAndSalvageCosts = nil, fundingFromIncentives = nil, fundingFromTaxCredits = nil, nPVofTaxImplications = nil, costEffectivenessScreeningMethod = nil, simplePayback = nil, netPresentValue = nil, internalRateOfReturn = nil)
        @measureRank = measureRank
        @referenceCase = referenceCase
        @calculationMethod = calculationMethod
        @annualSavingsSiteEnergy = annualSavingsSiteEnergy
        @annualSavingsSourceEnergy = annualSavingsSourceEnergy
        @annualSavingsCost = annualSavingsCost
        @annualSavingsByFuels = annualSavingsByFuels
        @summerPeakElectricityReduction = summerPeakElectricityReduction
        @winterPeakElectricityReduction = winterPeakElectricityReduction
        @annualPeakElectricityReduction = annualPeakElectricityReduction
        @annualDemandSavingsCost = annualDemandSavingsCost
        @annualWaterSavings = annualWaterSavings
        @annualWaterCostSavings = annualWaterCostSavings
        @oMCostAnnualSavings = oMCostAnnualSavings
        @otherCostAnnualSavings = otherCostAnnualSavings
        @equipmentDisposalAndSalvageCosts = equipmentDisposalAndSalvageCosts
        @fundingFromIncentives = fundingFromIncentives
        @fundingFromTaxCredits = fundingFromTaxCredits
        @nPVofTaxImplications = nPVofTaxImplications
        @costEffectivenessScreeningMethod = costEffectivenessScreeningMethod
        @simplePayback = simplePayback
        @netPresentValue = netPresentValue
        @internalRateOfReturn = internalRateOfReturn
      end
    end

    # inner class for member: UsefulLife
    # {http://buildingsync.net/schemas/bedes-auc/2019}UsefulLife
    #   xmlattr_Source - SOAP::SOAPString
    class UsefulLife < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MeasureTotalFirstCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureTotalFirstCost
    #   xmlattr_Source - SOAP::SOAPString
    class MeasureTotalFirstCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MeasureInstallationCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureInstallationCost
    #   xmlattr_Source - SOAP::SOAPString
    class MeasureInstallationCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MeasureMaterialCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}MeasureMaterialCost
    #   xmlattr_Source - SOAP::SOAPString
    class MeasureMaterialCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CapitalReplacementCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}CapitalReplacementCost
    #   xmlattr_Source - SOAP::SOAPString
    class CapitalReplacementCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ResidualValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}ResidualValue
    #   xmlattr_Source - SOAP::SOAPString
    class ResidualValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :typeOfMeasure
    attr_accessor :systemCategoryAffected
    attr_accessor :linkedPremises
    attr_accessor :technologyCategories
    attr_accessor :measureScaleOfApplication
    attr_accessor :customMeasureName
    attr_accessor :longDescription
    attr_accessor :measureSavingsAnalysis
    attr_accessor :mVCost
    attr_accessor :mVOption
    attr_accessor :usefulLife
    attr_accessor :measureTotalFirstCost
    attr_accessor :measureInstallationCost
    attr_accessor :measureMaterialCost
    attr_accessor :capitalReplacementCost
    attr_accessor :residualValue
    attr_accessor :recommended
    attr_accessor :startDate
    attr_accessor :endDate
    attr_accessor :implementationStatus
    attr_accessor :discardReason
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(typeOfMeasure = nil, systemCategoryAffected = nil, linkedPremises = nil, technologyCategories = nil, measureScaleOfApplication = nil, customMeasureName = nil, longDescription = nil, measureSavingsAnalysis = nil, mVCost = nil, mVOption = nil, usefulLife = nil, measureTotalFirstCost = nil, measureInstallationCost = nil, measureMaterialCost = nil, capitalReplacementCost = nil, residualValue = nil, recommended = nil, startDate = nil, endDate = nil, implementationStatus = nil, discardReason = nil, userDefinedFields = nil)
      @typeOfMeasure = typeOfMeasure
      @systemCategoryAffected = systemCategoryAffected
      @linkedPremises = linkedPremises
      @technologyCategories = technologyCategories
      @measureScaleOfApplication = measureScaleOfApplication
      @customMeasureName = customMeasureName
      @longDescription = longDescription
      @measureSavingsAnalysis = measureSavingsAnalysis
      @mVCost = mVCost
      @mVOption = mVOption
      @usefulLife = usefulLife
      @measureTotalFirstCost = measureTotalFirstCost
      @measureInstallationCost = measureInstallationCost
      @measureMaterialCost = measureMaterialCost
      @capitalReplacementCost = capitalReplacementCost
      @residualValue = residualValue
      @recommended = recommended
      @startDate = startDate
      @endDate = endDate
      @implementationStatus = implementationStatus
      @discardReason = discardReason
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ReportType
  #   scenarios - BuildingSync::ReportType::Scenarios
  #   auditDates - BuildingSync::ReportType::AuditDates
  #   auditFilingStatus - SOAP::SOAPString
  #   earlyCompliance - SOAP::SOAPBoolean
  #   aSHRAEAuditLevel - SOAP::SOAPString
  #   retrocommissioningAudit - SOAP::SOAPBoolean
  #   auditCost - BuildingSync::ReportType::AuditCost
  #   discountFactor - BuildingSync::ReportType::DiscountFactor
  #   analysisPeriod - BuildingSync::ReportType::AnalysisPeriod
  #   gasPriceEscalationRate - BuildingSync::ReportType::GasPriceEscalationRate
  #   electricityPriceEscalationRate - BuildingSync::ReportType::ElectricityPriceEscalationRate
  #   waterPriceEscalationRate - BuildingSync::ReportType::WaterPriceEscalationRate
  #   otherEscalationRates - BuildingSync::ReportType::OtherEscalationRates
  #   inflationRate - BuildingSync::ReportType::InflationRate
  #   qualifications - BuildingSync::ReportType::Qualifications
  #   auditExemption - SOAP::SOAPString
  #   utilities - BuildingSync::ReportType::Utilities
  #   auditorContactID - BuildingSync::ReportType::AuditorContactID
  #   linkedPremisesOrSystem - BuildingSync::LinkedPremisesOrSystem
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class ReportType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: Scenarios
    # {http://buildingsync.net/schemas/bedes-auc/2019}Scenarios
    class Scenarios < ::Array
    end

    # inner class for member: AuditDates
    # {http://buildingsync.net/schemas/bedes-auc/2019}AuditDates
    class AuditDates < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}AuditDate
      #   date - SOAP::SOAPDate
      #   dateType - SOAP::SOAPString
      #   customDateType - SOAP::SOAPString
      class AuditDate
        attr_accessor :date
        attr_accessor :dateType
        attr_accessor :customDateType

        def initialize(date = nil, dateType = nil, customDateType = nil)
          @date = date
          @dateType = dateType
          @customDateType = customDateType
        end
      end
    end

    # inner class for member: AuditCost
    # {http://buildingsync.net/schemas/bedes-auc/2019}AuditCost
    #   xmlattr_Source - SOAP::SOAPString
    class AuditCost < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DiscountFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}DiscountFactor
    #   xmlattr_Source - SOAP::SOAPString
    class DiscountFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: AnalysisPeriod
    # {http://buildingsync.net/schemas/bedes-auc/2019}AnalysisPeriod
    #   xmlattr_Source - SOAP::SOAPString
    class AnalysisPeriod < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: GasPriceEscalationRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}GasPriceEscalationRate
    #   xmlattr_Source - SOAP::SOAPString
    class GasPriceEscalationRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ElectricityPriceEscalationRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}ElectricityPriceEscalationRate
    #   xmlattr_Source - SOAP::SOAPString
    class ElectricityPriceEscalationRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterPriceEscalationRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterPriceEscalationRate
    #   xmlattr_Source - SOAP::SOAPString
    class WaterPriceEscalationRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OtherEscalationRates
    # {http://buildingsync.net/schemas/bedes-auc/2019}OtherEscalationRates
    class OtherEscalationRates < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}OtherEscalationRate
      #   energyResource - BuildingSync::FuelTypes
      #   escalationRate - SOAP::SOAPDecimal
      #   xmlattr_Source - SOAP::SOAPString
      class OtherEscalationRate
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        attr_accessor :energyResource
        attr_accessor :escalationRate

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(energyResource = nil, escalationRate = nil)
          @energyResource = energyResource
          @escalationRate = escalationRate
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: InflationRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}InflationRate
    #   xmlattr_Source - SOAP::SOAPString
    class InflationRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Qualifications
    # {http://buildingsync.net/schemas/bedes-auc/2019}Qualifications
    class Qualifications < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Qualification
      #   auditorQualification - BuildingSync::AuditorQualificationType
      #   auditorQualificationNumber - SOAP::SOAPString
      #   auditorQualificationState - BuildingSync::State
      #   certificationExpirationDate - SOAP::SOAPDate
      #   certifiedAuditTeamMemberContactID - BuildingSync::ReportType::Qualifications::Qualification::CertifiedAuditTeamMemberContactID
      #   auditTeamMemberCertificationType - BuildingSync::AuditorQualificationType
      #   auditorYearsOfExperience - BuildingSync::ReportType::Qualifications::Qualification::AuditorYearsOfExperience
      #   xmlattr_ID - SOAP::SOAPID
      class Qualification
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: CertifiedAuditTeamMemberContactID
        # {http://buildingsync.net/schemas/bedes-auc/2019}CertifiedAuditTeamMemberContactID
        #   xmlattr_IDref - SOAP::SOAPIDREF
        class CertifiedAuditTeamMemberContactID
          AttrIDref = XSD::QName.new(nil, "IDref")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_IDref
            __xmlattr[AttrIDref]
          end

          def xmlattr_IDref=(value)
            __xmlattr[AttrIDref] = value
          end

          def initialize
            @__xmlattr = {}
          end
        end

        # inner class for member: AuditorYearsOfExperience
        # {http://buildingsync.net/schemas/bedes-auc/2019}AuditorYearsOfExperience
        #   xmlattr_Source - SOAP::SOAPString
        class AuditorYearsOfExperience < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :auditorQualification
        attr_accessor :auditorQualificationNumber
        attr_accessor :auditorQualificationState
        attr_accessor :certificationExpirationDate
        attr_accessor :certifiedAuditTeamMemberContactID
        attr_accessor :auditTeamMemberCertificationType
        attr_accessor :auditorYearsOfExperience

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(auditorQualification = nil, auditorQualificationNumber = nil, auditorQualificationState = nil, certificationExpirationDate = nil, certifiedAuditTeamMemberContactID = nil, auditTeamMemberCertificationType = nil, auditorYearsOfExperience = nil)
          @auditorQualification = auditorQualification
          @auditorQualificationNumber = auditorQualificationNumber
          @auditorQualificationState = auditorQualificationState
          @certificationExpirationDate = certificationExpirationDate
          @certifiedAuditTeamMemberContactID = certifiedAuditTeamMemberContactID
          @auditTeamMemberCertificationType = auditTeamMemberCertificationType
          @auditorYearsOfExperience = auditorYearsOfExperience
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: Utilities
    # {http://buildingsync.net/schemas/bedes-auc/2019}Utilities
    class Utilities < ::Array
    end

    # inner class for member: AuditorContactID
    # {http://buildingsync.net/schemas/bedes-auc/2019}AuditorContactID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class AuditorContactID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    attr_accessor :scenarios
    attr_accessor :auditDates
    attr_accessor :auditFilingStatus
    attr_accessor :earlyCompliance
    attr_accessor :aSHRAEAuditLevel
    attr_accessor :retrocommissioningAudit
    attr_accessor :auditCost
    attr_accessor :discountFactor
    attr_accessor :analysisPeriod
    attr_accessor :gasPriceEscalationRate
    attr_accessor :electricityPriceEscalationRate
    attr_accessor :waterPriceEscalationRate
    attr_accessor :otherEscalationRates
    attr_accessor :inflationRate
    attr_accessor :qualifications
    attr_accessor :auditExemption
    attr_accessor :utilities
    attr_accessor :auditorContactID
    attr_accessor :linkedPremisesOrSystem
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(scenarios = nil, auditDates = nil, auditFilingStatus = nil, earlyCompliance = nil, aSHRAEAuditLevel = nil, retrocommissioningAudit = nil, auditCost = nil, discountFactor = nil, analysisPeriod = nil, gasPriceEscalationRate = nil, electricityPriceEscalationRate = nil, waterPriceEscalationRate = nil, otherEscalationRates = nil, inflationRate = nil, qualifications = nil, auditExemption = nil, utilities = nil, auditorContactID = nil, linkedPremisesOrSystem = nil, userDefinedFields = nil)
      @scenarios = scenarios
      @auditDates = auditDates
      @auditFilingStatus = auditFilingStatus
      @earlyCompliance = earlyCompliance
      @aSHRAEAuditLevel = aSHRAEAuditLevel
      @retrocommissioningAudit = retrocommissioningAudit
      @auditCost = auditCost
      @discountFactor = discountFactor
      @analysisPeriod = analysisPeriod
      @gasPriceEscalationRate = gasPriceEscalationRate
      @electricityPriceEscalationRate = electricityPriceEscalationRate
      @waterPriceEscalationRate = waterPriceEscalationRate
      @otherEscalationRates = otherEscalationRates
      @inflationRate = inflationRate
      @qualifications = qualifications
      @auditExemption = auditExemption
      @utilities = utilities
      @auditorContactID = auditorContactID
      @linkedPremisesOrSystem = linkedPremisesOrSystem
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HVACSystemType
  #   plants - BuildingSync::HVACSystemType::Plants
  #   heatingAndCoolingSystems - BuildingSync::HVACSystemType::HeatingAndCoolingSystems
  #   ductSystems - BuildingSync::HVACSystemType::DuctSystems
  #   otherHVACSystems - BuildingSync::HVACSystemType::OtherHVACSystems
  #   location - SOAP::SOAPString
  #   priority - SOAP::SOAPString
  #   frequencyOfMaintenance - SOAP::SOAPString
  #   primaryHVACSystemType - SOAP::SOAPString
  #   principalHVACSystemType - SOAP::SOAPString
  #   hVACControlSystemTypes - BuildingSync::HVACSystemType::HVACControlSystemTypes
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class HVACSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: Plants
    # {http://buildingsync.net/schemas/bedes-auc/2019}Plants
    #   heatingPlants - BuildingSync::HVACSystemType::Plants::HeatingPlants
    #   coolingPlants - BuildingSync::HVACSystemType::Plants::CoolingPlants
    #   condenserPlants - BuildingSync::HVACSystemType::Plants::CondenserPlants
    class Plants

      # inner class for member: HeatingPlants
      # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingPlants
      class HeatingPlants < ::Array
      end

      # inner class for member: CoolingPlants
      # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingPlants
      class CoolingPlants < ::Array
      end

      # inner class for member: CondenserPlants
      # {http://buildingsync.net/schemas/bedes-auc/2019}CondenserPlants
      class CondenserPlants < ::Array
      end

      attr_accessor :heatingPlants
      attr_accessor :coolingPlants
      attr_accessor :condenserPlants

      def initialize(heatingPlants = nil, coolingPlants = nil, condenserPlants = nil)
        @heatingPlants = heatingPlants
        @coolingPlants = coolingPlants
        @condenserPlants = condenserPlants
      end
    end

    # inner class for member: HeatingAndCoolingSystems
    # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingAndCoolingSystems
    #   zoningSystemType - SOAP::SOAPString
    #   heatingSources - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources
    #   coolingSources - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources
    #   deliveries - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries
    class HeatingAndCoolingSystems

      # inner class for member: HeatingSources
      # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingSources
      class HeatingSources < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingSource
        #   heatingSourceType - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType
        #   heatingMedium - SOAP::SOAPString
        #   annualHeatingEfficiencyValue - BuildingSync::AnnualHeatingEfficiencyValue
        #   annualHeatingEfficiencyUnits - SOAP::SOAPString
        #   inputCapacity - BuildingSync::InputCapacity
        #   outputCapacity - BuildingSync::OutputCapacity
        #   capacity - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::Capacity
        #   capacityUnits - SOAP::SOAPString
        #   heatingStaging - SOAP::SOAPString
        #   numberOfHeatingStages - BuildingSync::NumberOfHeatingStages
        #   heatingStageCapacityFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
        #   primaryFuel - BuildingSync::FuelTypes
        #   heatingSourceCondition - BuildingSync::EquipmentCondition
        #   controls - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::Controls
        #   location - SOAP::SOAPString
        #   yearInstalled - SOAP::SOAPGYear
        #   yearOfManufacture - SOAP::SOAPGYear
        #   manufacturer - SOAP::SOAPString
        #   modelNumber - SOAP::SOAPString
        #   userDefinedFields - BuildingSync::UserDefinedFields
        #   quantity - BuildingSync::Quantity
        #   xmlattr_ID - SOAP::SOAPID
        #   xmlattr_Status - SOAP::SOAPString
        class HeatingSource
          AttrID = XSD::QName.new(nil, "ID")
          AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

          # inner class for member: HeatingSourceType
          # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingSourceType
          #   sourceHeatingPlantID - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::SourceHeatingPlantID
          #   electricResistance - BuildingSync::ElectricResistanceType
          #   furnace - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::Furnace
          #   heatPump - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::HeatPump
          #   otherCombination - BuildingSync::OtherCombinationType
          #   noHeating - BuildingSync::NoHeatingType
          #   unknown - BuildingSync::UnknownType
          class HeatingSourceType

            # inner class for member: SourceHeatingPlantID
            # {http://buildingsync.net/schemas/bedes-auc/2019}SourceHeatingPlantID
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class SourceHeatingPlantID
              AttrIDref = XSD::QName.new(nil, "IDref")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize
                @__xmlattr = {}
              end
            end

            # inner class for member: Furnace
            # {http://buildingsync.net/schemas/bedes-auc/2019}Furnace
            #   furnaceType - SOAP::SOAPString
            #   burnerType - SOAP::SOAPString
            #   burnerControlType - SOAP::SOAPString
            #   burnerQuantity - BuildingSync::BurnerQuantity
            #   burnerYearInstalled - SOAP::SOAPGYear
            #   burnerTurndownRatio - BuildingSync::BurnerTurndownRatio
            #   ignitionType - SOAP::SOAPString
            #   draftType - SOAP::SOAPString
            #   draftBoundary - SOAP::SOAPString
            #   condensingOperation - SOAP::SOAPString
            #   combustionEfficiency - BuildingSync::CombustionEfficiency
            #   thermalEfficiency - BuildingSync::ThermalEfficiency
            #   thirdPartyCertification - SOAP::SOAPString
            class Furnace
              attr_accessor :furnaceType
              attr_accessor :burnerType
              attr_accessor :burnerControlType
              attr_accessor :burnerQuantity
              attr_accessor :burnerYearInstalled
              attr_accessor :burnerTurndownRatio
              attr_accessor :ignitionType
              attr_accessor :draftType
              attr_accessor :draftBoundary
              attr_accessor :condensingOperation
              attr_accessor :combustionEfficiency
              attr_accessor :thermalEfficiency
              attr_accessor :thirdPartyCertification

              def initialize(furnaceType = nil, burnerType = nil, burnerControlType = nil, burnerQuantity = nil, burnerYearInstalled = nil, burnerTurndownRatio = nil, ignitionType = nil, draftType = nil, draftBoundary = nil, condensingOperation = nil, combustionEfficiency = nil, thermalEfficiency = nil, thirdPartyCertification = nil)
                @furnaceType = furnaceType
                @burnerType = burnerType
                @burnerControlType = burnerControlType
                @burnerQuantity = burnerQuantity
                @burnerYearInstalled = burnerYearInstalled
                @burnerTurndownRatio = burnerTurndownRatio
                @ignitionType = ignitionType
                @draftType = draftType
                @draftBoundary = draftBoundary
                @condensingOperation = condensingOperation
                @combustionEfficiency = combustionEfficiency
                @thermalEfficiency = thermalEfficiency
                @thirdPartyCertification = thirdPartyCertification
              end
            end

            # inner class for member: HeatPump
            # {http://buildingsync.net/schemas/bedes-auc/2019}HeatPump
            #   heatPumpType - SOAP::SOAPString
            #   heatPumpBackupHeatingSwitchoverTemperature - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::HeatPump::HeatPumpBackupHeatingSwitchoverTemperature
            #   heatPumpBackupSystemFuel - BuildingSync::FuelTypes
            #   heatPumpBackupAFUE - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::HeatPump::HeatPumpBackupAFUE
            #   thirdPartyCertification - SOAP::SOAPString
            #   coolingSourceID - BuildingSync::CoolingSourceID
            #   linkedHeatingPlantID - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::HeatingSources::HeatingSource::HeatingSourceType::HeatPump::LinkedHeatingPlantID
            class HeatPump

              # inner class for member: HeatPumpBackupHeatingSwitchoverTemperature
              # {http://buildingsync.net/schemas/bedes-auc/2019}HeatPumpBackupHeatingSwitchoverTemperature
              #   xmlattr_Source - SOAP::SOAPString
              class HeatPumpBackupHeatingSwitchoverTemperature < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: HeatPumpBackupAFUE
              # {http://buildingsync.net/schemas/bedes-auc/2019}HeatPumpBackupAFUE
              #   xmlattr_Source - SOAP::SOAPString
              class HeatPumpBackupAFUE < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: LinkedHeatingPlantID
              # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedHeatingPlantID
              #   xmlattr_IDref - SOAP::SOAPIDREF
              class LinkedHeatingPlantID
                AttrIDref = XSD::QName.new(nil, "IDref")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_IDref
                  __xmlattr[AttrIDref]
                end

                def xmlattr_IDref=(value)
                  __xmlattr[AttrIDref] = value
                end

                def initialize
                  @__xmlattr = {}
                end
              end

              attr_accessor :heatPumpType
              attr_accessor :heatPumpBackupHeatingSwitchoverTemperature
              attr_accessor :heatPumpBackupSystemFuel
              attr_accessor :heatPumpBackupAFUE
              attr_accessor :thirdPartyCertification
              attr_accessor :coolingSourceID
              attr_accessor :linkedHeatingPlantID

              def initialize(heatPumpType = nil, heatPumpBackupHeatingSwitchoverTemperature = nil, heatPumpBackupSystemFuel = nil, heatPumpBackupAFUE = nil, thirdPartyCertification = nil, coolingSourceID = nil, linkedHeatingPlantID = nil)
                @heatPumpType = heatPumpType
                @heatPumpBackupHeatingSwitchoverTemperature = heatPumpBackupHeatingSwitchoverTemperature
                @heatPumpBackupSystemFuel = heatPumpBackupSystemFuel
                @heatPumpBackupAFUE = heatPumpBackupAFUE
                @thirdPartyCertification = thirdPartyCertification
                @coolingSourceID = coolingSourceID
                @linkedHeatingPlantID = linkedHeatingPlantID
              end
            end

            attr_accessor :sourceHeatingPlantID
            attr_accessor :electricResistance
            attr_accessor :furnace
            attr_accessor :heatPump
            attr_accessor :otherCombination
            attr_accessor :noHeating
            attr_accessor :unknown

            def initialize(sourceHeatingPlantID = nil, electricResistance = nil, furnace = nil, heatPump = nil, otherCombination = nil, noHeating = nil, unknown = nil)
              @sourceHeatingPlantID = sourceHeatingPlantID
              @electricResistance = electricResistance
              @furnace = furnace
              @heatPump = heatPump
              @otherCombination = otherCombination
              @noHeating = noHeating
              @unknown = unknown
            end
          end

          # inner class for member: Capacity
          # {http://buildingsync.net/schemas/bedes-auc/2019}Capacity
          #   xmlattr_Source - SOAP::SOAPString
          class Capacity < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          # inner class for member: Controls
          # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
          class Controls < ::Array
          end

          attr_accessor :heatingSourceType
          attr_accessor :heatingMedium
          attr_accessor :annualHeatingEfficiencyValue
          attr_accessor :annualHeatingEfficiencyUnits
          attr_accessor :inputCapacity
          attr_accessor :outputCapacity
          attr_accessor :capacity
          attr_accessor :capacityUnits
          attr_accessor :heatingStaging
          attr_accessor :numberOfHeatingStages
          attr_accessor :heatingStageCapacityFraction
          attr_accessor :primaryFuel
          attr_accessor :heatingSourceCondition
          attr_accessor :controls
          attr_accessor :location
          attr_accessor :yearInstalled
          attr_accessor :yearOfManufacture
          attr_accessor :manufacturer
          attr_accessor :modelNumber
          attr_accessor :userDefinedFields
          attr_accessor :quantity

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_ID
            __xmlattr[AttrID]
          end

          def xmlattr_ID=(value)
            __xmlattr[AttrID] = value
          end

          def xmlattr_Status
            __xmlattr[AttrStatus]
          end

          def xmlattr_Status=(value)
            __xmlattr[AttrStatus] = value
          end

          def initialize(heatingSourceType = nil, heatingMedium = nil, annualHeatingEfficiencyValue = nil, annualHeatingEfficiencyUnits = nil, inputCapacity = nil, outputCapacity = nil, capacity = nil, capacityUnits = nil, heatingStaging = nil, numberOfHeatingStages = nil, heatingStageCapacityFraction = nil, primaryFuel = nil, heatingSourceCondition = nil, controls = nil, location = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, userDefinedFields = nil, quantity = nil)
            @heatingSourceType = heatingSourceType
            @heatingMedium = heatingMedium
            @annualHeatingEfficiencyValue = annualHeatingEfficiencyValue
            @annualHeatingEfficiencyUnits = annualHeatingEfficiencyUnits
            @inputCapacity = inputCapacity
            @outputCapacity = outputCapacity
            @capacity = capacity
            @capacityUnits = capacityUnits
            @heatingStaging = heatingStaging
            @numberOfHeatingStages = numberOfHeatingStages
            @heatingStageCapacityFraction = heatingStageCapacityFraction
            @primaryFuel = primaryFuel
            @heatingSourceCondition = heatingSourceCondition
            @controls = controls
            @location = location
            @yearInstalled = yearInstalled
            @yearOfManufacture = yearOfManufacture
            @manufacturer = manufacturer
            @modelNumber = modelNumber
            @userDefinedFields = userDefinedFields
            @quantity = quantity
            @__xmlattr = {}
          end
        end
      end

      # inner class for member: CoolingSources
      # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingSources
      class CoolingSources < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingSource
        #   coolingSourceType - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources::CoolingSource::CoolingSourceType
        #   coolingMedium - SOAP::SOAPString
        #   annualCoolingEfficiencyValue - BuildingSync::AnnualCoolingEfficiencyValue
        #   annualCoolingEfficiencyUnits - SOAP::SOAPString
        #   capacity - BuildingSync::Capacity
        #   capacityUnits - SOAP::SOAPString
        #   numberOfDiscreteCoolingStages - BuildingSync::NumberOfDiscreteCoolingStages
        #   coolingStageCapacity - BuildingSync::CoolingStageCapacity
        #   minimumPartLoadRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
        #   ratedCoolingSensibleHeatRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
        #   thirdPartyCertification - SOAP::SOAPString
        #   primaryFuel - BuildingSync::FuelTypes
        #   coolingSourceCondition - BuildingSync::EquipmentCondition
        #   controls - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources::CoolingSource::Controls
        #   location - SOAP::SOAPString
        #   yearInstalled - SOAP::SOAPGYear
        #   yearOfManufacture - SOAP::SOAPGYear
        #   manufacturer - SOAP::SOAPString
        #   modelNumber - SOAP::SOAPString
        #   userDefinedFields - BuildingSync::UserDefinedFields
        #   quantity - BuildingSync::Quantity
        #   xmlattr_ID - SOAP::SOAPID
        #   xmlattr_Status - SOAP::SOAPString
        class CoolingSource
          AttrID = XSD::QName.new(nil, "ID")
          AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

          # inner class for member: CoolingSourceType
          # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingSourceType
          #   coolingPlantID - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources::CoolingSource::CoolingSourceType::CoolingPlantID
          #   dX - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources::CoolingSource::CoolingSourceType::DX
          #   evaporativeCooler - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::CoolingSources::CoolingSource::CoolingSourceType::EvaporativeCooler
          #   otherCombination - BuildingSync::OtherCombinationType
          #   noCooling - BuildingSync::NoCoolingType
          #   unknown - BuildingSync::UnknownType
          class CoolingSourceType

            # inner class for member: CoolingPlantID
            # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingPlantID
            #   xmlattr_IDref - SOAP::SOAPIDREF
            class CoolingPlantID
              AttrIDref = XSD::QName.new(nil, "IDref")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_IDref
                __xmlattr[AttrIDref]
              end

              def xmlattr_IDref=(value)
                __xmlattr[AttrIDref] = value
              end

              def initialize
                @__xmlattr = {}
              end
            end

            # inner class for member: DX
            # {http://buildingsync.net/schemas/bedes-auc/2019}DX
            #   dXSystemType - SOAP::SOAPString
            #   compressorType - SOAP::SOAPString
            #   compressorStaging - SOAP::SOAPString
            #   condenserPlantIDs - BuildingSync::CondenserPlantIDs
            #   refrigerant - SOAP::SOAPString
            #   refrigerantChargeFactor - BuildingSync::RefrigerantChargeFactor
            #   activeDehumidification - SOAP::SOAPBoolean
            class DX
              attr_accessor :dXSystemType
              attr_accessor :compressorType
              attr_accessor :compressorStaging
              attr_accessor :condenserPlantIDs
              attr_accessor :refrigerant
              attr_accessor :refrigerantChargeFactor
              attr_accessor :activeDehumidification

              def initialize(dXSystemType = nil, compressorType = nil, compressorStaging = nil, condenserPlantIDs = nil, refrigerant = nil, refrigerantChargeFactor = nil, activeDehumidification = nil)
                @dXSystemType = dXSystemType
                @compressorType = compressorType
                @compressorStaging = compressorStaging
                @condenserPlantIDs = condenserPlantIDs
                @refrigerant = refrigerant
                @refrigerantChargeFactor = refrigerantChargeFactor
                @activeDehumidification = activeDehumidification
              end
            end

            # inner class for member: EvaporativeCooler
            # {http://buildingsync.net/schemas/bedes-auc/2019}EvaporativeCooler
            #   evaporativeCoolingType - SOAP::SOAPString
            class EvaporativeCooler
              attr_accessor :evaporativeCoolingType

              def initialize(evaporativeCoolingType = nil)
                @evaporativeCoolingType = evaporativeCoolingType
              end
            end

            attr_accessor :coolingPlantID
            attr_accessor :dX
            attr_accessor :evaporativeCooler
            attr_accessor :otherCombination
            attr_accessor :noCooling
            attr_accessor :unknown

            def initialize(coolingPlantID = nil, dX = nil, evaporativeCooler = nil, otherCombination = nil, noCooling = nil, unknown = nil)
              @coolingPlantID = coolingPlantID
              @dX = dX
              @evaporativeCooler = evaporativeCooler
              @otherCombination = otherCombination
              @noCooling = noCooling
              @unknown = unknown
            end
          end

          # inner class for member: Controls
          # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
          class Controls < ::Array
          end

          attr_accessor :coolingSourceType
          attr_accessor :coolingMedium
          attr_accessor :annualCoolingEfficiencyValue
          attr_accessor :annualCoolingEfficiencyUnits
          attr_accessor :capacity
          attr_accessor :capacityUnits
          attr_accessor :numberOfDiscreteCoolingStages
          attr_accessor :coolingStageCapacity
          attr_accessor :minimumPartLoadRatio
          attr_accessor :ratedCoolingSensibleHeatRatio
          attr_accessor :thirdPartyCertification
          attr_accessor :primaryFuel
          attr_accessor :coolingSourceCondition
          attr_accessor :controls
          attr_accessor :location
          attr_accessor :yearInstalled
          attr_accessor :yearOfManufacture
          attr_accessor :manufacturer
          attr_accessor :modelNumber
          attr_accessor :userDefinedFields
          attr_accessor :quantity

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_ID
            __xmlattr[AttrID]
          end

          def xmlattr_ID=(value)
            __xmlattr[AttrID] = value
          end

          def xmlattr_Status
            __xmlattr[AttrStatus]
          end

          def xmlattr_Status=(value)
            __xmlattr[AttrStatus] = value
          end

          def initialize(coolingSourceType = nil, coolingMedium = nil, annualCoolingEfficiencyValue = nil, annualCoolingEfficiencyUnits = nil, capacity = nil, capacityUnits = nil, numberOfDiscreteCoolingStages = nil, coolingStageCapacity = nil, minimumPartLoadRatio = nil, ratedCoolingSensibleHeatRatio = nil, thirdPartyCertification = nil, primaryFuel = nil, coolingSourceCondition = nil, controls = nil, location = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, userDefinedFields = nil, quantity = nil)
            @coolingSourceType = coolingSourceType
            @coolingMedium = coolingMedium
            @annualCoolingEfficiencyValue = annualCoolingEfficiencyValue
            @annualCoolingEfficiencyUnits = annualCoolingEfficiencyUnits
            @capacity = capacity
            @capacityUnits = capacityUnits
            @numberOfDiscreteCoolingStages = numberOfDiscreteCoolingStages
            @coolingStageCapacity = coolingStageCapacity
            @minimumPartLoadRatio = minimumPartLoadRatio
            @ratedCoolingSensibleHeatRatio = ratedCoolingSensibleHeatRatio
            @thirdPartyCertification = thirdPartyCertification
            @primaryFuel = primaryFuel
            @coolingSourceCondition = coolingSourceCondition
            @controls = controls
            @location = location
            @yearInstalled = yearInstalled
            @yearOfManufacture = yearOfManufacture
            @manufacturer = manufacturer
            @modelNumber = modelNumber
            @userDefinedFields = userDefinedFields
            @quantity = quantity
            @__xmlattr = {}
          end
        end
      end

      # inner class for member: Deliveries
      # {http://buildingsync.net/schemas/bedes-auc/2019}Deliveries
      class Deliveries < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}Delivery
        #   deliveryType - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType
        #   heatingSourceID - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::HeatingSourceID
        #   coolingSourceID - BuildingSync::CoolingSourceID
        #   capacity - BuildingSync::Capacity
        #   capacityUnits - SOAP::SOAPString
        #   primaryFuel - BuildingSync::FuelTypes
        #   controls - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::Controls
        #   yearInstalled - SOAP::SOAPGYear
        #   yearOfManufacture - SOAP::SOAPGYear
        #   manufacturer - SOAP::SOAPString
        #   modelNumber - SOAP::SOAPString
        #   thirdPartyCertification - SOAP::SOAPString
        #   quantity - BuildingSync::Quantity
        #   deliveryCondition - BuildingSync::EquipmentCondition
        #   xmlattr_ID - SOAP::SOAPID
        #   xmlattr_Status - SOAP::SOAPString
        class Delivery
          AttrID = XSD::QName.new(nil, "ID")
          AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

          # inner class for member: DeliveryType
          # {http://buildingsync.net/schemas/bedes-auc/2019}DeliveryType
          #   zoneEquipment - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType::ZoneEquipment
          #   centralAirDistribution - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType::CentralAirDistribution
          #   other - BuildingSync::OtherType
          class DeliveryType

            # inner class for member: ZoneEquipment
            # {http://buildingsync.net/schemas/bedes-auc/2019}ZoneEquipment
            #   fanBased - BuildingSync::FanBasedType
            #   convection - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType::ZoneEquipment::Convection
            #   radiant - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType::ZoneEquipment::Radiant
            #   other - BuildingSync::OtherType
            class ZoneEquipment

              # inner class for member: Convection
              # {http://buildingsync.net/schemas/bedes-auc/2019}Convection
              #   convectionType - SOAP::SOAPString
              #   pipeInsulationThickness - BuildingSync::PipeInsulationThickness
              #   pipeLocation - BuildingSync::PipeLocation
              class Convection
                attr_accessor :convectionType
                attr_accessor :pipeInsulationThickness
                attr_accessor :pipeLocation

                def initialize(convectionType = nil, pipeInsulationThickness = nil, pipeLocation = nil)
                  @convectionType = convectionType
                  @pipeInsulationThickness = pipeInsulationThickness
                  @pipeLocation = pipeLocation
                end
              end

              # inner class for member: Radiant
              # {http://buildingsync.net/schemas/bedes-auc/2019}Radiant
              #   radiantType - SOAP::SOAPString
              #   pipeInsulationThickness - BuildingSync::PipeInsulationThickness
              #   pipeLocation - BuildingSync::PipeLocation
              class Radiant
                attr_accessor :radiantType
                attr_accessor :pipeInsulationThickness
                attr_accessor :pipeLocation

                def initialize(radiantType = nil, pipeInsulationThickness = nil, pipeLocation = nil)
                  @radiantType = radiantType
                  @pipeInsulationThickness = pipeInsulationThickness
                  @pipeLocation = pipeLocation
                end
              end

              attr_accessor :fanBased
              attr_accessor :convection
              attr_accessor :radiant
              attr_accessor :other

              def initialize(fanBased = nil, convection = nil, radiant = nil, other = nil)
                @fanBased = fanBased
                @convection = convection
                @radiant = radiant
                @other = other
              end
            end

            # inner class for member: CentralAirDistribution
            # {http://buildingsync.net/schemas/bedes-auc/2019}CentralAirDistribution
            #   airDeliveryType - SOAP::SOAPString
            #   terminalUnit - SOAP::SOAPString
            #   reheatSource - SOAP::SOAPString
            #   reheatControlMethod - SOAP::SOAPString
            #   reheatPlantID - BuildingSync::HVACSystemType::HeatingAndCoolingSystems::Deliveries::Delivery::DeliveryType::CentralAirDistribution::ReheatPlantID
            #   fanBased - BuildingSync::FanBasedType
            class CentralAirDistribution

              # inner class for member: ReheatPlantID
              # {http://buildingsync.net/schemas/bedes-auc/2019}ReheatPlantID
              #   xmlattr_IDref - SOAP::SOAPIDREF
              class ReheatPlantID
                AttrIDref = XSD::QName.new(nil, "IDref")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_IDref
                  __xmlattr[AttrIDref]
                end

                def xmlattr_IDref=(value)
                  __xmlattr[AttrIDref] = value
                end

                def initialize
                  @__xmlattr = {}
                end
              end

              attr_accessor :airDeliveryType
              attr_accessor :terminalUnit
              attr_accessor :reheatSource
              attr_accessor :reheatControlMethod
              attr_accessor :reheatPlantID
              attr_accessor :fanBased

              def initialize(airDeliveryType = nil, terminalUnit = nil, reheatSource = nil, reheatControlMethod = nil, reheatPlantID = nil, fanBased = nil)
                @airDeliveryType = airDeliveryType
                @terminalUnit = terminalUnit
                @reheatSource = reheatSource
                @reheatControlMethod = reheatControlMethod
                @reheatPlantID = reheatPlantID
                @fanBased = fanBased
              end
            end

            attr_accessor :zoneEquipment
            attr_accessor :centralAirDistribution
            attr_accessor :other

            def initialize(zoneEquipment = nil, centralAirDistribution = nil, other = nil)
              @zoneEquipment = zoneEquipment
              @centralAirDistribution = centralAirDistribution
              @other = other
            end
          end

          # inner class for member: HeatingSourceID
          # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingSourceID
          #   xmlattr_IDref - SOAP::SOAPIDREF
          class HeatingSourceID
            AttrIDref = XSD::QName.new(nil, "IDref")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_IDref
              __xmlattr[AttrIDref]
            end

            def xmlattr_IDref=(value)
              __xmlattr[AttrIDref] = value
            end

            def initialize
              @__xmlattr = {}
            end
          end

          # inner class for member: Controls
          # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
          class Controls < ::Array
          end

          attr_accessor :deliveryType
          attr_accessor :heatingSourceID
          attr_accessor :coolingSourceID
          attr_accessor :capacity
          attr_accessor :capacityUnits
          attr_accessor :primaryFuel
          attr_accessor :controls
          attr_accessor :yearInstalled
          attr_accessor :yearOfManufacture
          attr_accessor :manufacturer
          attr_accessor :modelNumber
          attr_accessor :thirdPartyCertification
          attr_accessor :quantity
          attr_accessor :deliveryCondition

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_ID
            __xmlattr[AttrID]
          end

          def xmlattr_ID=(value)
            __xmlattr[AttrID] = value
          end

          def xmlattr_Status
            __xmlattr[AttrStatus]
          end

          def xmlattr_Status=(value)
            __xmlattr[AttrStatus] = value
          end

          def initialize(deliveryType = nil, heatingSourceID = nil, coolingSourceID = nil, capacity = nil, capacityUnits = nil, primaryFuel = nil, controls = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, thirdPartyCertification = nil, quantity = nil, deliveryCondition = nil)
            @deliveryType = deliveryType
            @heatingSourceID = heatingSourceID
            @coolingSourceID = coolingSourceID
            @capacity = capacity
            @capacityUnits = capacityUnits
            @primaryFuel = primaryFuel
            @controls = controls
            @yearInstalled = yearInstalled
            @yearOfManufacture = yearOfManufacture
            @manufacturer = manufacturer
            @modelNumber = modelNumber
            @thirdPartyCertification = thirdPartyCertification
            @quantity = quantity
            @deliveryCondition = deliveryCondition
            @__xmlattr = {}
          end
        end
      end

      attr_accessor :zoningSystemType
      attr_accessor :heatingSources
      attr_accessor :coolingSources
      attr_accessor :deliveries

      def initialize(zoningSystemType = nil, heatingSources = nil, coolingSources = nil, deliveries = nil)
        @zoningSystemType = zoningSystemType
        @heatingSources = heatingSources
        @coolingSources = coolingSources
        @deliveries = deliveries
      end
    end

    # inner class for member: DuctSystems
    # {http://buildingsync.net/schemas/bedes-auc/2019}DuctSystems
    class DuctSystems < ::Array
    end

    # inner class for member: OtherHVACSystems
    # {http://buildingsync.net/schemas/bedes-auc/2019}OtherHVACSystems
    class OtherHVACSystems < ::Array
    end

    # inner class for member: HVACControlSystemTypes
    # {http://buildingsync.net/schemas/bedes-auc/2019}HVACControlSystemTypes
    class HVACControlSystemTypes < ::Array
    end

    attr_accessor :plants
    attr_accessor :heatingAndCoolingSystems
    attr_accessor :ductSystems
    attr_accessor :otherHVACSystems
    attr_accessor :location
    attr_accessor :priority
    attr_accessor :frequencyOfMaintenance
    attr_accessor :primaryHVACSystemType
    attr_accessor :principalHVACSystemType
    attr_accessor :hVACControlSystemTypes
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(plants = nil, heatingAndCoolingSystems = nil, ductSystems = nil, otherHVACSystems = nil, location = nil, priority = nil, frequencyOfMaintenance = nil, primaryHVACSystemType = nil, principalHVACSystemType = nil, hVACControlSystemTypes = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @plants = plants
      @heatingAndCoolingSystems = heatingAndCoolingSystems
      @ductSystems = ductSystems
      @otherHVACSystems = otherHVACSystems
      @location = location
      @priority = priority
      @frequencyOfMaintenance = frequencyOfMaintenance
      @primaryHVACSystemType = primaryHVACSystemType
      @principalHVACSystemType = principalHVACSystemType
      @hVACControlSystemTypes = hVACControlSystemTypes
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DuctSystemType
  #   ductConfiguration - SOAP::SOAPString
  #   minimumOutsideAirPercentage - BuildingSync::DuctSystemType::MinimumOutsideAirPercentage
  #   maximumOAFlowRate - BuildingSync::DuctSystemType::MaximumOAFlowRate
  #   maximumOutsideAirFlowRate - BuildingSync::DuctSystemType::MaximumOutsideAirFlowRate
  #   ductInsulationCondition - BuildingSync::InsulationCondition
  #   ductSealing - SOAP::SOAPString
  #   ductInsulationRValue - BuildingSync::DuctSystemType::DuctInsulationRValue
  #   ductSurfaceArea - BuildingSync::DuctSystemType::DuctSurfaceArea
  #   supplyDuctPercentConditionedSpace - BuildingSync::DuctSystemType::SupplyDuctPercentConditionedSpace
  #   returnDuctPercentConditionedSpace - BuildingSync::DuctSystemType::ReturnDuctPercentConditionedSpace
  #   staticPressureInstalled - BuildingSync::DuctSystemType::StaticPressureInstalled
  #   ductType - SOAP::SOAPString
  #   ductLeakageTestMethod - SOAP::SOAPString
  #   ductPressureTestLeakageRate - BuildingSync::DuctSystemType::DuctPressureTestLeakageRate
  #   supplyFractionOfDuctLeakage - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   ductPressureTestLeakagePercentage - BuildingSync::DuctSystemType::DuctPressureTestLeakagePercentage
  #   quantity - BuildingSync::Quantity
  #   location - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   heatingDeliveryID - BuildingSync::DuctSystemType::HeatingDeliveryID
  #   coolingDeliveryID - BuildingSync::DuctSystemType::CoolingDeliveryID
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class DuctSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: MinimumOutsideAirPercentage
    # {http://buildingsync.net/schemas/bedes-auc/2019}MinimumOutsideAirPercentage
    #   xmlattr_Source - SOAP::SOAPString
    class MinimumOutsideAirPercentage < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MaximumOAFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}MaximumOAFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class MaximumOAFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MaximumOutsideAirFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}MaximumOutsideAirFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class MaximumOutsideAirFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DuctInsulationRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}DuctInsulationRValue
    #   xmlattr_Source - SOAP::SOAPString
    class DuctInsulationRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DuctSurfaceArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}DuctSurfaceArea
    #   xmlattr_Source - SOAP::SOAPString
    class DuctSurfaceArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SupplyDuctPercentConditionedSpace
    # {http://buildingsync.net/schemas/bedes-auc/2019}SupplyDuctPercentConditionedSpace
    #   xmlattr_Source - SOAP::SOAPString
    class SupplyDuctPercentConditionedSpace < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ReturnDuctPercentConditionedSpace
    # {http://buildingsync.net/schemas/bedes-auc/2019}ReturnDuctPercentConditionedSpace
    #   xmlattr_Source - SOAP::SOAPString
    class ReturnDuctPercentConditionedSpace < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: StaticPressureInstalled
    # {http://buildingsync.net/schemas/bedes-auc/2019}StaticPressureInstalled
    #   xmlattr_Source - SOAP::SOAPString
    class StaticPressureInstalled < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DuctPressureTestLeakageRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}DuctPressureTestLeakageRate
    #   xmlattr_Source - SOAP::SOAPString
    class DuctPressureTestLeakageRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DuctPressureTestLeakagePercentage
    # {http://buildingsync.net/schemas/bedes-auc/2019}DuctPressureTestLeakagePercentage
    #   xmlattr_Source - SOAP::SOAPString
    class DuctPressureTestLeakagePercentage < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: HeatingDeliveryID
    # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingDeliveryID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class HeatingDeliveryID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    # inner class for member: CoolingDeliveryID
    # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingDeliveryID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class CoolingDeliveryID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    attr_accessor :ductConfiguration
    attr_accessor :minimumOutsideAirPercentage
    attr_accessor :maximumOAFlowRate
    attr_accessor :maximumOutsideAirFlowRate
    attr_accessor :ductInsulationCondition
    attr_accessor :ductSealing
    attr_accessor :ductInsulationRValue
    attr_accessor :ductSurfaceArea
    attr_accessor :supplyDuctPercentConditionedSpace
    attr_accessor :returnDuctPercentConditionedSpace
    attr_accessor :staticPressureInstalled
    attr_accessor :ductType
    attr_accessor :ductLeakageTestMethod
    attr_accessor :ductPressureTestLeakageRate
    attr_accessor :supplyFractionOfDuctLeakage
    attr_accessor :ductPressureTestLeakagePercentage
    attr_accessor :quantity
    attr_accessor :location
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :heatingDeliveryID
    attr_accessor :coolingDeliveryID
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(ductConfiguration = nil, minimumOutsideAirPercentage = nil, maximumOAFlowRate = nil, maximumOutsideAirFlowRate = nil, ductInsulationCondition = nil, ductSealing = nil, ductInsulationRValue = nil, ductSurfaceArea = nil, supplyDuctPercentConditionedSpace = nil, returnDuctPercentConditionedSpace = nil, staticPressureInstalled = nil, ductType = nil, ductLeakageTestMethod = nil, ductPressureTestLeakageRate = nil, supplyFractionOfDuctLeakage = nil, ductPressureTestLeakagePercentage = nil, quantity = nil, location = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, heatingDeliveryID = nil, coolingDeliveryID = nil, linkedPremises = nil, userDefinedFields = nil)
      @ductConfiguration = ductConfiguration
      @minimumOutsideAirPercentage = minimumOutsideAirPercentage
      @maximumOAFlowRate = maximumOAFlowRate
      @maximumOutsideAirFlowRate = maximumOutsideAirFlowRate
      @ductInsulationCondition = ductInsulationCondition
      @ductSealing = ductSealing
      @ductInsulationRValue = ductInsulationRValue
      @ductSurfaceArea = ductSurfaceArea
      @supplyDuctPercentConditionedSpace = supplyDuctPercentConditionedSpace
      @returnDuctPercentConditionedSpace = returnDuctPercentConditionedSpace
      @staticPressureInstalled = staticPressureInstalled
      @ductType = ductType
      @ductLeakageTestMethod = ductLeakageTestMethod
      @ductPressureTestLeakageRate = ductPressureTestLeakageRate
      @supplyFractionOfDuctLeakage = supplyFractionOfDuctLeakage
      @ductPressureTestLeakagePercentage = ductPressureTestLeakagePercentage
      @quantity = quantity
      @location = location
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @heatingDeliveryID = heatingDeliveryID
      @coolingDeliveryID = coolingDeliveryID
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingPlantType
  #   boiler - BuildingSync::HeatingPlantType::Boiler
  #   districtHeating - BuildingSync::HeatingPlantType::DistrictHeating
  #   solarThermal - BuildingSync::HeatingPlantType::SolarThermal
  #   otherCombination - BuildingSync::OtherCombinationType
  #   noHeating - BuildingSync::NoHeatingType
  #   unknown - BuildingSync::UnknownType
  #   heatingPlantCondition - BuildingSync::EquipmentCondition
  #   location - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   buildingAutomationSystem - SOAP::SOAPBoolean
  #   controlSystemTypes - BuildingSync::HeatingPlantType::ControlSystemTypes
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class HeatingPlantType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: Boiler
    # {http://buildingsync.net/schemas/bedes-auc/2019}Boiler
    #   boilerType - SOAP::SOAPString
    #   burnerType - SOAP::SOAPString
    #   burnerControlType - SOAP::SOAPString
    #   burnerQuantity - BuildingSync::BurnerQuantity
    #   burnerYearInstalled - SOAP::SOAPGYear
    #   burnerTurndownRatio - BuildingSync::BurnerTurndownRatio
    #   ignitionType - SOAP::SOAPString
    #   draftType - SOAP::SOAPString
    #   draftBoundary - SOAP::SOAPString
    #   condensingOperation - SOAP::SOAPString
    #   heatingStaging - SOAP::SOAPString
    #   inputCapacity - BuildingSync::InputCapacity
    #   outputCapacity - BuildingSync::OutputCapacity
    #   capacity - BuildingSync::HeatingPlantType::Boiler::Capacity
    #   capacityUnits - SOAP::SOAPString
    #   numberOfHeatingStages - BuildingSync::NumberOfHeatingStages
    #   heatingStageCapacityFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   priority - SOAP::SOAPString
    #   annualHeatingEfficiencyValue - BuildingSync::AnnualHeatingEfficiencyValue
    #   annualHeatingEfficiencyUnits - SOAP::SOAPString
    #   combustionEfficiency - BuildingSync::CombustionEfficiency
    #   thermalEfficiency - BuildingSync::ThermalEfficiency
    #   thirdPartyCertification - SOAP::SOAPString
    #   boilerInsulationRValue - BuildingSync::HeatingPlantType::Boiler::BoilerInsulationRValue
    #   boilerInsulationThickness - BuildingSync::HeatingPlantType::Boiler::BoilerInsulationThickness
    #   hotWaterBoilerMinimumFlowRate - BuildingSync::HeatingPlantType::Boiler::HotWaterBoilerMinimumFlowRate
    #   hotWaterBoilerMaximumFlowRate - BuildingSync::HotWaterBoilerMaximumFlowRate
    #   boilerEWT - BuildingSync::HeatingPlantType::Boiler::BoilerEWT
    #   boilerLWT - BuildingSync::BoilerLWT
    #   hotWaterResetControl - SOAP::SOAPString
    #   steamBoilerMinimumOperatingPressure - BuildingSync::SteamBoilerMinimumOperatingPressure
    #   steamBoilerMaximumOperatingPressure - BuildingSync::SteamBoilerMaximumOperatingPressure
    #   boilerPercentCondensateReturn - BuildingSync::HeatingPlantType::Boiler::BoilerPercentCondensateReturn
    #   userDefinedFields - BuildingSync::UserDefinedFields
    #   quantity - BuildingSync::Quantity
    class Boiler

      # inner class for member: Capacity
      # {http://buildingsync.net/schemas/bedes-auc/2019}Capacity
      #   xmlattr_Source - SOAP::SOAPString
      class Capacity < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: BoilerInsulationRValue
      # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerInsulationRValue
      #   xmlattr_Source - SOAP::SOAPString
      class BoilerInsulationRValue < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: BoilerInsulationThickness
      # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerInsulationThickness
      #   xmlattr_Source - SOAP::SOAPString
      class BoilerInsulationThickness < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: HotWaterBoilerMinimumFlowRate
      # {http://buildingsync.net/schemas/bedes-auc/2019}HotWaterBoilerMinimumFlowRate
      #   xmlattr_Source - SOAP::SOAPString
      class HotWaterBoilerMinimumFlowRate < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: BoilerEWT
      # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerEWT
      #   xmlattr_Source - SOAP::SOAPString
      class BoilerEWT < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: BoilerPercentCondensateReturn
      # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerPercentCondensateReturn
      #   xmlattr_Source - SOAP::SOAPString
      class BoilerPercentCondensateReturn < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :boilerType
      attr_accessor :burnerType
      attr_accessor :burnerControlType
      attr_accessor :burnerQuantity
      attr_accessor :burnerYearInstalled
      attr_accessor :burnerTurndownRatio
      attr_accessor :ignitionType
      attr_accessor :draftType
      attr_accessor :draftBoundary
      attr_accessor :condensingOperation
      attr_accessor :heatingStaging
      attr_accessor :inputCapacity
      attr_accessor :outputCapacity
      attr_accessor :capacity
      attr_accessor :capacityUnits
      attr_accessor :numberOfHeatingStages
      attr_accessor :heatingStageCapacityFraction
      attr_accessor :priority
      attr_accessor :annualHeatingEfficiencyValue
      attr_accessor :annualHeatingEfficiencyUnits
      attr_accessor :combustionEfficiency
      attr_accessor :thermalEfficiency
      attr_accessor :thirdPartyCertification
      attr_accessor :boilerInsulationRValue
      attr_accessor :boilerInsulationThickness
      attr_accessor :hotWaterBoilerMinimumFlowRate
      attr_accessor :hotWaterBoilerMaximumFlowRate
      attr_accessor :boilerEWT
      attr_accessor :boilerLWT
      attr_accessor :hotWaterResetControl
      attr_accessor :steamBoilerMinimumOperatingPressure
      attr_accessor :steamBoilerMaximumOperatingPressure
      attr_accessor :boilerPercentCondensateReturn
      attr_accessor :userDefinedFields
      attr_accessor :quantity

      def initialize(boilerType = nil, burnerType = nil, burnerControlType = nil, burnerQuantity = nil, burnerYearInstalled = nil, burnerTurndownRatio = nil, ignitionType = nil, draftType = nil, draftBoundary = nil, condensingOperation = nil, heatingStaging = nil, inputCapacity = nil, outputCapacity = nil, capacity = nil, capacityUnits = nil, numberOfHeatingStages = nil, heatingStageCapacityFraction = nil, priority = nil, annualHeatingEfficiencyValue = nil, annualHeatingEfficiencyUnits = nil, combustionEfficiency = nil, thermalEfficiency = nil, thirdPartyCertification = nil, boilerInsulationRValue = nil, boilerInsulationThickness = nil, hotWaterBoilerMinimumFlowRate = nil, hotWaterBoilerMaximumFlowRate = nil, boilerEWT = nil, boilerLWT = nil, hotWaterResetControl = nil, steamBoilerMinimumOperatingPressure = nil, steamBoilerMaximumOperatingPressure = nil, boilerPercentCondensateReturn = nil, userDefinedFields = nil, quantity = nil)
        @boilerType = boilerType
        @burnerType = burnerType
        @burnerControlType = burnerControlType
        @burnerQuantity = burnerQuantity
        @burnerYearInstalled = burnerYearInstalled
        @burnerTurndownRatio = burnerTurndownRatio
        @ignitionType = ignitionType
        @draftType = draftType
        @draftBoundary = draftBoundary
        @condensingOperation = condensingOperation
        @heatingStaging = heatingStaging
        @inputCapacity = inputCapacity
        @outputCapacity = outputCapacity
        @capacity = capacity
        @capacityUnits = capacityUnits
        @numberOfHeatingStages = numberOfHeatingStages
        @heatingStageCapacityFraction = heatingStageCapacityFraction
        @priority = priority
        @annualHeatingEfficiencyValue = annualHeatingEfficiencyValue
        @annualHeatingEfficiencyUnits = annualHeatingEfficiencyUnits
        @combustionEfficiency = combustionEfficiency
        @thermalEfficiency = thermalEfficiency
        @thirdPartyCertification = thirdPartyCertification
        @boilerInsulationRValue = boilerInsulationRValue
        @boilerInsulationThickness = boilerInsulationThickness
        @hotWaterBoilerMinimumFlowRate = hotWaterBoilerMinimumFlowRate
        @hotWaterBoilerMaximumFlowRate = hotWaterBoilerMaximumFlowRate
        @boilerEWT = boilerEWT
        @boilerLWT = boilerLWT
        @hotWaterResetControl = hotWaterResetControl
        @steamBoilerMinimumOperatingPressure = steamBoilerMinimumOperatingPressure
        @steamBoilerMaximumOperatingPressure = steamBoilerMaximumOperatingPressure
        @boilerPercentCondensateReturn = boilerPercentCondensateReturn
        @userDefinedFields = userDefinedFields
        @quantity = quantity
      end
    end

    # inner class for member: DistrictHeating
    # {http://buildingsync.net/schemas/bedes-auc/2019}DistrictHeating
    #   districtHeatingType - SOAP::SOAPString
    #   outputCapacity - BuildingSync::OutputCapacity
    #   capacity - BuildingSync::HeatingPlantType::DistrictHeating::Capacity
    #   capacityUnits - SOAP::SOAPString
    #   annualHeatingEfficiencyValue - BuildingSync::AnnualHeatingEfficiencyValue
    #   annualHeatingEfficiencyUnits - SOAP::SOAPString
    #   hotWaterBoilerMaximumFlowRate - BuildingSync::HotWaterBoilerMaximumFlowRate
    #   boilerLWT - BuildingSync::BoilerLWT
    #   steamBoilerMinimumOperatingPressure - BuildingSync::SteamBoilerMinimumOperatingPressure
    #   steamBoilerMaximumOperatingPressure - BuildingSync::SteamBoilerMaximumOperatingPressure
    #   quantity - BuildingSync::Quantity
    class DistrictHeating

      # inner class for member: Capacity
      # {http://buildingsync.net/schemas/bedes-auc/2019}Capacity
      #   xmlattr_Source - SOAP::SOAPString
      class Capacity < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :districtHeatingType
      attr_accessor :outputCapacity
      attr_accessor :capacity
      attr_accessor :capacityUnits
      attr_accessor :annualHeatingEfficiencyValue
      attr_accessor :annualHeatingEfficiencyUnits
      attr_accessor :hotWaterBoilerMaximumFlowRate
      attr_accessor :boilerLWT
      attr_accessor :steamBoilerMinimumOperatingPressure
      attr_accessor :steamBoilerMaximumOperatingPressure
      attr_accessor :quantity

      def initialize(districtHeatingType = nil, outputCapacity = nil, capacity = nil, capacityUnits = nil, annualHeatingEfficiencyValue = nil, annualHeatingEfficiencyUnits = nil, hotWaterBoilerMaximumFlowRate = nil, boilerLWT = nil, steamBoilerMinimumOperatingPressure = nil, steamBoilerMaximumOperatingPressure = nil, quantity = nil)
        @districtHeatingType = districtHeatingType
        @outputCapacity = outputCapacity
        @capacity = capacity
        @capacityUnits = capacityUnits
        @annualHeatingEfficiencyValue = annualHeatingEfficiencyValue
        @annualHeatingEfficiencyUnits = annualHeatingEfficiencyUnits
        @hotWaterBoilerMaximumFlowRate = hotWaterBoilerMaximumFlowRate
        @boilerLWT = boilerLWT
        @steamBoilerMinimumOperatingPressure = steamBoilerMinimumOperatingPressure
        @steamBoilerMaximumOperatingPressure = steamBoilerMaximumOperatingPressure
        @quantity = quantity
      end
    end

    # inner class for member: SolarThermal
    # {http://buildingsync.net/schemas/bedes-auc/2019}SolarThermal
    #   outputCapacity - BuildingSync::OutputCapacity
    #   capacity - BuildingSync::HeatingPlantType::SolarThermal::Capacity
    #   capacityUnits - SOAP::SOAPString
    #   annualHeatingEfficiencyValue - BuildingSync::AnnualHeatingEfficiencyValue
    #   annualHeatingEfficiencyUnits - SOAP::SOAPString
    #   quantity - BuildingSync::Quantity
    class SolarThermal

      # inner class for member: Capacity
      # {http://buildingsync.net/schemas/bedes-auc/2019}Capacity
      #   xmlattr_Source - SOAP::SOAPString
      class Capacity < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :outputCapacity
      attr_accessor :capacity
      attr_accessor :capacityUnits
      attr_accessor :annualHeatingEfficiencyValue
      attr_accessor :annualHeatingEfficiencyUnits
      attr_accessor :quantity

      def initialize(outputCapacity = nil, capacity = nil, capacityUnits = nil, annualHeatingEfficiencyValue = nil, annualHeatingEfficiencyUnits = nil, quantity = nil)
        @outputCapacity = outputCapacity
        @capacity = capacity
        @capacityUnits = capacityUnits
        @annualHeatingEfficiencyValue = annualHeatingEfficiencyValue
        @annualHeatingEfficiencyUnits = annualHeatingEfficiencyUnits
        @quantity = quantity
      end
    end

    # inner class for member: ControlSystemTypes
    # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSystemTypes
    class ControlSystemTypes < ::Array
    end

    attr_accessor :boiler
    attr_accessor :districtHeating
    attr_accessor :solarThermal
    attr_accessor :otherCombination
    attr_accessor :noHeating
    attr_accessor :unknown
    attr_accessor :heatingPlantCondition
    attr_accessor :location
    attr_accessor :yearInstalled
    attr_accessor :primaryFuel
    attr_accessor :buildingAutomationSystem
    attr_accessor :controlSystemTypes
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(boiler = nil, districtHeating = nil, solarThermal = nil, otherCombination = nil, noHeating = nil, unknown = nil, heatingPlantCondition = nil, location = nil, yearInstalled = nil, primaryFuel = nil, buildingAutomationSystem = nil, controlSystemTypes = nil, userDefinedFields = nil)
      @boiler = boiler
      @districtHeating = districtHeating
      @solarThermal = solarThermal
      @otherCombination = otherCombination
      @noHeating = noHeating
      @unknown = unknown
      @heatingPlantCondition = heatingPlantCondition
      @location = location
      @yearInstalled = yearInstalled
      @primaryFuel = primaryFuel
      @buildingAutomationSystem = buildingAutomationSystem
      @controlSystemTypes = controlSystemTypes
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingPlantType
  #   chiller - BuildingSync::CoolingPlantType::Chiller
  #   districtChilledWater - BuildingSync::CoolingPlantType::DistrictChilledWater
  #   otherCombination - BuildingSync::OtherCombinationType
  #   noCooling - BuildingSync::NoCoolingType
  #   unknown - BuildingSync::UnknownType
  #   coolingPlantCondition - BuildingSync::EquipmentCondition
  #   location - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   buildingAutomationSystem - SOAP::SOAPBoolean
  #   controlSystemTypes - BuildingSync::CoolingPlantType::ControlSystemTypes
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class CoolingPlantType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: Chiller
    # {http://buildingsync.net/schemas/bedes-auc/2019}Chiller
    #   chillerType - SOAP::SOAPString
    #   chillerCompressorDriver - SOAP::SOAPString
    #   chillerCompressorType - SOAP::SOAPString
    #   compressorStaging - SOAP::SOAPString
    #   numberOfDiscreteCoolingStages - BuildingSync::NumberOfDiscreteCoolingStages
    #   coolingStageCapacity - BuildingSync::CoolingStageCapacity
    #   condenserPlantIDs - BuildingSync::CondenserPlantIDs
    #   refrigerant - SOAP::SOAPString
    #   refrigerantChargeFactor - BuildingSync::RefrigerantChargeFactor
    #   absorptionHeatSource - SOAP::SOAPString
    #   absorptionStages - SOAP::SOAPString
    #   annualCoolingEfficiencyValue - BuildingSync::AnnualCoolingEfficiencyValue
    #   annualCoolingEfficiencyUnits - SOAP::SOAPString
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    #   minimumPartLoadRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   ratedCoolingSensibleHeatRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   partLoadRatioBelowWhichHotGasBypassOperates - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   thirdPartyCertification - SOAP::SOAPString
    #   chilledWaterResetControl - SOAP::SOAPString
    #   chilledWaterSupplyTemperature - BuildingSync::ChilledWaterSupplyTemperature
    #   activeDehumidification - SOAP::SOAPBoolean
    #   quantity - BuildingSync::Quantity
    class Chiller
      attr_accessor :chillerType
      attr_accessor :chillerCompressorDriver
      attr_accessor :chillerCompressorType
      attr_accessor :compressorStaging
      attr_accessor :numberOfDiscreteCoolingStages
      attr_accessor :coolingStageCapacity
      attr_accessor :condenserPlantIDs
      attr_accessor :refrigerant
      attr_accessor :refrigerantChargeFactor
      attr_accessor :absorptionHeatSource
      attr_accessor :absorptionStages
      attr_accessor :annualCoolingEfficiencyValue
      attr_accessor :annualCoolingEfficiencyUnits
      attr_accessor :capacity
      attr_accessor :capacityUnits
      attr_accessor :minimumPartLoadRatio
      attr_accessor :ratedCoolingSensibleHeatRatio
      attr_accessor :partLoadRatioBelowWhichHotGasBypassOperates
      attr_accessor :thirdPartyCertification
      attr_accessor :chilledWaterResetControl
      attr_accessor :chilledWaterSupplyTemperature
      attr_accessor :activeDehumidification
      attr_accessor :quantity

      def initialize(chillerType = nil, chillerCompressorDriver = nil, chillerCompressorType = nil, compressorStaging = nil, numberOfDiscreteCoolingStages = nil, coolingStageCapacity = nil, condenserPlantIDs = nil, refrigerant = nil, refrigerantChargeFactor = nil, absorptionHeatSource = nil, absorptionStages = nil, annualCoolingEfficiencyValue = nil, annualCoolingEfficiencyUnits = nil, capacity = nil, capacityUnits = nil, minimumPartLoadRatio = nil, ratedCoolingSensibleHeatRatio = nil, partLoadRatioBelowWhichHotGasBypassOperates = nil, thirdPartyCertification = nil, chilledWaterResetControl = nil, chilledWaterSupplyTemperature = nil, activeDehumidification = nil, quantity = nil)
        @chillerType = chillerType
        @chillerCompressorDriver = chillerCompressorDriver
        @chillerCompressorType = chillerCompressorType
        @compressorStaging = compressorStaging
        @numberOfDiscreteCoolingStages = numberOfDiscreteCoolingStages
        @coolingStageCapacity = coolingStageCapacity
        @condenserPlantIDs = condenserPlantIDs
        @refrigerant = refrigerant
        @refrigerantChargeFactor = refrigerantChargeFactor
        @absorptionHeatSource = absorptionHeatSource
        @absorptionStages = absorptionStages
        @annualCoolingEfficiencyValue = annualCoolingEfficiencyValue
        @annualCoolingEfficiencyUnits = annualCoolingEfficiencyUnits
        @capacity = capacity
        @capacityUnits = capacityUnits
        @minimumPartLoadRatio = minimumPartLoadRatio
        @ratedCoolingSensibleHeatRatio = ratedCoolingSensibleHeatRatio
        @partLoadRatioBelowWhichHotGasBypassOperates = partLoadRatioBelowWhichHotGasBypassOperates
        @thirdPartyCertification = thirdPartyCertification
        @chilledWaterResetControl = chilledWaterResetControl
        @chilledWaterSupplyTemperature = chilledWaterSupplyTemperature
        @activeDehumidification = activeDehumidification
        @quantity = quantity
      end
    end

    # inner class for member: DistrictChilledWater
    # {http://buildingsync.net/schemas/bedes-auc/2019}DistrictChilledWater
    #   annualCoolingEfficiencyValue - BuildingSync::AnnualCoolingEfficiencyValue
    #   annualCoolingEfficiencyUnits - SOAP::SOAPString
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    #   ratedCoolingSensibleHeatRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   chilledWaterSupplyTemperature - BuildingSync::ChilledWaterSupplyTemperature
    #   activeDehumidification - SOAP::SOAPBoolean
    class DistrictChilledWater
      attr_accessor :annualCoolingEfficiencyValue
      attr_accessor :annualCoolingEfficiencyUnits
      attr_accessor :capacity
      attr_accessor :capacityUnits
      attr_accessor :ratedCoolingSensibleHeatRatio
      attr_accessor :chilledWaterSupplyTemperature
      attr_accessor :activeDehumidification

      def initialize(annualCoolingEfficiencyValue = nil, annualCoolingEfficiencyUnits = nil, capacity = nil, capacityUnits = nil, ratedCoolingSensibleHeatRatio = nil, chilledWaterSupplyTemperature = nil, activeDehumidification = nil)
        @annualCoolingEfficiencyValue = annualCoolingEfficiencyValue
        @annualCoolingEfficiencyUnits = annualCoolingEfficiencyUnits
        @capacity = capacity
        @capacityUnits = capacityUnits
        @ratedCoolingSensibleHeatRatio = ratedCoolingSensibleHeatRatio
        @chilledWaterSupplyTemperature = chilledWaterSupplyTemperature
        @activeDehumidification = activeDehumidification
      end
    end

    # inner class for member: ControlSystemTypes
    # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSystemTypes
    class ControlSystemTypes < ::Array
    end

    attr_accessor :chiller
    attr_accessor :districtChilledWater
    attr_accessor :otherCombination
    attr_accessor :noCooling
    attr_accessor :unknown
    attr_accessor :coolingPlantCondition
    attr_accessor :location
    attr_accessor :yearInstalled
    attr_accessor :primaryFuel
    attr_accessor :buildingAutomationSystem
    attr_accessor :controlSystemTypes
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(chiller = nil, districtChilledWater = nil, otherCombination = nil, noCooling = nil, unknown = nil, coolingPlantCondition = nil, location = nil, yearInstalled = nil, primaryFuel = nil, buildingAutomationSystem = nil, controlSystemTypes = nil, userDefinedFields = nil)
      @chiller = chiller
      @districtChilledWater = districtChilledWater
      @otherCombination = otherCombination
      @noCooling = noCooling
      @unknown = unknown
      @coolingPlantCondition = coolingPlantCondition
      @location = location
      @yearInstalled = yearInstalled
      @primaryFuel = primaryFuel
      @buildingAutomationSystem = buildingAutomationSystem
      @controlSystemTypes = controlSystemTypes
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CondenserPlantType
  #   airCooled - BuildingSync::CondenserPlantType::AirCooled
  #   waterCooled - BuildingSync::CondenserPlantType::WaterCooled
  #   groundSource - BuildingSync::CondenserPlantType::GroundSource
  #   glycolCooledDryCooler - BuildingSync::CondenserPlantType::GlycolCooledDryCooler
  #   other - BuildingSync::OtherType
  #   unknown - BuildingSync::UnknownType
  #   condenserPlantCondition - BuildingSync::EquipmentCondition
  #   location - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   buildingAutomationSystem - SOAP::SOAPBoolean
  #   controlSystemTypes - BuildingSync::CondenserPlantType::ControlSystemTypes
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class CondenserPlantType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: AirCooled
    # {http://buildingsync.net/schemas/bedes-auc/2019}AirCooled
    #   evaporativelyCooledCondenser - BuildingSync::CondenserPlantType::AirCooled::EvaporativelyCooledCondenser
    #   condenserFanSpeedOperation - SOAP::SOAPString
    #   condensingTemperature - BuildingSync::CondensingTemperature
    #   splitCondenser - SOAP::SOAPBoolean
    #   designAmbientTemperature - BuildingSync::CondenserPlantType::AirCooled::DesignAmbientTemperature
    #   designTemperatureDifference - BuildingSync::CondenserPlantType::AirCooled::DesignTemperatureDifference
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    class AirCooled

      # inner class for member: EvaporativelyCooledCondenser
      # {http://buildingsync.net/schemas/bedes-auc/2019}EvaporativelyCooledCondenser
      #   evaporativelyCooledCondenserMinimumTemperature - BuildingSync::CondenserPlantType::AirCooled::EvaporativelyCooledCondenser::EvaporativelyCooledCondenserMinimumTemperature
      #   evaporativelyCooledCondenserMaximumTemperature - BuildingSync::CondenserPlantType::AirCooled::EvaporativelyCooledCondenser::EvaporativelyCooledCondenserMaximumTemperature
      #   xmlattr_ID - SOAP::SOAPID
      class EvaporativelyCooledCondenser
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: EvaporativelyCooledCondenserMinimumTemperature
        # {http://buildingsync.net/schemas/bedes-auc/2019}EvaporativelyCooledCondenserMinimumTemperature
        #   xmlattr_Source - SOAP::SOAPString
        class EvaporativelyCooledCondenserMinimumTemperature < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: EvaporativelyCooledCondenserMaximumTemperature
        # {http://buildingsync.net/schemas/bedes-auc/2019}EvaporativelyCooledCondenserMaximumTemperature
        #   xmlattr_Source - SOAP::SOAPString
        class EvaporativelyCooledCondenserMaximumTemperature < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :evaporativelyCooledCondenserMinimumTemperature
        attr_accessor :evaporativelyCooledCondenserMaximumTemperature

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(evaporativelyCooledCondenserMinimumTemperature = nil, evaporativelyCooledCondenserMaximumTemperature = nil)
          @evaporativelyCooledCondenserMinimumTemperature = evaporativelyCooledCondenserMinimumTemperature
          @evaporativelyCooledCondenserMaximumTemperature = evaporativelyCooledCondenserMaximumTemperature
          @__xmlattr = {}
        end
      end

      # inner class for member: DesignAmbientTemperature
      # {http://buildingsync.net/schemas/bedes-auc/2019}DesignAmbientTemperature
      #   xmlattr_Source - SOAP::SOAPString
      class DesignAmbientTemperature < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: DesignTemperatureDifference
      # {http://buildingsync.net/schemas/bedes-auc/2019}DesignTemperatureDifference
      #   xmlattr_Source - SOAP::SOAPString
      class DesignTemperatureDifference < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :evaporativelyCooledCondenser
      attr_accessor :condenserFanSpeedOperation
      attr_accessor :condensingTemperature
      attr_accessor :splitCondenser
      attr_accessor :designAmbientTemperature
      attr_accessor :designTemperatureDifference
      attr_accessor :capacity
      attr_accessor :capacityUnits

      def initialize(evaporativelyCooledCondenser = nil, condenserFanSpeedOperation = nil, condensingTemperature = nil, splitCondenser = nil, designAmbientTemperature = nil, designTemperatureDifference = nil, capacity = nil, capacityUnits = nil)
        @evaporativelyCooledCondenser = evaporativelyCooledCondenser
        @condenserFanSpeedOperation = condenserFanSpeedOperation
        @condensingTemperature = condensingTemperature
        @splitCondenser = splitCondenser
        @designAmbientTemperature = designAmbientTemperature
        @designTemperatureDifference = designTemperatureDifference
        @capacity = capacity
        @capacityUnits = capacityUnits
      end
    end

    # inner class for member: WaterCooled
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterCooled
    #   waterCooledCondenserType - SOAP::SOAPString
    #   condenserWaterTemperature - BuildingSync::CondenserWaterTemperature
    #   condensingTemperature - BuildingSync::CondensingTemperature
    #   waterCooledCondenserFlowControl - SOAP::SOAPString
    #   waterSideEconomizer - BuildingSync::CondenserPlantType::WaterCooled::WaterSideEconomizer
    #   coolingTowerFanControl - SOAP::SOAPString
    #   coolingTowerTemperatureControl - SOAP::SOAPString
    #   coolingTowerCellControl - SOAP::SOAPString
    #   cellCount - BuildingSync::CondenserPlantType::WaterCooled::CellCount
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    class WaterCooled

      # inner class for member: WaterSideEconomizer
      # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizer
      #   waterSideEconomizerType - SOAP::SOAPString
      #   waterSideEconomizerTemperatureMaximum - BuildingSync::WaterSideEconomizerTemperatureMaximum
      #   waterSideEconomizerDBTemperatureMaximum - BuildingSync::WaterSideEconomizerDBTemperatureMaximum
      #   xmlattr_ID - SOAP::SOAPID
      class WaterSideEconomizer
        AttrID = XSD::QName.new(nil, "ID")

        attr_accessor :waterSideEconomizerType
        attr_accessor :waterSideEconomizerTemperatureMaximum
        attr_accessor :waterSideEconomizerDBTemperatureMaximum

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(waterSideEconomizerType = nil, waterSideEconomizerTemperatureMaximum = nil, waterSideEconomizerDBTemperatureMaximum = nil)
          @waterSideEconomizerType = waterSideEconomizerType
          @waterSideEconomizerTemperatureMaximum = waterSideEconomizerTemperatureMaximum
          @waterSideEconomizerDBTemperatureMaximum = waterSideEconomizerDBTemperatureMaximum
          @__xmlattr = {}
        end
      end

      # inner class for member: CellCount
      # {http://buildingsync.net/schemas/bedes-auc/2019}CellCount
      #   xmlattr_Source - SOAP::SOAPString
      class CellCount < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :waterCooledCondenserType
      attr_accessor :condenserWaterTemperature
      attr_accessor :condensingTemperature
      attr_accessor :waterCooledCondenserFlowControl
      attr_accessor :waterSideEconomizer
      attr_accessor :coolingTowerFanControl
      attr_accessor :coolingTowerTemperatureControl
      attr_accessor :coolingTowerCellControl
      attr_accessor :cellCount
      attr_accessor :capacity
      attr_accessor :capacityUnits

      def initialize(waterCooledCondenserType = nil, condenserWaterTemperature = nil, condensingTemperature = nil, waterCooledCondenserFlowControl = nil, waterSideEconomizer = nil, coolingTowerFanControl = nil, coolingTowerTemperatureControl = nil, coolingTowerCellControl = nil, cellCount = nil, capacity = nil, capacityUnits = nil)
        @waterCooledCondenserType = waterCooledCondenserType
        @condenserWaterTemperature = condenserWaterTemperature
        @condensingTemperature = condensingTemperature
        @waterCooledCondenserFlowControl = waterCooledCondenserFlowControl
        @waterSideEconomizer = waterSideEconomizer
        @coolingTowerFanControl = coolingTowerFanControl
        @coolingTowerTemperatureControl = coolingTowerTemperatureControl
        @coolingTowerCellControl = coolingTowerCellControl
        @cellCount = cellCount
        @capacity = capacity
        @capacityUnits = capacityUnits
      end
    end

    # inner class for member: GroundSource
    # {http://buildingsync.net/schemas/bedes-auc/2019}GroundSource
    #   groundSourceType - SOAP::SOAPString
    #   condenserWaterTemperature - BuildingSync::CondenserWaterTemperature
    #   condensingTemperature - BuildingSync::CondensingTemperature
    #   waterCooledCondenserFlowControl - SOAP::SOAPString
    #   waterSideEconomizer - BuildingSync::CondenserPlantType::GroundSource::WaterSideEconomizer
    #   wellCount - BuildingSync::CondenserPlantType::GroundSource::WellCount
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    class GroundSource

      # inner class for member: WaterSideEconomizer
      # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizer
      #   waterSideEconomizerType - SOAP::SOAPString
      #   waterSideEconomizerTemperatureSetpoint - BuildingSync::CondenserPlantType::GroundSource::WaterSideEconomizer::WaterSideEconomizerTemperatureSetpoint
      #   waterSideEconomizerTemperatureMaximum - BuildingSync::WaterSideEconomizerTemperatureMaximum
      #   waterSideEconomizerDBTemperatureMaximum - BuildingSync::WaterSideEconomizerDBTemperatureMaximum
      #   xmlattr_ID - SOAP::SOAPID
      class WaterSideEconomizer
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: WaterSideEconomizerTemperatureSetpoint
        # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizerTemperatureSetpoint
        #   xmlattr_Source - SOAP::SOAPString
        class WaterSideEconomizerTemperatureSetpoint < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :waterSideEconomizerType
        attr_accessor :waterSideEconomizerTemperatureSetpoint
        attr_accessor :waterSideEconomizerTemperatureMaximum
        attr_accessor :waterSideEconomizerDBTemperatureMaximum

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(waterSideEconomizerType = nil, waterSideEconomizerTemperatureSetpoint = nil, waterSideEconomizerTemperatureMaximum = nil, waterSideEconomizerDBTemperatureMaximum = nil)
          @waterSideEconomizerType = waterSideEconomizerType
          @waterSideEconomizerTemperatureSetpoint = waterSideEconomizerTemperatureSetpoint
          @waterSideEconomizerTemperatureMaximum = waterSideEconomizerTemperatureMaximum
          @waterSideEconomizerDBTemperatureMaximum = waterSideEconomizerDBTemperatureMaximum
          @__xmlattr = {}
        end
      end

      # inner class for member: WellCount
      # {http://buildingsync.net/schemas/bedes-auc/2019}WellCount
      #   xmlattr_Source - SOAP::SOAPString
      class WellCount < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :groundSourceType
      attr_accessor :condenserWaterTemperature
      attr_accessor :condensingTemperature
      attr_accessor :waterCooledCondenserFlowControl
      attr_accessor :waterSideEconomizer
      attr_accessor :wellCount
      attr_accessor :capacity
      attr_accessor :capacityUnits

      def initialize(groundSourceType = nil, condenserWaterTemperature = nil, condensingTemperature = nil, waterCooledCondenserFlowControl = nil, waterSideEconomizer = nil, wellCount = nil, capacity = nil, capacityUnits = nil)
        @groundSourceType = groundSourceType
        @condenserWaterTemperature = condenserWaterTemperature
        @condensingTemperature = condensingTemperature
        @waterCooledCondenserFlowControl = waterCooledCondenserFlowControl
        @waterSideEconomizer = waterSideEconomizer
        @wellCount = wellCount
        @capacity = capacity
        @capacityUnits = capacityUnits
      end
    end

    # inner class for member: GlycolCooledDryCooler
    # {http://buildingsync.net/schemas/bedes-auc/2019}GlycolCooledDryCooler
    #   condensingTemperature - BuildingSync::CondensingTemperature
    #   capacity - BuildingSync::Capacity
    #   capacityUnits - SOAP::SOAPString
    class GlycolCooledDryCooler
      attr_accessor :condensingTemperature
      attr_accessor :capacity
      attr_accessor :capacityUnits

      def initialize(condensingTemperature = nil, capacity = nil, capacityUnits = nil)
        @condensingTemperature = condensingTemperature
        @capacity = capacity
        @capacityUnits = capacityUnits
      end
    end

    # inner class for member: ControlSystemTypes
    # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSystemTypes
    class ControlSystemTypes < ::Array
    end

    attr_accessor :airCooled
    attr_accessor :waterCooled
    attr_accessor :groundSource
    attr_accessor :glycolCooledDryCooler
    attr_accessor :other
    attr_accessor :unknown
    attr_accessor :condenserPlantCondition
    attr_accessor :location
    attr_accessor :yearInstalled
    attr_accessor :primaryFuel
    attr_accessor :buildingAutomationSystem
    attr_accessor :controlSystemTypes
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(airCooled = nil, waterCooled = nil, groundSource = nil, glycolCooledDryCooler = nil, other = nil, unknown = nil, condenserPlantCondition = nil, location = nil, yearInstalled = nil, primaryFuel = nil, buildingAutomationSystem = nil, controlSystemTypes = nil, userDefinedFields = nil)
      @airCooled = airCooled
      @waterCooled = waterCooled
      @groundSource = groundSource
      @glycolCooledDryCooler = glycolCooledDryCooler
      @other = other
      @unknown = unknown
      @condenserPlantCondition = condenserPlantCondition
      @location = location
      @yearInstalled = yearInstalled
      @primaryFuel = primaryFuel
      @buildingAutomationSystem = buildingAutomationSystem
      @controlSystemTypes = controlSystemTypes
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OtherHVACSystemType
  #   otherHVACType - BuildingSync::OtherHVACSystemType::OtherHVACType
  #   location - SOAP::SOAPString
  #   primaryFuel - BuildingSync::FuelTypes
  #   otherHVACSystemCondition - BuildingSync::EquipmentCondition
  #   controls - BuildingSync::OtherHVACSystemType::Controls
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   yearOfManufacture - SOAP::SOAPGYear
  #   yearInstalled - SOAP::SOAPGYear
  #   linkedPremises - BuildingSync::LinkedPremises
  #   integration - SOAP::SOAPString
  #   linkedDeliveryIDs - BuildingSync::OtherHVACSystemType::LinkedDeliveryIDs
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class OtherHVACSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: OtherHVACType
    # {http://buildingsync.net/schemas/bedes-auc/2019}OtherHVACType
    #   humidifier - BuildingSync::OtherHVACSystemType::OtherHVACType::Humidifier
    #   dehumidifier - BuildingSync::OtherHVACSystemType::OtherHVACType::Dehumidifier
    #   airCleaner - BuildingSync::OtherHVACSystemType::OtherHVACType::AirCleaner
    #   mechanicalVentilation - BuildingSync::OtherHVACSystemType::OtherHVACType::MechanicalVentilation
    #   spotExhaust - BuildingSync::OtherHVACSystemType::OtherHVACType::SpotExhaust
    #   naturalVentilation - BuildingSync::OtherHVACSystemType::OtherHVACType::NaturalVentilation
    #   otherCombination - BuildingSync::OtherCombinationType
    #   unknown - BuildingSync::UnknownType
    class OtherHVACType

      # inner class for member: Humidifier
      # {http://buildingsync.net/schemas/bedes-auc/2019}Humidifier
      #   humidificationType - SOAP::SOAPString
      #   humidityControlMinimum - BuildingSync::OtherHVACSystemType::OtherHVACType::Humidifier::HumidityControlMinimum
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      #   systemPerformanceRatio - BuildingSync::SystemPerformanceRatio
      class Humidifier

        # inner class for member: HumidityControlMinimum
        # {http://buildingsync.net/schemas/bedes-auc/2019}HumidityControlMinimum
        #   xmlattr_Source - SOAP::SOAPString
        class HumidityControlMinimum < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :humidificationType
        attr_accessor :humidityControlMinimum
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle
        attr_accessor :systemPerformanceRatio

        def initialize(humidificationType = nil, humidityControlMinimum = nil, capacity = nil, capacityUnits = nil, dutyCycle = nil, systemPerformanceRatio = nil)
          @humidificationType = humidificationType
          @humidityControlMinimum = humidityControlMinimum
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
          @systemPerformanceRatio = systemPerformanceRatio
        end
      end

      # inner class for member: Dehumidifier
      # {http://buildingsync.net/schemas/bedes-auc/2019}Dehumidifier
      #   dehumidificationType - SOAP::SOAPString
      #   humidityControlMaximum - BuildingSync::OtherHVACSystemType::OtherHVACType::Dehumidifier::HumidityControlMaximum
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      #   systemPerformanceRatio - BuildingSync::SystemPerformanceRatio
      #   thirdPartyCertification - SOAP::SOAPString
      class Dehumidifier

        # inner class for member: HumidityControlMaximum
        # {http://buildingsync.net/schemas/bedes-auc/2019}HumidityControlMaximum
        #   xmlattr_Source - SOAP::SOAPString
        class HumidityControlMaximum < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :dehumidificationType
        attr_accessor :humidityControlMaximum
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle
        attr_accessor :systemPerformanceRatio
        attr_accessor :thirdPartyCertification

        def initialize(dehumidificationType = nil, humidityControlMaximum = nil, capacity = nil, capacityUnits = nil, dutyCycle = nil, systemPerformanceRatio = nil, thirdPartyCertification = nil)
          @dehumidificationType = dehumidificationType
          @humidityControlMaximum = humidityControlMaximum
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
          @systemPerformanceRatio = systemPerformanceRatio
          @thirdPartyCertification = thirdPartyCertification
        end
      end

      # inner class for member: AirCleaner
      # {http://buildingsync.net/schemas/bedes-auc/2019}AirCleaner
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      #   systemPerformanceRatio - BuildingSync::SystemPerformanceRatio
      class AirCleaner
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle
        attr_accessor :systemPerformanceRatio

        def initialize(capacity = nil, capacityUnits = nil, dutyCycle = nil, systemPerformanceRatio = nil)
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
          @systemPerformanceRatio = systemPerformanceRatio
        end
      end

      # inner class for member: MechanicalVentilation
      # {http://buildingsync.net/schemas/bedes-auc/2019}MechanicalVentilation
      #   ventilationRate - BuildingSync::VentilationRate
      #   requiredVentilationRate - BuildingSync::RequiredVentilationRate
      #   ventilationType - SOAP::SOAPString
      #   demandControlVentilation - SOAP::SOAPBoolean
      #   ventilationControlMethods - BuildingSync::VentilationControlMethods
      #   ventilationZoneControl - SOAP::SOAPString
      #   makeupAirSourceID - BuildingSync::MakeupAirSourceID
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      #   systemPerformanceRatio - BuildingSync::SystemPerformanceRatio
      #   thirdPartyCertification - SOAP::SOAPString
      class MechanicalVentilation
        attr_accessor :ventilationRate
        attr_accessor :requiredVentilationRate
        attr_accessor :ventilationType
        attr_accessor :demandControlVentilation
        attr_accessor :ventilationControlMethods
        attr_accessor :ventilationZoneControl
        attr_accessor :makeupAirSourceID
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle
        attr_accessor :systemPerformanceRatio
        attr_accessor :thirdPartyCertification

        def initialize(ventilationRate = nil, requiredVentilationRate = nil, ventilationType = nil, demandControlVentilation = nil, ventilationControlMethods = nil, ventilationZoneControl = nil, makeupAirSourceID = nil, capacity = nil, capacityUnits = nil, dutyCycle = nil, systemPerformanceRatio = nil, thirdPartyCertification = nil)
          @ventilationRate = ventilationRate
          @requiredVentilationRate = requiredVentilationRate
          @ventilationType = ventilationType
          @demandControlVentilation = demandControlVentilation
          @ventilationControlMethods = ventilationControlMethods
          @ventilationZoneControl = ventilationZoneControl
          @makeupAirSourceID = makeupAirSourceID
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
          @systemPerformanceRatio = systemPerformanceRatio
          @thirdPartyCertification = thirdPartyCertification
        end
      end

      # inner class for member: SpotExhaust
      # {http://buildingsync.net/schemas/bedes-auc/2019}SpotExhaust
      #   exhaustLocation - SOAP::SOAPString
      #   ventilationRate - BuildingSync::VentilationRate
      #   requiredVentilationRate - BuildingSync::RequiredVentilationRate
      #   ventilationControlMethods - BuildingSync::VentilationControlMethods
      #   makeupAirSourceID - BuildingSync::MakeupAirSourceID
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      #   systemPerformanceRatio - BuildingSync::SystemPerformanceRatio
      #   thirdPartyCertification - SOAP::SOAPString
      class SpotExhaust
        attr_accessor :exhaustLocation
        attr_accessor :ventilationRate
        attr_accessor :requiredVentilationRate
        attr_accessor :ventilationControlMethods
        attr_accessor :makeupAirSourceID
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle
        attr_accessor :systemPerformanceRatio
        attr_accessor :thirdPartyCertification

        def initialize(exhaustLocation = nil, ventilationRate = nil, requiredVentilationRate = nil, ventilationControlMethods = nil, makeupAirSourceID = nil, capacity = nil, capacityUnits = nil, dutyCycle = nil, systemPerformanceRatio = nil, thirdPartyCertification = nil)
          @exhaustLocation = exhaustLocation
          @ventilationRate = ventilationRate
          @requiredVentilationRate = requiredVentilationRate
          @ventilationControlMethods = ventilationControlMethods
          @makeupAirSourceID = makeupAirSourceID
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
          @systemPerformanceRatio = systemPerformanceRatio
          @thirdPartyCertification = thirdPartyCertification
        end
      end

      # inner class for member: NaturalVentilation
      # {http://buildingsync.net/schemas/bedes-auc/2019}NaturalVentilation
      #   naturalVentilationRate - BuildingSync::OtherHVACSystemType::OtherHVACType::NaturalVentilation::NaturalVentilationRate
      #   naturalVentilationMethod - SOAP::SOAPString
      #   ventilationControlMethods - BuildingSync::VentilationControlMethods
      #   capacity - BuildingSync::Capacity
      #   capacityUnits - SOAP::SOAPString
      #   dutyCycle - BuildingSync::DutyCycle
      class NaturalVentilation

        # inner class for member: NaturalVentilationRate
        # {http://buildingsync.net/schemas/bedes-auc/2019}NaturalVentilationRate
        #   xmlattr_Source - SOAP::SOAPString
        class NaturalVentilationRate < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :naturalVentilationRate
        attr_accessor :naturalVentilationMethod
        attr_accessor :ventilationControlMethods
        attr_accessor :capacity
        attr_accessor :capacityUnits
        attr_accessor :dutyCycle

        def initialize(naturalVentilationRate = nil, naturalVentilationMethod = nil, ventilationControlMethods = nil, capacity = nil, capacityUnits = nil, dutyCycle = nil)
          @naturalVentilationRate = naturalVentilationRate
          @naturalVentilationMethod = naturalVentilationMethod
          @ventilationControlMethods = ventilationControlMethods
          @capacity = capacity
          @capacityUnits = capacityUnits
          @dutyCycle = dutyCycle
        end
      end

      attr_accessor :humidifier
      attr_accessor :dehumidifier
      attr_accessor :airCleaner
      attr_accessor :mechanicalVentilation
      attr_accessor :spotExhaust
      attr_accessor :naturalVentilation
      attr_accessor :otherCombination
      attr_accessor :unknown

      def initialize(humidifier = nil, dehumidifier = nil, airCleaner = nil, mechanicalVentilation = nil, spotExhaust = nil, naturalVentilation = nil, otherCombination = nil, unknown = nil)
        @humidifier = humidifier
        @dehumidifier = dehumidifier
        @airCleaner = airCleaner
        @mechanicalVentilation = mechanicalVentilation
        @spotExhaust = spotExhaust
        @naturalVentilation = naturalVentilation
        @otherCombination = otherCombination
        @unknown = unknown
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    # inner class for member: LinkedDeliveryIDs
    # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedDeliveryIDs
    class LinkedDeliveryIDs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedDeliveryID
      #   xmlattr_IDref - SOAP::SOAPIDREF
      class LinkedDeliveryID
        AttrIDref = XSD::QName.new(nil, "IDref")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_IDref
          __xmlattr[AttrIDref]
        end

        def xmlattr_IDref=(value)
          __xmlattr[AttrIDref] = value
        end

        def initialize
          @__xmlattr = {}
        end
      end
    end

    attr_accessor :otherHVACType
    attr_accessor :location
    attr_accessor :primaryFuel
    attr_accessor :otherHVACSystemCondition
    attr_accessor :controls
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :yearOfManufacture
    attr_accessor :yearInstalled
    attr_accessor :linkedPremises
    attr_accessor :integration
    attr_accessor :linkedDeliveryIDs
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(otherHVACType = nil, location = nil, primaryFuel = nil, otherHVACSystemCondition = nil, controls = nil, manufacturer = nil, modelNumber = nil, yearOfManufacture = nil, yearInstalled = nil, linkedPremises = nil, integration = nil, linkedDeliveryIDs = nil, userDefinedFields = nil, quantity = nil)
      @otherHVACType = otherHVACType
      @location = location
      @primaryFuel = primaryFuel
      @otherHVACSystemCondition = otherHVACSystemCondition
      @controls = controls
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @yearOfManufacture = yearOfManufacture
      @yearInstalled = yearInstalled
      @linkedPremises = linkedPremises
      @integration = integration
      @linkedDeliveryIDs = linkedDeliveryIDs
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LightingSystemType
  #   lampType - BuildingSync::LightingSystemType::LampType
  #   ballastType - SOAP::SOAPString
  #   inputVoltage - SOAP::SOAPString
  #   installationType - SOAP::SOAPString
  #   lightingDirection - SOAP::SOAPString
  #   dimmingCapability - BuildingSync::LightingSystemType::DimmingCapability
  #   percentPremisesServed - BuildingSync::LightingSystemType::PercentPremisesServed
  #   installedPower - BuildingSync::LightingSystemType::InstalledPower
  #   lampPower - BuildingSync::LampPower
  #   numberOfLampsPerLuminaire - BuildingSync::LightingSystemType::NumberOfLampsPerLuminaire
  #   numberOfLampsPerBallast - BuildingSync::LightingSystemType::NumberOfLampsPerBallast
  #   numberOfBallastsPerLuminaire - BuildingSync::LightingSystemType::NumberOfBallastsPerLuminaire
  #   numberOfLuminaires - BuildingSync::LightingSystemType::NumberOfLuminaires
  #   outsideLighting - SOAP::SOAPBoolean
  #   reflectorType - SOAP::SOAPString
  #   lightingEfficacy - BuildingSync::LightingSystemType::LightingEfficacy
  #   workPlaneHeight - BuildingSync::LightingSystemType::WorkPlaneHeight
  #   luminaireHeight - BuildingSync::LightingSystemType::LuminaireHeight
  #   fixtureSpacing - BuildingSync::LightingSystemType::FixtureSpacing
  #   ratedLampLife - BuildingSync::LightingSystemType::RatedLampLife
  #   controls - BuildingSync::LightingSystemType::Controls
  #   lightingAutomationSystem - SOAP::SOAPBoolean
  #   thirdPartyCertification - SOAP::SOAPString
  #   primaryFuel - BuildingSync::FuelTypes
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class LightingSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: LampType
    # {http://buildingsync.net/schemas/bedes-auc/2019}LampType
    #   incandescent - BuildingSync::LightingSystemType::LampType::Incandescent
    #   linearFluorescent - BuildingSync::LightingSystemType::LampType::LinearFluorescent
    #   compactFluorescent - BuildingSync::LightingSystemType::LampType::CompactFluorescent
    #   halogen - BuildingSync::LightingSystemType::LampType::Halogen
    #   highIntensityDischarge - BuildingSync::LightingSystemType::LampType::HighIntensityDischarge
    #   solidStateLighting - BuildingSync::LightingSystemType::LampType::SolidStateLighting
    #   induction - BuildingSync::LightingSystemType::LampType::Induction
    #   neon - BuildingSync::NeonType
    #   plasma - BuildingSync::PlasmaType
    #   photoluminescent - BuildingSync::PhotoluminescentType
    #   selfLuminous - BuildingSync::SelfLuminousType
    #   otherCombination - BuildingSync::OtherCombinationType
    #   unknown - BuildingSync::UnknownType
    class LampType

      # inner class for member: Incandescent
      # {http://buildingsync.net/schemas/bedes-auc/2019}Incandescent
      #   lampLabel - SOAP::SOAPString
      class Incandescent
        attr_accessor :lampLabel

        def initialize(lampLabel = nil)
          @lampLabel = lampLabel
        end
      end

      # inner class for member: LinearFluorescent
      # {http://buildingsync.net/schemas/bedes-auc/2019}LinearFluorescent
      #   lampLabel - SOAP::SOAPString
      #   lampLength - SOAP::SOAPString
      class LinearFluorescent
        attr_accessor :lampLabel
        attr_accessor :lampLength

        def initialize(lampLabel = nil, lampLength = nil)
          @lampLabel = lampLabel
          @lampLength = lampLength
        end
      end

      # inner class for member: CompactFluorescent
      # {http://buildingsync.net/schemas/bedes-auc/2019}CompactFluorescent
      #   lampLabel - SOAP::SOAPString
      #   fluorescentStartType - SOAP::SOAPString
      class CompactFluorescent
        attr_accessor :lampLabel
        attr_accessor :fluorescentStartType

        def initialize(lampLabel = nil, fluorescentStartType = nil)
          @lampLabel = lampLabel
          @fluorescentStartType = fluorescentStartType
        end
      end

      # inner class for member: Halogen
      # {http://buildingsync.net/schemas/bedes-auc/2019}Halogen
      #   lampLabel - SOAP::SOAPString
      #   transformerNeeded - SOAP::SOAPBoolean
      class Halogen
        attr_accessor :lampLabel
        attr_accessor :transformerNeeded

        def initialize(lampLabel = nil, transformerNeeded = nil)
          @lampLabel = lampLabel
          @transformerNeeded = transformerNeeded
        end
      end

      # inner class for member: HighIntensityDischarge
      # {http://buildingsync.net/schemas/bedes-auc/2019}HighIntensityDischarge
      #   lampLabel - SOAP::SOAPString
      #   metalHalideStartType - SOAP::SOAPString
      class HighIntensityDischarge
        attr_accessor :lampLabel
        attr_accessor :metalHalideStartType

        def initialize(lampLabel = nil, metalHalideStartType = nil)
          @lampLabel = lampLabel
          @metalHalideStartType = metalHalideStartType
        end
      end

      # inner class for member: SolidStateLighting
      # {http://buildingsync.net/schemas/bedes-auc/2019}SolidStateLighting
      #   lampLabel - SOAP::SOAPString
      #   transformerNeeded - SOAP::SOAPBoolean
      class SolidStateLighting
        attr_accessor :lampLabel
        attr_accessor :transformerNeeded

        def initialize(lampLabel = nil, transformerNeeded = nil)
          @lampLabel = lampLabel
          @transformerNeeded = transformerNeeded
        end
      end

      # inner class for member: Induction
      # {http://buildingsync.net/schemas/bedes-auc/2019}Induction
      #   fluorescentStartType - SOAP::SOAPString
      class Induction
        attr_accessor :fluorescentStartType

        def initialize(fluorescentStartType = nil)
          @fluorescentStartType = fluorescentStartType
        end
      end

      attr_accessor :incandescent
      attr_accessor :linearFluorescent
      attr_accessor :compactFluorescent
      attr_accessor :halogen
      attr_accessor :highIntensityDischarge
      attr_accessor :solidStateLighting
      attr_accessor :induction
      attr_accessor :neon
      attr_accessor :plasma
      attr_accessor :photoluminescent
      attr_accessor :selfLuminous
      attr_accessor :otherCombination
      attr_accessor :unknown

      def initialize(incandescent = nil, linearFluorescent = nil, compactFluorescent = nil, halogen = nil, highIntensityDischarge = nil, solidStateLighting = nil, induction = nil, neon = nil, plasma = nil, photoluminescent = nil, selfLuminous = nil, otherCombination = nil, unknown = nil)
        @incandescent = incandescent
        @linearFluorescent = linearFluorescent
        @compactFluorescent = compactFluorescent
        @halogen = halogen
        @highIntensityDischarge = highIntensityDischarge
        @solidStateLighting = solidStateLighting
        @induction = induction
        @neon = neon
        @plasma = plasma
        @photoluminescent = photoluminescent
        @selfLuminous = selfLuminous
        @otherCombination = otherCombination
        @unknown = unknown
      end
    end

    # inner class for member: DimmingCapability
    # {http://buildingsync.net/schemas/bedes-auc/2019}DimmingCapability
    #   minimumDimmingLightFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    #   minimumDimmingPowerFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
    class DimmingCapability
      attr_accessor :minimumDimmingLightFraction
      attr_accessor :minimumDimmingPowerFraction

      def initialize(minimumDimmingLightFraction = nil, minimumDimmingPowerFraction = nil)
        @minimumDimmingLightFraction = minimumDimmingLightFraction
        @minimumDimmingPowerFraction = minimumDimmingPowerFraction
      end
    end

    # inner class for member: PercentPremisesServed
    # {http://buildingsync.net/schemas/bedes-auc/2019}PercentPremisesServed
    #   xmlattr_Source - SOAP::SOAPString
    class PercentPremisesServed < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: InstalledPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}InstalledPower
    #   xmlattr_Source - SOAP::SOAPString
    class InstalledPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfLampsPerLuminaire
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfLampsPerLuminaire
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfLampsPerLuminaire < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfLampsPerBallast
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfLampsPerBallast
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfLampsPerBallast < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfBallastsPerLuminaire
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfBallastsPerLuminaire
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfBallastsPerLuminaire < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfLuminaires
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfLuminaires
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfLuminaires < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: LightingEfficacy
    # {http://buildingsync.net/schemas/bedes-auc/2019}LightingEfficacy
    #   xmlattr_Source - SOAP::SOAPString
    class LightingEfficacy < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WorkPlaneHeight
    # {http://buildingsync.net/schemas/bedes-auc/2019}WorkPlaneHeight
    #   xmlattr_Source - SOAP::SOAPString
    class WorkPlaneHeight < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: LuminaireHeight
    # {http://buildingsync.net/schemas/bedes-auc/2019}LuminaireHeight
    #   xmlattr_Source - SOAP::SOAPString
    class LuminaireHeight < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FixtureSpacing
    # {http://buildingsync.net/schemas/bedes-auc/2019}FixtureSpacing
    #   xmlattr_Source - SOAP::SOAPString
    class FixtureSpacing < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RatedLampLife
    # {http://buildingsync.net/schemas/bedes-auc/2019}RatedLampLife
    #   xmlattr_Source - SOAP::SOAPString
    class RatedLampLife < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :lampType
    attr_accessor :ballastType
    attr_accessor :inputVoltage
    attr_accessor :installationType
    attr_accessor :lightingDirection
    attr_accessor :dimmingCapability
    attr_accessor :percentPremisesServed
    attr_accessor :installedPower
    attr_accessor :lampPower
    attr_accessor :numberOfLampsPerLuminaire
    attr_accessor :numberOfLampsPerBallast
    attr_accessor :numberOfBallastsPerLuminaire
    attr_accessor :numberOfLuminaires
    attr_accessor :outsideLighting
    attr_accessor :reflectorType
    attr_accessor :lightingEfficacy
    attr_accessor :workPlaneHeight
    attr_accessor :luminaireHeight
    attr_accessor :fixtureSpacing
    attr_accessor :ratedLampLife
    attr_accessor :controls
    attr_accessor :lightingAutomationSystem
    attr_accessor :thirdPartyCertification
    attr_accessor :primaryFuel
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(lampType = nil, ballastType = nil, inputVoltage = nil, installationType = nil, lightingDirection = nil, dimmingCapability = nil, percentPremisesServed = nil, installedPower = nil, lampPower = nil, numberOfLampsPerLuminaire = nil, numberOfLampsPerBallast = nil, numberOfBallastsPerLuminaire = nil, numberOfLuminaires = nil, outsideLighting = nil, reflectorType = nil, lightingEfficacy = nil, workPlaneHeight = nil, luminaireHeight = nil, fixtureSpacing = nil, ratedLampLife = nil, controls = nil, lightingAutomationSystem = nil, thirdPartyCertification = nil, primaryFuel = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @lampType = lampType
      @ballastType = ballastType
      @inputVoltage = inputVoltage
      @installationType = installationType
      @lightingDirection = lightingDirection
      @dimmingCapability = dimmingCapability
      @percentPremisesServed = percentPremisesServed
      @installedPower = installedPower
      @lampPower = lampPower
      @numberOfLampsPerLuminaire = numberOfLampsPerLuminaire
      @numberOfLampsPerBallast = numberOfLampsPerBallast
      @numberOfBallastsPerLuminaire = numberOfBallastsPerLuminaire
      @numberOfLuminaires = numberOfLuminaires
      @outsideLighting = outsideLighting
      @reflectorType = reflectorType
      @lightingEfficacy = lightingEfficacy
      @workPlaneHeight = workPlaneHeight
      @luminaireHeight = luminaireHeight
      @fixtureSpacing = fixtureSpacing
      @ratedLampLife = ratedLampLife
      @controls = controls
      @lightingAutomationSystem = lightingAutomationSystem
      @thirdPartyCertification = thirdPartyCertification
      @primaryFuel = primaryFuel
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DomesticHotWaterSystemType
  #   domesticHotWaterType - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType
  #   domesticHotWaterSystemNotes - SOAP::SOAPString
  #   recirculation - BuildingSync::DomesticHotWaterSystemType::Recirculation
  #   hotWaterDistributionType - SOAP::SOAPString
  #   waterHeaterEfficiencyType - SOAP::SOAPString
  #   waterHeaterEfficiency - BuildingSync::DomesticHotWaterSystemType::WaterHeaterEfficiency
  #   dailyHotWaterDraw - BuildingSync::DomesticHotWaterSystemType::DailyHotWaterDraw
  #   hotWaterSetpointTemperature - BuildingSync::DomesticHotWaterSystemType::HotWaterSetpointTemperature
  #   parasiticFuelConsumptionRate - BuildingSync::DomesticHotWaterSystemType::ParasiticFuelConsumptionRate
  #   capacity - BuildingSync::Capacity
  #   capacityUnits - SOAP::SOAPString
  #   thirdPartyCertification - SOAP::SOAPString
  #   controls - BuildingSync::DomesticHotWaterSystemType::Controls
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   domesticHotWaterSystemCondition - BuildingSync::EquipmentCondition
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class DomesticHotWaterSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: DomesticHotWaterType
    # {http://buildingsync.net/schemas/bedes-auc/2019}DomesticHotWaterType
    #   storageTank - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank
    #   instantaneous - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::Instantaneous
    #   heatExchanger - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::HeatExchanger
    #   other - BuildingSync::OtherType
    #   unknown - BuildingSync::UnknownType
    class DomesticHotWaterType

      # inner class for member: StorageTank
      # {http://buildingsync.net/schemas/bedes-auc/2019}StorageTank
      #   tankHeatingType - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType
      #   tankVolume - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankVolume
      #   tankHeight - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeight
      #   tankPerimeter - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankPerimeter
      #   recoveryEfficiency - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::RecoveryEfficiency
      #   storageTankInsulationRValue - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::StorageTankInsulationRValue
      #   storageTankInsulationThickness - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::StorageTankInsulationThickness
      #   offCycleHeatLossCoefficient - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::OffCycleHeatLossCoefficient
      class StorageTank

        # inner class for member: TankHeatingType
        # {http://buildingsync.net/schemas/bedes-auc/2019}TankHeatingType
        #   direct - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Direct
        #   indirect - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect
        #   other - BuildingSync::OtherType
        #   unknown - BuildingSync::UnknownType
        class TankHeatingType

          # inner class for member: Direct
          # {http://buildingsync.net/schemas/bedes-auc/2019}Direct
          #   directTankHeatingSource - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Direct::DirectTankHeatingSource
          class Direct

            # inner class for member: DirectTankHeatingSource
            # {http://buildingsync.net/schemas/bedes-auc/2019}DirectTankHeatingSource
            #   electricResistance - BuildingSync::ElectricResistanceType
            #   combustion - BuildingSync::Combustion
            #   other - BuildingSync::OtherType
            #   unknown - BuildingSync::UnknownType
            class DirectTankHeatingSource
              attr_accessor :electricResistance
              attr_accessor :combustion
              attr_accessor :other
              attr_accessor :unknown

              def initialize(electricResistance = nil, combustion = nil, other = nil, unknown = nil)
                @electricResistance = electricResistance
                @combustion = combustion
                @other = other
                @unknown = unknown
              end
            end

            attr_accessor :directTankHeatingSource

            def initialize(directTankHeatingSource = nil)
              @directTankHeatingSource = directTankHeatingSource
            end
          end

          # inner class for member: Indirect
          # {http://buildingsync.net/schemas/bedes-auc/2019}Indirect
          #   indirectTankHeatingSource - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource
          class Indirect

            # inner class for member: IndirectTankHeatingSource
            # {http://buildingsync.net/schemas/bedes-auc/2019}IndirectTankHeatingSource
            #   heatPump - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::HeatPump
            #   solar - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar
            #   spaceHeatingSystem - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::SpaceHeatingSystem
            #   other - BuildingSync::OtherType
            #   unknown - BuildingSync::UnknownType
            class IndirectTankHeatingSource

              # inner class for member: HeatPump
              # {http://buildingsync.net/schemas/bedes-auc/2019}HeatPump
              #   ratedHeatPumpSensibleHeatRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
              #   hPWHMinimumAirTemperature - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::HeatPump::HPWHMinimumAirTemperature
              #   refrigerant - SOAP::SOAPString
              class HeatPump

                # inner class for member: HPWHMinimumAirTemperature
                # {http://buildingsync.net/schemas/bedes-auc/2019}HPWHMinimumAirTemperature
                #   xmlattr_Source - SOAP::SOAPString
                class HPWHMinimumAirTemperature < ::String
                  AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_Source
                    __xmlattr[AttrSource]
                  end

                  def xmlattr_Source=(value)
                    __xmlattr[AttrSource] = value
                  end

                  def initialize(*arg)
                    super
                    @__xmlattr = {}
                  end
                end

                attr_accessor :ratedHeatPumpSensibleHeatRatio
                attr_accessor :hPWHMinimumAirTemperature
                attr_accessor :refrigerant

                def initialize(ratedHeatPumpSensibleHeatRatio = nil, hPWHMinimumAirTemperature = nil, refrigerant = nil)
                  @ratedHeatPumpSensibleHeatRatio = ratedHeatPumpSensibleHeatRatio
                  @hPWHMinimumAirTemperature = hPWHMinimumAirTemperature
                  @refrigerant = refrigerant
                end
              end

              # inner class for member: Solar
              # {http://buildingsync.net/schemas/bedes-auc/2019}Solar
              #   solarThermalSystemType - SOAP::SOAPString
              #   solarThermalSystemCollectorArea - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar::SolarThermalSystemCollectorArea
              #   solarThermalSystemCollectorLoopType - SOAP::SOAPString
              #   solarThermalSystemCollectorType - SOAP::SOAPString
              #   solarThermalSystemCollectorAzimuth - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar::SolarThermalSystemCollectorAzimuth
              #   solarThermalSystemCollectorTilt - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar::SolarThermalSystemCollectorTilt
              #   solarThermalSystemStorageVolume - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar::SolarThermalSystemStorageVolume
              #   controls - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::Solar::Controls
              #   quantity - BuildingSync::Quantity
              #   yearInstalled - SOAP::SOAPGYear
              #   yearOfManufacture - SOAP::SOAPGYear
              #   manufacturer - SOAP::SOAPString
              #   modelNumber - SOAP::SOAPString
              #   location - SOAP::SOAPString
              class Solar

                # inner class for member: SolarThermalSystemCollectorArea
                # {http://buildingsync.net/schemas/bedes-auc/2019}SolarThermalSystemCollectorArea
                #   xmlattr_Source - SOAP::SOAPString
                class SolarThermalSystemCollectorArea < ::String
                  AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_Source
                    __xmlattr[AttrSource]
                  end

                  def xmlattr_Source=(value)
                    __xmlattr[AttrSource] = value
                  end

                  def initialize(*arg)
                    super
                    @__xmlattr = {}
                  end
                end

                # inner class for member: SolarThermalSystemCollectorAzimuth
                # {http://buildingsync.net/schemas/bedes-auc/2019}SolarThermalSystemCollectorAzimuth
                #   xmlattr_Source - SOAP::SOAPString
                class SolarThermalSystemCollectorAzimuth < ::String
                  AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_Source
                    __xmlattr[AttrSource]
                  end

                  def xmlattr_Source=(value)
                    __xmlattr[AttrSource] = value
                  end

                  def initialize(*arg)
                    super
                    @__xmlattr = {}
                  end
                end

                # inner class for member: SolarThermalSystemCollectorTilt
                # {http://buildingsync.net/schemas/bedes-auc/2019}SolarThermalSystemCollectorTilt
                #   xmlattr_Source - SOAP::SOAPString
                class SolarThermalSystemCollectorTilt < ::String
                  AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_Source
                    __xmlattr[AttrSource]
                  end

                  def xmlattr_Source=(value)
                    __xmlattr[AttrSource] = value
                  end

                  def initialize(*arg)
                    super
                    @__xmlattr = {}
                  end
                end

                # inner class for member: SolarThermalSystemStorageVolume
                # {http://buildingsync.net/schemas/bedes-auc/2019}SolarThermalSystemStorageVolume
                #   xmlattr_Source - SOAP::SOAPString
                class SolarThermalSystemStorageVolume < ::String
                  AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_Source
                    __xmlattr[AttrSource]
                  end

                  def xmlattr_Source=(value)
                    __xmlattr[AttrSource] = value
                  end

                  def initialize(*arg)
                    super
                    @__xmlattr = {}
                  end
                end

                # inner class for member: Controls
                # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
                class Controls < ::Array
                end

                attr_accessor :solarThermalSystemType
                attr_accessor :solarThermalSystemCollectorArea
                attr_accessor :solarThermalSystemCollectorLoopType
                attr_accessor :solarThermalSystemCollectorType
                attr_accessor :solarThermalSystemCollectorAzimuth
                attr_accessor :solarThermalSystemCollectorTilt
                attr_accessor :solarThermalSystemStorageVolume
                attr_accessor :controls
                attr_accessor :quantity
                attr_accessor :yearInstalled
                attr_accessor :yearOfManufacture
                attr_accessor :manufacturer
                attr_accessor :modelNumber
                attr_accessor :location

                def initialize(solarThermalSystemType = nil, solarThermalSystemCollectorArea = nil, solarThermalSystemCollectorLoopType = nil, solarThermalSystemCollectorType = nil, solarThermalSystemCollectorAzimuth = nil, solarThermalSystemCollectorTilt = nil, solarThermalSystemStorageVolume = nil, controls = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, location = nil)
                  @solarThermalSystemType = solarThermalSystemType
                  @solarThermalSystemCollectorArea = solarThermalSystemCollectorArea
                  @solarThermalSystemCollectorLoopType = solarThermalSystemCollectorLoopType
                  @solarThermalSystemCollectorType = solarThermalSystemCollectorType
                  @solarThermalSystemCollectorAzimuth = solarThermalSystemCollectorAzimuth
                  @solarThermalSystemCollectorTilt = solarThermalSystemCollectorTilt
                  @solarThermalSystemStorageVolume = solarThermalSystemStorageVolume
                  @controls = controls
                  @quantity = quantity
                  @yearInstalled = yearInstalled
                  @yearOfManufacture = yearOfManufacture
                  @manufacturer = manufacturer
                  @modelNumber = modelNumber
                  @location = location
                end
              end

              # inner class for member: SpaceHeatingSystem
              # {http://buildingsync.net/schemas/bedes-auc/2019}SpaceHeatingSystem
              #   heatingPlantID - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::StorageTank::TankHeatingType::Indirect::IndirectTankHeatingSource::SpaceHeatingSystem::HeatingPlantID
              class SpaceHeatingSystem

                # inner class for member: HeatingPlantID
                # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingPlantID
                #   xmlattr_IDref - SOAP::SOAPIDREF
                class HeatingPlantID
                  AttrIDref = XSD::QName.new(nil, "IDref")

                  def __xmlattr
                    @__xmlattr ||= {}
                  end

                  def xmlattr_IDref
                    __xmlattr[AttrIDref]
                  end

                  def xmlattr_IDref=(value)
                    __xmlattr[AttrIDref] = value
                  end

                  def initialize
                    @__xmlattr = {}
                  end
                end

                attr_accessor :heatingPlantID

                def initialize(heatingPlantID = nil)
                  @heatingPlantID = heatingPlantID
                end
              end

              attr_accessor :heatPump
              attr_accessor :solar
              attr_accessor :spaceHeatingSystem
              attr_accessor :other
              attr_accessor :unknown

              def initialize(heatPump = nil, solar = nil, spaceHeatingSystem = nil, other = nil, unknown = nil)
                @heatPump = heatPump
                @solar = solar
                @spaceHeatingSystem = spaceHeatingSystem
                @other = other
                @unknown = unknown
              end
            end

            attr_accessor :indirectTankHeatingSource

            def initialize(indirectTankHeatingSource = nil)
              @indirectTankHeatingSource = indirectTankHeatingSource
            end
          end

          attr_accessor :direct
          attr_accessor :indirect
          attr_accessor :other
          attr_accessor :unknown

          def initialize(direct = nil, indirect = nil, other = nil, unknown = nil)
            @direct = direct
            @indirect = indirect
            @other = other
            @unknown = unknown
          end
        end

        # inner class for member: TankVolume
        # {http://buildingsync.net/schemas/bedes-auc/2019}TankVolume
        #   xmlattr_Source - SOAP::SOAPString
        class TankVolume < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: TankHeight
        # {http://buildingsync.net/schemas/bedes-auc/2019}TankHeight
        #   xmlattr_Source - SOAP::SOAPString
        class TankHeight < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: TankPerimeter
        # {http://buildingsync.net/schemas/bedes-auc/2019}TankPerimeter
        #   xmlattr_Source - SOAP::SOAPString
        class TankPerimeter < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: RecoveryEfficiency
        # {http://buildingsync.net/schemas/bedes-auc/2019}RecoveryEfficiency
        #   xmlattr_Source - SOAP::SOAPString
        class RecoveryEfficiency < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: StorageTankInsulationRValue
        # {http://buildingsync.net/schemas/bedes-auc/2019}StorageTankInsulationRValue
        #   xmlattr_Source - SOAP::SOAPString
        class StorageTankInsulationRValue < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: StorageTankInsulationThickness
        # {http://buildingsync.net/schemas/bedes-auc/2019}StorageTankInsulationThickness
        #   xmlattr_Source - SOAP::SOAPString
        class StorageTankInsulationThickness < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: OffCycleHeatLossCoefficient
        # {http://buildingsync.net/schemas/bedes-auc/2019}OffCycleHeatLossCoefficient
        #   xmlattr_Source - SOAP::SOAPString
        class OffCycleHeatLossCoefficient < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :tankHeatingType
        attr_accessor :tankVolume
        attr_accessor :tankHeight
        attr_accessor :tankPerimeter
        attr_accessor :recoveryEfficiency
        attr_accessor :storageTankInsulationRValue
        attr_accessor :storageTankInsulationThickness
        attr_accessor :offCycleHeatLossCoefficient

        def initialize(tankHeatingType = nil, tankVolume = nil, tankHeight = nil, tankPerimeter = nil, recoveryEfficiency = nil, storageTankInsulationRValue = nil, storageTankInsulationThickness = nil, offCycleHeatLossCoefficient = nil)
          @tankHeatingType = tankHeatingType
          @tankVolume = tankVolume
          @tankHeight = tankHeight
          @tankPerimeter = tankPerimeter
          @recoveryEfficiency = recoveryEfficiency
          @storageTankInsulationRValue = storageTankInsulationRValue
          @storageTankInsulationThickness = storageTankInsulationThickness
          @offCycleHeatLossCoefficient = offCycleHeatLossCoefficient
        end
      end

      # inner class for member: Instantaneous
      # {http://buildingsync.net/schemas/bedes-auc/2019}Instantaneous
      #   instantaneousWaterHeatingSource - BuildingSync::DomesticHotWaterSystemType::DomesticHotWaterType::Instantaneous::InstantaneousWaterHeatingSource
      class Instantaneous

        # inner class for member: InstantaneousWaterHeatingSource
        # {http://buildingsync.net/schemas/bedes-auc/2019}InstantaneousWaterHeatingSource
        #   electricResistance - BuildingSync::ElectricResistanceType
        #   combustion - BuildingSync::Combustion
        #   other - BuildingSync::OtherType
        #   unknown - BuildingSync::UnknownType
        class InstantaneousWaterHeatingSource
          attr_accessor :electricResistance
          attr_accessor :combustion
          attr_accessor :other
          attr_accessor :unknown

          def initialize(electricResistance = nil, combustion = nil, other = nil, unknown = nil)
            @electricResistance = electricResistance
            @combustion = combustion
            @other = other
            @unknown = unknown
          end
        end

        attr_accessor :instantaneousWaterHeatingSource

        def initialize(instantaneousWaterHeatingSource = nil)
          @instantaneousWaterHeatingSource = instantaneousWaterHeatingSource
        end
      end

      # inner class for member: HeatExchanger
      # {http://buildingsync.net/schemas/bedes-auc/2019}HeatExchanger
      class HeatExchanger
        def initialize
        end
      end

      attr_accessor :storageTank
      attr_accessor :instantaneous
      attr_accessor :heatExchanger
      attr_accessor :other
      attr_accessor :unknown

      def initialize(storageTank = nil, instantaneous = nil, heatExchanger = nil, other = nil, unknown = nil)
        @storageTank = storageTank
        @instantaneous = instantaneous
        @heatExchanger = heatExchanger
        @other = other
        @unknown = unknown
      end
    end

    # inner class for member: Recirculation
    # {http://buildingsync.net/schemas/bedes-auc/2019}Recirculation
    #   recirculationLoopCount - BuildingSync::DomesticHotWaterSystemType::Recirculation::RecirculationLoopCount
    #   recirculationFlowRate - BuildingSync::DomesticHotWaterSystemType::Recirculation::RecirculationFlowRate
    #   recirculationControlType - SOAP::SOAPString
    #   pipeInsulationThickness - BuildingSync::PipeInsulationThickness
    #   pipeLocation - BuildingSync::PipeLocation
    #   recirculationEnergyLossRate - BuildingSync::DomesticHotWaterSystemType::Recirculation::RecirculationEnergyLossRate
    class Recirculation

      # inner class for member: RecirculationLoopCount
      # {http://buildingsync.net/schemas/bedes-auc/2019}RecirculationLoopCount
      #   xmlattr_Source - SOAP::SOAPString
      class RecirculationLoopCount < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: RecirculationFlowRate
      # {http://buildingsync.net/schemas/bedes-auc/2019}RecirculationFlowRate
      #   xmlattr_Source - SOAP::SOAPString
      class RecirculationFlowRate < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: RecirculationEnergyLossRate
      # {http://buildingsync.net/schemas/bedes-auc/2019}RecirculationEnergyLossRate
      #   xmlattr_Source - SOAP::SOAPString
      class RecirculationEnergyLossRate < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :recirculationLoopCount
      attr_accessor :recirculationFlowRate
      attr_accessor :recirculationControlType
      attr_accessor :pipeInsulationThickness
      attr_accessor :pipeLocation
      attr_accessor :recirculationEnergyLossRate

      def initialize(recirculationLoopCount = nil, recirculationFlowRate = nil, recirculationControlType = nil, pipeInsulationThickness = nil, pipeLocation = nil, recirculationEnergyLossRate = nil)
        @recirculationLoopCount = recirculationLoopCount
        @recirculationFlowRate = recirculationFlowRate
        @recirculationControlType = recirculationControlType
        @pipeInsulationThickness = pipeInsulationThickness
        @pipeLocation = pipeLocation
        @recirculationEnergyLossRate = recirculationEnergyLossRate
      end
    end

    # inner class for member: WaterHeaterEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterHeaterEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class WaterHeaterEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DailyHotWaterDraw
    # {http://buildingsync.net/schemas/bedes-auc/2019}DailyHotWaterDraw
    #   xmlattr_Source - SOAP::SOAPString
    class DailyHotWaterDraw < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: HotWaterSetpointTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}HotWaterSetpointTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class HotWaterSetpointTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ParasiticFuelConsumptionRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}ParasiticFuelConsumptionRate
    #   xmlattr_Source - SOAP::SOAPString
    class ParasiticFuelConsumptionRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :domesticHotWaterType
    attr_accessor :domesticHotWaterSystemNotes
    attr_accessor :recirculation
    attr_accessor :hotWaterDistributionType
    attr_accessor :waterHeaterEfficiencyType
    attr_accessor :waterHeaterEfficiency
    attr_accessor :dailyHotWaterDraw
    attr_accessor :hotWaterSetpointTemperature
    attr_accessor :parasiticFuelConsumptionRate
    attr_accessor :capacity
    attr_accessor :capacityUnits
    attr_accessor :thirdPartyCertification
    attr_accessor :controls
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :domesticHotWaterSystemCondition
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(domesticHotWaterType = nil, domesticHotWaterSystemNotes = nil, recirculation = nil, hotWaterDistributionType = nil, waterHeaterEfficiencyType = nil, waterHeaterEfficiency = nil, dailyHotWaterDraw = nil, hotWaterSetpointTemperature = nil, parasiticFuelConsumptionRate = nil, capacity = nil, capacityUnits = nil, thirdPartyCertification = nil, controls = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, domesticHotWaterSystemCondition = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @domesticHotWaterType = domesticHotWaterType
      @domesticHotWaterSystemNotes = domesticHotWaterSystemNotes
      @recirculation = recirculation
      @hotWaterDistributionType = hotWaterDistributionType
      @waterHeaterEfficiencyType = waterHeaterEfficiencyType
      @waterHeaterEfficiency = waterHeaterEfficiency
      @dailyHotWaterDraw = dailyHotWaterDraw
      @hotWaterSetpointTemperature = hotWaterSetpointTemperature
      @parasiticFuelConsumptionRate = parasiticFuelConsumptionRate
      @capacity = capacity
      @capacityUnits = capacityUnits
      @thirdPartyCertification = thirdPartyCertification
      @controls = controls
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @domesticHotWaterSystemCondition = domesticHotWaterSystemCondition
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CookingSystemType
  #   typeOfCookingEquipment - SOAP::SOAPString
  #   numberOfMeals - BuildingSync::CookingSystemType::NumberOfMeals
  #   cookingEnergyPerMeal - BuildingSync::CookingSystemType::CookingEnergyPerMeal
  #   dailyWaterUse - BuildingSync::CookingSystemType::DailyWaterUse
  #   capacity - BuildingSync::Capacity
  #   capacityUnits - SOAP::SOAPString
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class CookingSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: NumberOfMeals
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfMeals
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfMeals < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CookingEnergyPerMeal
    # {http://buildingsync.net/schemas/bedes-auc/2019}CookingEnergyPerMeal
    #   xmlattr_Source - SOAP::SOAPString
    class CookingEnergyPerMeal < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DailyWaterUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}DailyWaterUse
    #   xmlattr_Source - SOAP::SOAPString
    class DailyWaterUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :typeOfCookingEquipment
    attr_accessor :numberOfMeals
    attr_accessor :cookingEnergyPerMeal
    attr_accessor :dailyWaterUse
    attr_accessor :capacity
    attr_accessor :capacityUnits
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(typeOfCookingEquipment = nil, numberOfMeals = nil, cookingEnergyPerMeal = nil, dailyWaterUse = nil, capacity = nil, capacityUnits = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @typeOfCookingEquipment = typeOfCookingEquipment
      @numberOfMeals = numberOfMeals
      @cookingEnergyPerMeal = cookingEnergyPerMeal
      @dailyWaterUse = dailyWaterUse
      @capacity = capacity
      @capacityUnits = capacityUnits
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationSystemType
  #   refrigerationSystemCategory - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class RefrigerationSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: RefrigerationSystemCategory
    # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationSystemCategory
    #   centralRefrigerationSystem - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem
    #   refrigerationUnit - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::RefrigerationUnit
    class RefrigerationSystemCategory

      # inner class for member: CentralRefrigerationSystem
      # {http://buildingsync.net/schemas/bedes-auc/2019}CentralRefrigerationSystem
      #   netRefrigerationCapacity - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::NetRefrigerationCapacity
      #   totalHeatRejection - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::TotalHeatRejection
      #   refrigerant - SOAP::SOAPString
      #   suctionVaporTemperature - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::SuctionVaporTemperature
      #   numberOfRefrigerantReturnLines - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::NumberOfRefrigerantReturnLines
      #   evaporatorPressureRegulators - SOAP::SOAPBoolean
      #   refrigerantSubcooler - SOAP::SOAPBoolean
      #   caseReturnLineDiameter - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::CaseReturnLineDiameter
      #   refrigerationCompressor - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::RefrigerationCompressor
      #   condenserPlantIDs - BuildingSync::CondenserPlantIDs
      class CentralRefrigerationSystem

        # inner class for member: NetRefrigerationCapacity
        # {http://buildingsync.net/schemas/bedes-auc/2019}NetRefrigerationCapacity
        #   xmlattr_Source - SOAP::SOAPString
        class NetRefrigerationCapacity < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: TotalHeatRejection
        # {http://buildingsync.net/schemas/bedes-auc/2019}TotalHeatRejection
        #   xmlattr_Source - SOAP::SOAPString
        class TotalHeatRejection < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: SuctionVaporTemperature
        # {http://buildingsync.net/schemas/bedes-auc/2019}SuctionVaporTemperature
        #   xmlattr_Source - SOAP::SOAPString
        class SuctionVaporTemperature < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: NumberOfRefrigerantReturnLines
        # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfRefrigerantReturnLines
        #   xmlattr_Source - SOAP::SOAPString
        class NumberOfRefrigerantReturnLines < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: CaseReturnLineDiameter
        # {http://buildingsync.net/schemas/bedes-auc/2019}CaseReturnLineDiameter
        #   xmlattr_Source - SOAP::SOAPString
        class CaseReturnLineDiameter < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: RefrigerationCompressor
        # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationCompressor
        #   refrigerationCompressorType - SOAP::SOAPString
        #   compressorUnloader - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::RefrigerationCompressor::CompressorUnloader
        #   desuperheatValve - SOAP::SOAPBoolean
        #   crankcaseHeater - SOAP::SOAPBoolean
        #   xmlattr_ID - SOAP::SOAPID
        class RefrigerationCompressor
          AttrID = XSD::QName.new(nil, "ID")

          # inner class for member: CompressorUnloader
          # {http://buildingsync.net/schemas/bedes-auc/2019}CompressorUnloader
          #   compressorUnloaderStages - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::CentralRefrigerationSystem::RefrigerationCompressor::CompressorUnloader::CompressorUnloaderStages
          class CompressorUnloader

            # inner class for member: CompressorUnloaderStages
            # {http://buildingsync.net/schemas/bedes-auc/2019}CompressorUnloaderStages
            #   xmlattr_Source - SOAP::SOAPString
            class CompressorUnloaderStages < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            attr_accessor :compressorUnloaderStages

            def initialize(compressorUnloaderStages = nil)
              @compressorUnloaderStages = compressorUnloaderStages
            end
          end

          attr_accessor :refrigerationCompressorType
          attr_accessor :compressorUnloader
          attr_accessor :desuperheatValve
          attr_accessor :crankcaseHeater

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_ID
            __xmlattr[AttrID]
          end

          def xmlattr_ID=(value)
            __xmlattr[AttrID] = value
          end

          def initialize(refrigerationCompressorType = nil, compressorUnloader = nil, desuperheatValve = nil, crankcaseHeater = nil)
            @refrigerationCompressorType = refrigerationCompressorType
            @compressorUnloader = compressorUnloader
            @desuperheatValve = desuperheatValve
            @crankcaseHeater = crankcaseHeater
            @__xmlattr = {}
          end
        end

        attr_accessor :netRefrigerationCapacity
        attr_accessor :totalHeatRejection
        attr_accessor :refrigerant
        attr_accessor :suctionVaporTemperature
        attr_accessor :numberOfRefrigerantReturnLines
        attr_accessor :evaporatorPressureRegulators
        attr_accessor :refrigerantSubcooler
        attr_accessor :caseReturnLineDiameter
        attr_accessor :refrigerationCompressor
        attr_accessor :condenserPlantIDs

        def initialize(netRefrigerationCapacity = nil, totalHeatRejection = nil, refrigerant = nil, suctionVaporTemperature = nil, numberOfRefrigerantReturnLines = nil, evaporatorPressureRegulators = nil, refrigerantSubcooler = nil, caseReturnLineDiameter = nil, refrigerationCompressor = nil, condenserPlantIDs = nil)
          @netRefrigerationCapacity = netRefrigerationCapacity
          @totalHeatRejection = totalHeatRejection
          @refrigerant = refrigerant
          @suctionVaporTemperature = suctionVaporTemperature
          @numberOfRefrigerantReturnLines = numberOfRefrigerantReturnLines
          @evaporatorPressureRegulators = evaporatorPressureRegulators
          @refrigerantSubcooler = refrigerantSubcooler
          @caseReturnLineDiameter = caseReturnLineDiameter
          @refrigerationCompressor = refrigerationCompressor
          @condenserPlantIDs = condenserPlantIDs
        end
      end

      # inner class for member: RefrigerationUnit
      # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationUnit
      #   refrigerationUnitType - SOAP::SOAPString
      #   doorConfiguration - SOAP::SOAPString
      #   refrigeratedCaseDoors - SOAP::SOAPBoolean
      #   caseDoorOrientation - SOAP::SOAPString
      #   defrostingType - SOAP::SOAPString
      #   lampPower - BuildingSync::LampPower
      #   refrigerationUnitSize - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::RefrigerationUnit::RefrigerationUnitSize
      #   antiSweatHeaters - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::RefrigerationUnit::AntiSweatHeaters
      #   refrigerationEnergy - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::RefrigerationUnit::RefrigerationEnergy
      class RefrigerationUnit

        # inner class for member: RefrigerationUnitSize
        # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationUnitSize
        #   xmlattr_Source - SOAP::SOAPString
        class RefrigerationUnitSize < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: AntiSweatHeaters
        # {http://buildingsync.net/schemas/bedes-auc/2019}AntiSweatHeaters
        #   antiSweatHeaterPower - BuildingSync::RefrigerationSystemType::RefrigerationSystemCategory::RefrigerationUnit::AntiSweatHeaters::AntiSweatHeaterPower
        #   antiSweatHeaterControls - SOAP::SOAPBoolean
        #   manufacturer - SOAP::SOAPString
        #   modelNumber - SOAP::SOAPString
        class AntiSweatHeaters

          # inner class for member: AntiSweatHeaterPower
          # {http://buildingsync.net/schemas/bedes-auc/2019}AntiSweatHeaterPower
          #   xmlattr_Source - SOAP::SOAPString
          class AntiSweatHeaterPower < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          attr_accessor :antiSweatHeaterPower
          attr_accessor :antiSweatHeaterControls
          attr_accessor :manufacturer
          attr_accessor :modelNumber

          def initialize(antiSweatHeaterPower = nil, antiSweatHeaterControls = nil, manufacturer = nil, modelNumber = nil)
            @antiSweatHeaterPower = antiSweatHeaterPower
            @antiSweatHeaterControls = antiSweatHeaterControls
            @manufacturer = manufacturer
            @modelNumber = modelNumber
          end
        end

        # inner class for member: RefrigerationEnergy
        # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationEnergy
        #   xmlattr_Source - SOAP::SOAPString
        class RefrigerationEnergy < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :refrigerationUnitType
        attr_accessor :doorConfiguration
        attr_accessor :refrigeratedCaseDoors
        attr_accessor :caseDoorOrientation
        attr_accessor :defrostingType
        attr_accessor :lampPower
        attr_accessor :refrigerationUnitSize
        attr_accessor :antiSweatHeaters
        attr_accessor :refrigerationEnergy

        def initialize(refrigerationUnitType = nil, doorConfiguration = nil, refrigeratedCaseDoors = nil, caseDoorOrientation = nil, defrostingType = nil, lampPower = nil, refrigerationUnitSize = nil, antiSweatHeaters = nil, refrigerationEnergy = nil)
          @refrigerationUnitType = refrigerationUnitType
          @doorConfiguration = doorConfiguration
          @refrigeratedCaseDoors = refrigeratedCaseDoors
          @caseDoorOrientation = caseDoorOrientation
          @defrostingType = defrostingType
          @lampPower = lampPower
          @refrigerationUnitSize = refrigerationUnitSize
          @antiSweatHeaters = antiSweatHeaters
          @refrigerationEnergy = refrigerationEnergy
        end
      end

      attr_accessor :centralRefrigerationSystem
      attr_accessor :refrigerationUnit

      def initialize(centralRefrigerationSystem = nil, refrigerationUnit = nil)
        @centralRefrigerationSystem = centralRefrigerationSystem
        @refrigerationUnit = refrigerationUnit
      end
    end

    attr_accessor :refrigerationSystemCategory
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(refrigerationSystemCategory = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @refrigerationSystemCategory = refrigerationSystemCategory
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DishwasherSystemType
  #   dishwasherMachineType - SOAP::SOAPString
  #   dishwasherConfiguration - SOAP::SOAPString
  #   dishwasherClassification - SOAP::SOAPString
  #   dishwasherLoadsPerWeek - BuildingSync::DishwasherSystemType::DishwasherLoadsPerWeek
  #   dishwasherEnergyFactor - BuildingSync::DishwasherSystemType::DishwasherEnergyFactor
  #   dishwasherHotWaterUse - BuildingSync::DishwasherSystemType::DishwasherHotWaterUse
  #   controls - BuildingSync::DishwasherSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class DishwasherSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: DishwasherLoadsPerWeek
    # {http://buildingsync.net/schemas/bedes-auc/2019}DishwasherLoadsPerWeek
    #   xmlattr_Source - SOAP::SOAPString
    class DishwasherLoadsPerWeek < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DishwasherEnergyFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}DishwasherEnergyFactor
    #   xmlattr_Source - SOAP::SOAPString
    class DishwasherEnergyFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DishwasherHotWaterUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}DishwasherHotWaterUse
    #   xmlattr_Source - SOAP::SOAPString
    class DishwasherHotWaterUse < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :dishwasherMachineType
    attr_accessor :dishwasherConfiguration
    attr_accessor :dishwasherClassification
    attr_accessor :dishwasherLoadsPerWeek
    attr_accessor :dishwasherEnergyFactor
    attr_accessor :dishwasherHotWaterUse
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(dishwasherMachineType = nil, dishwasherConfiguration = nil, dishwasherClassification = nil, dishwasherLoadsPerWeek = nil, dishwasherEnergyFactor = nil, dishwasherHotWaterUse = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @dishwasherMachineType = dishwasherMachineType
      @dishwasherConfiguration = dishwasherConfiguration
      @dishwasherClassification = dishwasherClassification
      @dishwasherLoadsPerWeek = dishwasherLoadsPerWeek
      @dishwasherEnergyFactor = dishwasherEnergyFactor
      @dishwasherHotWaterUse = dishwasherHotWaterUse
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LaundrySystemType
  #   laundryType - BuildingSync::LaundrySystemType::LaundryType
  #   quantityOfLaundry - BuildingSync::LaundrySystemType::QuantityOfLaundry
  #   laundryEquipmentUsage - BuildingSync::LaundrySystemType::LaundryEquipmentUsage
  #   controls - BuildingSync::LaundrySystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class LaundrySystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: LaundryType
    # {http://buildingsync.net/schemas/bedes-auc/2019}LaundryType
    #   washer - BuildingSync::LaundrySystemType::LaundryType::Washer
    #   dryer - BuildingSync::LaundrySystemType::LaundryType::Dryer
    #   combination - BuildingSync::LaundrySystemType::LaundryType::Combination
    #   other - BuildingSync::OtherType
    #   unknown - BuildingSync::UnknownType
    class LaundryType

      # inner class for member: Washer
      # {http://buildingsync.net/schemas/bedes-auc/2019}Washer
      #   clothesWasherClassification - SOAP::SOAPString
      #   clothesWasherLoaderType - SOAP::SOAPString
      #   clothesWasherModifiedEnergyFactor - BuildingSync::ClothesWasherModifiedEnergyFactor
      #   clothesWasherWaterFactor - BuildingSync::ClothesWasherWaterFactor
      #   clothesWasherCapacity - BuildingSync::ClothesWasherCapacity
      class Washer
        attr_accessor :clothesWasherClassification
        attr_accessor :clothesWasherLoaderType
        attr_accessor :clothesWasherModifiedEnergyFactor
        attr_accessor :clothesWasherWaterFactor
        attr_accessor :clothesWasherCapacity

        def initialize(clothesWasherClassification = nil, clothesWasherLoaderType = nil, clothesWasherModifiedEnergyFactor = nil, clothesWasherWaterFactor = nil, clothesWasherCapacity = nil)
          @clothesWasherClassification = clothesWasherClassification
          @clothesWasherLoaderType = clothesWasherLoaderType
          @clothesWasherModifiedEnergyFactor = clothesWasherModifiedEnergyFactor
          @clothesWasherWaterFactor = clothesWasherWaterFactor
          @clothesWasherCapacity = clothesWasherCapacity
        end
      end

      # inner class for member: Dryer
      # {http://buildingsync.net/schemas/bedes-auc/2019}Dryer
      #   dryerType - SOAP::SOAPString
      #   dryerElectricEnergyUsePerLoad - BuildingSync::DryerElectricEnergyUsePerLoad
      #   dryerGasEnergyUsePerLoad - BuildingSync::DryerGasEnergyUsePerLoad
      class Dryer
        attr_accessor :dryerType
        attr_accessor :dryerElectricEnergyUsePerLoad
        attr_accessor :dryerGasEnergyUsePerLoad

        def initialize(dryerType = nil, dryerElectricEnergyUsePerLoad = nil, dryerGasEnergyUsePerLoad = nil)
          @dryerType = dryerType
          @dryerElectricEnergyUsePerLoad = dryerElectricEnergyUsePerLoad
          @dryerGasEnergyUsePerLoad = dryerGasEnergyUsePerLoad
        end
      end

      # inner class for member: Combination
      # {http://buildingsync.net/schemas/bedes-auc/2019}Combination
      #   washerDryerType - SOAP::SOAPString
      #   clothesWasherClassification - SOAP::SOAPString
      #   clothesWasherLoaderType - SOAP::SOAPString
      #   clothesWasherModifiedEnergyFactor - BuildingSync::ClothesWasherModifiedEnergyFactor
      #   clothesWasherWaterFactor - BuildingSync::ClothesWasherWaterFactor
      #   clothesWasherCapacity - BuildingSync::ClothesWasherCapacity
      #   dryerType - SOAP::SOAPString
      #   dryerElectricEnergyUsePerLoad - BuildingSync::DryerElectricEnergyUsePerLoad
      #   dryerGasEnergyUsePerLoad - BuildingSync::DryerGasEnergyUsePerLoad
      class Combination
        attr_accessor :washerDryerType
        attr_accessor :clothesWasherClassification
        attr_accessor :clothesWasherLoaderType
        attr_accessor :clothesWasherModifiedEnergyFactor
        attr_accessor :clothesWasherWaterFactor
        attr_accessor :clothesWasherCapacity
        attr_accessor :dryerType
        attr_accessor :dryerElectricEnergyUsePerLoad
        attr_accessor :dryerGasEnergyUsePerLoad

        def initialize(washerDryerType = nil, clothesWasherClassification = nil, clothesWasherLoaderType = nil, clothesWasherModifiedEnergyFactor = nil, clothesWasherWaterFactor = nil, clothesWasherCapacity = nil, dryerType = nil, dryerElectricEnergyUsePerLoad = nil, dryerGasEnergyUsePerLoad = nil)
          @washerDryerType = washerDryerType
          @clothesWasherClassification = clothesWasherClassification
          @clothesWasherLoaderType = clothesWasherLoaderType
          @clothesWasherModifiedEnergyFactor = clothesWasherModifiedEnergyFactor
          @clothesWasherWaterFactor = clothesWasherWaterFactor
          @clothesWasherCapacity = clothesWasherCapacity
          @dryerType = dryerType
          @dryerElectricEnergyUsePerLoad = dryerElectricEnergyUsePerLoad
          @dryerGasEnergyUsePerLoad = dryerGasEnergyUsePerLoad
        end
      end

      attr_accessor :washer
      attr_accessor :dryer
      attr_accessor :combination
      attr_accessor :other
      attr_accessor :unknown

      def initialize(washer = nil, dryer = nil, combination = nil, other = nil, unknown = nil)
        @washer = washer
        @dryer = dryer
        @combination = combination
        @other = other
        @unknown = unknown
      end
    end

    # inner class for member: QuantityOfLaundry
    # {http://buildingsync.net/schemas/bedes-auc/2019}QuantityOfLaundry
    #   xmlattr_Source - SOAP::SOAPString
    class QuantityOfLaundry < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: LaundryEquipmentUsage
    # {http://buildingsync.net/schemas/bedes-auc/2019}LaundryEquipmentUsage
    #   xmlattr_Source - SOAP::SOAPString
    class LaundryEquipmentUsage < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :laundryType
    attr_accessor :quantityOfLaundry
    attr_accessor :laundryEquipmentUsage
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(laundryType = nil, quantityOfLaundry = nil, laundryEquipmentUsage = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @laundryType = laundryType
      @quantityOfLaundry = quantityOfLaundry
      @laundryEquipmentUsage = laundryEquipmentUsage
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PumpSystemType
  #   pumpEfficiency - BuildingSync::PumpSystemType::PumpEfficiency
  #   pumpMaximumFlowRate - BuildingSync::PumpSystemType::PumpMaximumFlowRate
  #   pumpMinimumFlowRate - BuildingSync::PumpSystemType::PumpMinimumFlowRate
  #   pumpInstalledFlowRate - BuildingSync::PumpSystemType::PumpInstalledFlowRate
  #   pumpPowerDemand - BuildingSync::PumpSystemType::PumpPowerDemand
  #   pumpControlType - SOAP::SOAPString
  #   pumpOperation - SOAP::SOAPString
  #   pumpingConfiguration - SOAP::SOAPString
  #   pumpApplication - SOAP::SOAPString
  #   controls - BuildingSync::PumpSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedSystemIDs - BuildingSync::LinkedSystemIDs
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class PumpSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: PumpEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class PumpEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PumpMaximumFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpMaximumFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class PumpMaximumFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PumpMinimumFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpMinimumFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class PumpMinimumFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PumpInstalledFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpInstalledFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class PumpInstalledFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PumpPowerDemand
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpPowerDemand
    #   xmlattr_Source - SOAP::SOAPString
    class PumpPowerDemand < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :pumpEfficiency
    attr_accessor :pumpMaximumFlowRate
    attr_accessor :pumpMinimumFlowRate
    attr_accessor :pumpInstalledFlowRate
    attr_accessor :pumpPowerDemand
    attr_accessor :pumpControlType
    attr_accessor :pumpOperation
    attr_accessor :pumpingConfiguration
    attr_accessor :pumpApplication
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedSystemIDs
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(pumpEfficiency = nil, pumpMaximumFlowRate = nil, pumpMinimumFlowRate = nil, pumpInstalledFlowRate = nil, pumpPowerDemand = nil, pumpControlType = nil, pumpOperation = nil, pumpingConfiguration = nil, pumpApplication = nil, controls = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedSystemIDs = nil, userDefinedFields = nil)
      @pumpEfficiency = pumpEfficiency
      @pumpMaximumFlowRate = pumpMaximumFlowRate
      @pumpMinimumFlowRate = pumpMinimumFlowRate
      @pumpInstalledFlowRate = pumpInstalledFlowRate
      @pumpPowerDemand = pumpPowerDemand
      @pumpControlType = pumpControlType
      @pumpOperation = pumpOperation
      @pumpingConfiguration = pumpingConfiguration
      @pumpApplication = pumpApplication
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedSystemIDs = linkedSystemIDs
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FanSystemType
  #   fanEfficiency - BuildingSync::FanSystemType::FanEfficiency
  #   fanSize - BuildingSync::FanSystemType::FanSize
  #   installedFlowRate - BuildingSync::FanSystemType::InstalledFlowRate
  #   fanInstalledFlowRate - BuildingSync::FanSystemType::FanInstalledFlowRate
  #   minimumFlowRate - BuildingSync::FanSystemType::MinimumFlowRate
  #   maximumFanPower - BuildingSync::FanSystemType::MaximumFanPower
  #   fanPowerMinimumRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   fanType - SOAP::SOAPString
  #   beltType - SOAP::SOAPString
  #   fanApplication - SOAP::SOAPString
  #   fanControlType - SOAP::SOAPString
  #   fanPlacement - SOAP::SOAPString
  #   motorLocationRelativeToAirStream - SOAP::SOAPBoolean
  #   designStaticPressure - BuildingSync::FanSystemType::DesignStaticPressure
  #   numberOfDiscreteFanSpeedsCooling - BuildingSync::FanSystemType::NumberOfDiscreteFanSpeedsCooling
  #   numberOfDiscreteFanSpeedsHeating - BuildingSync::FanSystemType::NumberOfDiscreteFanSpeedsHeating
  #   controls - BuildingSync::FanSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   linkedSystemIDs - BuildingSync::LinkedSystemIDs
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class FanSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: FanEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}FanEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class FanEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FanSize
    # {http://buildingsync.net/schemas/bedes-auc/2019}FanSize
    #   xmlattr_Source - SOAP::SOAPString
    class FanSize < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: InstalledFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}InstalledFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class InstalledFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FanInstalledFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}FanInstalledFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class FanInstalledFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MinimumFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}MinimumFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class MinimumFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MaximumFanPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}MaximumFanPower
    #   xmlattr_Source - SOAP::SOAPString
    class MaximumFanPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DesignStaticPressure
    # {http://buildingsync.net/schemas/bedes-auc/2019}DesignStaticPressure
    #   xmlattr_Source - SOAP::SOAPString
    class DesignStaticPressure < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfDiscreteFanSpeedsCooling
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfDiscreteFanSpeedsCooling
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfDiscreteFanSpeedsCooling < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: NumberOfDiscreteFanSpeedsHeating
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfDiscreteFanSpeedsHeating
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfDiscreteFanSpeedsHeating < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :fanEfficiency
    attr_accessor :fanSize
    attr_accessor :installedFlowRate
    attr_accessor :fanInstalledFlowRate
    attr_accessor :minimumFlowRate
    attr_accessor :maximumFanPower
    attr_accessor :fanPowerMinimumRatio
    attr_accessor :fanType
    attr_accessor :beltType
    attr_accessor :fanApplication
    attr_accessor :fanControlType
    attr_accessor :fanPlacement
    attr_accessor :motorLocationRelativeToAirStream
    attr_accessor :designStaticPressure
    attr_accessor :numberOfDiscreteFanSpeedsCooling
    attr_accessor :numberOfDiscreteFanSpeedsHeating
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :linkedSystemIDs
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(fanEfficiency = nil, fanSize = nil, installedFlowRate = nil, fanInstalledFlowRate = nil, minimumFlowRate = nil, maximumFanPower = nil, fanPowerMinimumRatio = nil, fanType = nil, beltType = nil, fanApplication = nil, fanControlType = nil, fanPlacement = nil, motorLocationRelativeToAirStream = nil, designStaticPressure = nil, numberOfDiscreteFanSpeedsCooling = nil, numberOfDiscreteFanSpeedsHeating = nil, controls = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, linkedSystemIDs = nil, userDefinedFields = nil)
      @fanEfficiency = fanEfficiency
      @fanSize = fanSize
      @installedFlowRate = installedFlowRate
      @fanInstalledFlowRate = fanInstalledFlowRate
      @minimumFlowRate = minimumFlowRate
      @maximumFanPower = maximumFanPower
      @fanPowerMinimumRatio = fanPowerMinimumRatio
      @fanType = fanType
      @beltType = beltType
      @fanApplication = fanApplication
      @fanControlType = fanControlType
      @fanPlacement = fanPlacement
      @motorLocationRelativeToAirStream = motorLocationRelativeToAirStream
      @designStaticPressure = designStaticPressure
      @numberOfDiscreteFanSpeedsCooling = numberOfDiscreteFanSpeedsCooling
      @numberOfDiscreteFanSpeedsHeating = numberOfDiscreteFanSpeedsHeating
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @linkedSystemIDs = linkedSystemIDs
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}MotorSystemType
  #   motorRPM - BuildingSync::MotorSystemType::MotorRPM
  #   motorBrakeHP - BuildingSync::MotorSystemType::MotorBrakeHP
  #   motorHP - BuildingSync::MotorSystemType::MotorHP
  #   motorEfficiency - BuildingSync::MotorSystemType::MotorEfficiency
  #   driveEfficiency - BuildingSync::MotorSystemType::DriveEfficiency
  #   fullLoadAmps - BuildingSync::MotorSystemType::FullLoadAmps
  #   motorPoleCount - BuildingSync::MotorSystemType::MotorPoleCount
  #   motorEnclosureType - SOAP::SOAPString
  #   motorApplication - SOAP::SOAPString
  #   controls - BuildingSync::MotorSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   linkedSystemIDs - BuildingSync::LinkedSystemIDs
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class MotorSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: MotorRPM
    # {http://buildingsync.net/schemas/bedes-auc/2019}MotorRPM
    #   xmlattr_Source - SOAP::SOAPString
    class MotorRPM < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MotorBrakeHP
    # {http://buildingsync.net/schemas/bedes-auc/2019}MotorBrakeHP
    #   xmlattr_Source - SOAP::SOAPString
    class MotorBrakeHP < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MotorHP
    # {http://buildingsync.net/schemas/bedes-auc/2019}MotorHP
    #   xmlattr_Source - SOAP::SOAPString
    class MotorHP < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MotorEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}MotorEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class MotorEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: DriveEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}DriveEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class DriveEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FullLoadAmps
    # {http://buildingsync.net/schemas/bedes-auc/2019}FullLoadAmps
    #   xmlattr_Source - SOAP::SOAPString
    class FullLoadAmps < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: MotorPoleCount
    # {http://buildingsync.net/schemas/bedes-auc/2019}MotorPoleCount
    #   xmlattr_Source - SOAP::SOAPString
    class MotorPoleCount < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :motorRPM
    attr_accessor :motorBrakeHP
    attr_accessor :motorHP
    attr_accessor :motorEfficiency
    attr_accessor :driveEfficiency
    attr_accessor :fullLoadAmps
    attr_accessor :motorPoleCount
    attr_accessor :motorEnclosureType
    attr_accessor :motorApplication
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :linkedSystemIDs
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(motorRPM = nil, motorBrakeHP = nil, motorHP = nil, motorEfficiency = nil, driveEfficiency = nil, fullLoadAmps = nil, motorPoleCount = nil, motorEnclosureType = nil, motorApplication = nil, controls = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, linkedSystemIDs = nil, userDefinedFields = nil)
      @motorRPM = motorRPM
      @motorBrakeHP = motorBrakeHP
      @motorHP = motorHP
      @motorEfficiency = motorEfficiency
      @driveEfficiency = driveEfficiency
      @fullLoadAmps = fullLoadAmps
      @motorPoleCount = motorPoleCount
      @motorEnclosureType = motorEnclosureType
      @motorApplication = motorApplication
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @linkedSystemIDs = linkedSystemIDs
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HeatRecoverySystemType
  #   heatRecoveryEfficiency - BuildingSync::HeatRecoverySystemType::HeatRecoveryEfficiency
  #   energyRecoveryEfficiency - BuildingSync::HeatRecoverySystemType::EnergyRecoveryEfficiency
  #   heatRecoveryType - SOAP::SOAPString
  #   systemIDReceivingHeat - BuildingSync::HeatRecoverySystemType::SystemIDReceivingHeat
  #   systemIDProvidingHeat - BuildingSync::HeatRecoverySystemType::SystemIDProvidingHeat
  #   controls - BuildingSync::HeatRecoverySystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class HeatRecoverySystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: HeatRecoveryEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}HeatRecoveryEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class HeatRecoveryEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: EnergyRecoveryEfficiency
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyRecoveryEfficiency
    #   xmlattr_Source - SOAP::SOAPString
    class EnergyRecoveryEfficiency < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SystemIDReceivingHeat
    # {http://buildingsync.net/schemas/bedes-auc/2019}SystemIDReceivingHeat
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class SystemIDReceivingHeat
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    # inner class for member: SystemIDProvidingHeat
    # {http://buildingsync.net/schemas/bedes-auc/2019}SystemIDProvidingHeat
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class SystemIDProvidingHeat
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :heatRecoveryEfficiency
    attr_accessor :energyRecoveryEfficiency
    attr_accessor :heatRecoveryType
    attr_accessor :systemIDReceivingHeat
    attr_accessor :systemIDProvidingHeat
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(heatRecoveryEfficiency = nil, energyRecoveryEfficiency = nil, heatRecoveryType = nil, systemIDReceivingHeat = nil, systemIDProvidingHeat = nil, controls = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, location = nil, userDefinedFields = nil)
      @heatRecoveryEfficiency = heatRecoveryEfficiency
      @energyRecoveryEfficiency = energyRecoveryEfficiency
      @heatRecoveryType = heatRecoveryType
      @systemIDReceivingHeat = systemIDReceivingHeat
      @systemIDProvidingHeat = systemIDProvidingHeat
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WallSystemType
  #   exteriorWallConstruction - BuildingSync::EnvelopeConstructionType
  #   exteriorWallFinish - BuildingSync::Finish
  #   exteriorWallColor - BuildingSync::Color
  #   wallInsulations - BuildingSync::WallSystemType::WallInsulations
  #   wallRValue - BuildingSync::WallSystemType::WallRValue
  #   wallUFactor - BuildingSync::WallSystemType::WallUFactor
  #   wallFramingMaterial - BuildingSync::FramingMaterial
  #   wallFramingSpacing - BuildingSync::WallSystemType::WallFramingSpacing
  #   wallFramingDepth - BuildingSync::WallSystemType::WallFramingDepth
  #   wallFramingFactor - BuildingSync::WallSystemType::WallFramingFactor
  #   cMUFill - SOAP::SOAPString
  #   wallExteriorSolarAbsorptance - BuildingSync::WallSystemType::WallExteriorSolarAbsorptance
  #   wallExteriorThermalAbsorptance - BuildingSync::WallSystemType::WallExteriorThermalAbsorptance
  #   interiorVisibleAbsorptance - BuildingSync::InteriorVisibleAbsorptance
  #   exteriorRoughness - BuildingSync::ExteriorRoughnessType
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class WallSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: WallInsulations
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallInsulations
    class WallInsulations < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}WallInsulation
      #   wallInsulationApplication - SOAP::SOAPString
      #   wallInsulationMaterial - BuildingSync::InsulationMaterialType
      #   wallInsulationThickness - BuildingSync::WallSystemType::WallInsulations::WallInsulation::WallInsulationThickness
      #   wallInsulationContinuity - SOAP::SOAPString
      #   wallInsulationCondition - BuildingSync::InsulationCondition
      #   wallInsulationLocation - SOAP::SOAPString
      #   wallInsulationRValue - BuildingSync::WallSystemType::WallInsulations::WallInsulation::WallInsulationRValue
      class WallInsulation

        # inner class for member: WallInsulationThickness
        # {http://buildingsync.net/schemas/bedes-auc/2019}WallInsulationThickness
        #   xmlattr_Source - SOAP::SOAPString
        class WallInsulationThickness < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: WallInsulationRValue
        # {http://buildingsync.net/schemas/bedes-auc/2019}WallInsulationRValue
        #   xmlattr_Source - SOAP::SOAPString
        class WallInsulationRValue < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :wallInsulationApplication
        attr_accessor :wallInsulationMaterial
        attr_accessor :wallInsulationThickness
        attr_accessor :wallInsulationContinuity
        attr_accessor :wallInsulationCondition
        attr_accessor :wallInsulationLocation
        attr_accessor :wallInsulationRValue

        def initialize(wallInsulationApplication = nil, wallInsulationMaterial = nil, wallInsulationThickness = nil, wallInsulationContinuity = nil, wallInsulationCondition = nil, wallInsulationLocation = nil, wallInsulationRValue = nil)
          @wallInsulationApplication = wallInsulationApplication
          @wallInsulationMaterial = wallInsulationMaterial
          @wallInsulationThickness = wallInsulationThickness
          @wallInsulationContinuity = wallInsulationContinuity
          @wallInsulationCondition = wallInsulationCondition
          @wallInsulationLocation = wallInsulationLocation
          @wallInsulationRValue = wallInsulationRValue
        end
      end
    end

    # inner class for member: WallRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallRValue
    #   xmlattr_Source - SOAP::SOAPString
    class WallRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallUFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallUFactor
    #   xmlattr_Source - SOAP::SOAPString
    class WallUFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallFramingSpacing
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallFramingSpacing
    #   xmlattr_Source - SOAP::SOAPString
    class WallFramingSpacing < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallFramingDepth
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallFramingDepth
    #   xmlattr_Source - SOAP::SOAPString
    class WallFramingDepth < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallFramingFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallFramingFactor
    #   xmlattr_Source - SOAP::SOAPString
    class WallFramingFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallExteriorSolarAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallExteriorSolarAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class WallExteriorSolarAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WallExteriorThermalAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallExteriorThermalAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class WallExteriorThermalAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :exteriorWallConstruction
    attr_accessor :exteriorWallFinish
    attr_accessor :exteriorWallColor
    attr_accessor :wallInsulations
    attr_accessor :wallRValue
    attr_accessor :wallUFactor
    attr_accessor :wallFramingMaterial
    attr_accessor :wallFramingSpacing
    attr_accessor :wallFramingDepth
    attr_accessor :wallFramingFactor
    attr_accessor :cMUFill
    attr_accessor :wallExteriorSolarAbsorptance
    attr_accessor :wallExteriorThermalAbsorptance
    attr_accessor :interiorVisibleAbsorptance
    attr_accessor :exteriorRoughness
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(exteriorWallConstruction = nil, exteriorWallFinish = nil, exteriorWallColor = nil, wallInsulations = nil, wallRValue = nil, wallUFactor = nil, wallFramingMaterial = nil, wallFramingSpacing = nil, wallFramingDepth = nil, wallFramingFactor = nil, cMUFill = nil, wallExteriorSolarAbsorptance = nil, wallExteriorThermalAbsorptance = nil, interiorVisibleAbsorptance = nil, exteriorRoughness = nil, quantity = nil, yearInstalled = nil, userDefinedFields = nil)
      @exteriorWallConstruction = exteriorWallConstruction
      @exteriorWallFinish = exteriorWallFinish
      @exteriorWallColor = exteriorWallColor
      @wallInsulations = wallInsulations
      @wallRValue = wallRValue
      @wallUFactor = wallUFactor
      @wallFramingMaterial = wallFramingMaterial
      @wallFramingSpacing = wallFramingSpacing
      @wallFramingDepth = wallFramingDepth
      @wallFramingFactor = wallFramingFactor
      @cMUFill = cMUFill
      @wallExteriorSolarAbsorptance = wallExteriorSolarAbsorptance
      @wallExteriorThermalAbsorptance = wallExteriorThermalAbsorptance
      @interiorVisibleAbsorptance = interiorVisibleAbsorptance
      @exteriorRoughness = exteriorRoughness
      @quantity = quantity
      @yearInstalled = yearInstalled
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingSystemType
  #   ceilingConstruction - BuildingSync::EnvelopeConstructionType
  #   ceilingFinish - BuildingSync::Finish
  #   ceilingColor - BuildingSync::Color
  #   ceilingInsulations - BuildingSync::CeilingSystemType::CeilingInsulations
  #   ceilingRValue - BuildingSync::CeilingSystemType::CeilingRValue
  #   ceilingUFactor - BuildingSync::CeilingSystemType::CeilingUFactor
  #   ceilingFramingMaterial - BuildingSync::FramingMaterial
  #   ceilingFramingSpacing - BuildingSync::CeilingSystemType::CeilingFramingSpacing
  #   ceilingFramingDepth - BuildingSync::CeilingSystemType::CeilingFramingDepth
  #   ceilingFramingFactor - BuildingSync::CeilingSystemType::CeilingFramingFactor
  #   ceilingVisibleAbsorptance - BuildingSync::CeilingSystemType::CeilingVisibleAbsorptance
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class CeilingSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: CeilingInsulations
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingInsulations
    class CeilingInsulations < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingInsulation
      #   ceilingInsulationApplication - SOAP::SOAPString
      #   ceilingInsulationMaterial - BuildingSync::InsulationMaterialType
      #   ceilingInsulationThickness - BuildingSync::CeilingSystemType::CeilingInsulations::CeilingInsulation::CeilingInsulationThickness
      #   ceilingInsulationContinuity - SOAP::SOAPString
      #   ceilingInsulationCondition - BuildingSync::InsulationCondition
      class CeilingInsulation

        # inner class for member: CeilingInsulationThickness
        # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingInsulationThickness
        #   xmlattr_Source - SOAP::SOAPString
        class CeilingInsulationThickness < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :ceilingInsulationApplication
        attr_accessor :ceilingInsulationMaterial
        attr_accessor :ceilingInsulationThickness
        attr_accessor :ceilingInsulationContinuity
        attr_accessor :ceilingInsulationCondition

        def initialize(ceilingInsulationApplication = nil, ceilingInsulationMaterial = nil, ceilingInsulationThickness = nil, ceilingInsulationContinuity = nil, ceilingInsulationCondition = nil)
          @ceilingInsulationApplication = ceilingInsulationApplication
          @ceilingInsulationMaterial = ceilingInsulationMaterial
          @ceilingInsulationThickness = ceilingInsulationThickness
          @ceilingInsulationContinuity = ceilingInsulationContinuity
          @ceilingInsulationCondition = ceilingInsulationCondition
        end
      end
    end

    # inner class for member: CeilingRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingRValue
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CeilingUFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingUFactor
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingUFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CeilingFramingSpacing
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingFramingSpacing
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingFramingSpacing < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CeilingFramingDepth
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingFramingDepth
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingFramingDepth < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CeilingFramingFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingFramingFactor
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingFramingFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: CeilingVisibleAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingVisibleAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class CeilingVisibleAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :ceilingConstruction
    attr_accessor :ceilingFinish
    attr_accessor :ceilingColor
    attr_accessor :ceilingInsulations
    attr_accessor :ceilingRValue
    attr_accessor :ceilingUFactor
    attr_accessor :ceilingFramingMaterial
    attr_accessor :ceilingFramingSpacing
    attr_accessor :ceilingFramingDepth
    attr_accessor :ceilingFramingFactor
    attr_accessor :ceilingVisibleAbsorptance
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(ceilingConstruction = nil, ceilingFinish = nil, ceilingColor = nil, ceilingInsulations = nil, ceilingRValue = nil, ceilingUFactor = nil, ceilingFramingMaterial = nil, ceilingFramingSpacing = nil, ceilingFramingDepth = nil, ceilingFramingFactor = nil, ceilingVisibleAbsorptance = nil, quantity = nil, yearInstalled = nil, userDefinedFields = nil)
      @ceilingConstruction = ceilingConstruction
      @ceilingFinish = ceilingFinish
      @ceilingColor = ceilingColor
      @ceilingInsulations = ceilingInsulations
      @ceilingRValue = ceilingRValue
      @ceilingUFactor = ceilingUFactor
      @ceilingFramingMaterial = ceilingFramingMaterial
      @ceilingFramingSpacing = ceilingFramingSpacing
      @ceilingFramingDepth = ceilingFramingDepth
      @ceilingFramingFactor = ceilingFramingFactor
      @ceilingVisibleAbsorptance = ceilingVisibleAbsorptance
      @quantity = quantity
      @yearInstalled = yearInstalled
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}RoofSystemType
  #   roofConstruction - BuildingSync::EnvelopeConstructionType
  #   blueRoof - SOAP::SOAPBoolean
  #   coolRoof - SOAP::SOAPBoolean
  #   greenRoof - SOAP::SOAPBoolean
  #   roofFinish - BuildingSync::Finish
  #   roofColor - BuildingSync::Color
  #   roofInsulations - BuildingSync::RoofSystemType::RoofInsulations
  #   deckType - SOAP::SOAPString
  #   roofRValue - BuildingSync::RoofSystemType::RoofRValue
  #   roofUFactor - BuildingSync::RoofSystemType::RoofUFactor
  #   roofFramingMaterial - BuildingSync::FramingMaterial
  #   roofFramingSpacing - BuildingSync::RoofSystemType::RoofFramingSpacing
  #   roofFramingDepth - BuildingSync::RoofSystemType::RoofFramingDepth
  #   roofFramingFactor - BuildingSync::RoofSystemType::RoofFramingFactor
  #   roofSlope - SOAP::SOAPString
  #   radiantBarrier - SOAP::SOAPBoolean
  #   roofExteriorSolarAbsorptance - BuildingSync::RoofSystemType::RoofExteriorSolarAbsorptance
  #   roofExteriorSolarReflectanceIndex - BuildingSync::RoofSystemType::RoofExteriorSolarReflectanceIndex
  #   roofExteriorThermalAbsorptance - BuildingSync::RoofSystemType::RoofExteriorThermalAbsorptance
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class RoofSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: RoofInsulations
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofInsulations
    class RoofInsulations < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}RoofInsulation
      #   roofInsulationApplication - SOAP::SOAPString
      #   roofInsulationMaterial - BuildingSync::InsulationMaterialType
      #   roofInsulationThickness - BuildingSync::RoofSystemType::RoofInsulations::RoofInsulation::RoofInsulationThickness
      #   roofInsulationContinuity - SOAP::SOAPString
      #   roofInsulationCondition - BuildingSync::InsulationCondition
      #   roofInsulationRValue - BuildingSync::RoofSystemType::RoofInsulations::RoofInsulation::RoofInsulationRValue
      class RoofInsulation

        # inner class for member: RoofInsulationThickness
        # {http://buildingsync.net/schemas/bedes-auc/2019}RoofInsulationThickness
        #   xmlattr_Source - SOAP::SOAPString
        class RoofInsulationThickness < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: RoofInsulationRValue
        # {http://buildingsync.net/schemas/bedes-auc/2019}RoofInsulationRValue
        #   xmlattr_Source - SOAP::SOAPString
        class RoofInsulationRValue < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :roofInsulationApplication
        attr_accessor :roofInsulationMaterial
        attr_accessor :roofInsulationThickness
        attr_accessor :roofInsulationContinuity
        attr_accessor :roofInsulationCondition
        attr_accessor :roofInsulationRValue

        def initialize(roofInsulationApplication = nil, roofInsulationMaterial = nil, roofInsulationThickness = nil, roofInsulationContinuity = nil, roofInsulationCondition = nil, roofInsulationRValue = nil)
          @roofInsulationApplication = roofInsulationApplication
          @roofInsulationMaterial = roofInsulationMaterial
          @roofInsulationThickness = roofInsulationThickness
          @roofInsulationContinuity = roofInsulationContinuity
          @roofInsulationCondition = roofInsulationCondition
          @roofInsulationRValue = roofInsulationRValue
        end
      end
    end

    # inner class for member: RoofRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofRValue
    #   xmlattr_Source - SOAP::SOAPString
    class RoofRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofUFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofUFactor
    #   xmlattr_Source - SOAP::SOAPString
    class RoofUFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofFramingSpacing
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofFramingSpacing
    #   xmlattr_Source - SOAP::SOAPString
    class RoofFramingSpacing < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofFramingDepth
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofFramingDepth
    #   xmlattr_Source - SOAP::SOAPString
    class RoofFramingDepth < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofFramingFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofFramingFactor
    #   xmlattr_Source - SOAP::SOAPString
    class RoofFramingFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofExteriorSolarAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofExteriorSolarAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class RoofExteriorSolarAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofExteriorSolarReflectanceIndex
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofExteriorSolarReflectanceIndex
    #   xmlattr_Source - SOAP::SOAPString
    class RoofExteriorSolarReflectanceIndex < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: RoofExteriorThermalAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}RoofExteriorThermalAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class RoofExteriorThermalAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :roofConstruction
    attr_accessor :blueRoof
    attr_accessor :coolRoof
    attr_accessor :greenRoof
    attr_accessor :roofFinish
    attr_accessor :roofColor
    attr_accessor :roofInsulations
    attr_accessor :deckType
    attr_accessor :roofRValue
    attr_accessor :roofUFactor
    attr_accessor :roofFramingMaterial
    attr_accessor :roofFramingSpacing
    attr_accessor :roofFramingDepth
    attr_accessor :roofFramingFactor
    attr_accessor :roofSlope
    attr_accessor :radiantBarrier
    attr_accessor :roofExteriorSolarAbsorptance
    attr_accessor :roofExteriorSolarReflectanceIndex
    attr_accessor :roofExteriorThermalAbsorptance
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(roofConstruction = nil, blueRoof = nil, coolRoof = nil, greenRoof = nil, roofFinish = nil, roofColor = nil, roofInsulations = nil, deckType = nil, roofRValue = nil, roofUFactor = nil, roofFramingMaterial = nil, roofFramingSpacing = nil, roofFramingDepth = nil, roofFramingFactor = nil, roofSlope = nil, radiantBarrier = nil, roofExteriorSolarAbsorptance = nil, roofExteriorSolarReflectanceIndex = nil, roofExteriorThermalAbsorptance = nil, quantity = nil, yearInstalled = nil, userDefinedFields = nil)
      @roofConstruction = roofConstruction
      @blueRoof = blueRoof
      @coolRoof = coolRoof
      @greenRoof = greenRoof
      @roofFinish = roofFinish
      @roofColor = roofColor
      @roofInsulations = roofInsulations
      @deckType = deckType
      @roofRValue = roofRValue
      @roofUFactor = roofUFactor
      @roofFramingMaterial = roofFramingMaterial
      @roofFramingSpacing = roofFramingSpacing
      @roofFramingDepth = roofFramingDepth
      @roofFramingFactor = roofFramingFactor
      @roofSlope = roofSlope
      @radiantBarrier = radiantBarrier
      @roofExteriorSolarAbsorptance = roofExteriorSolarAbsorptance
      @roofExteriorSolarReflectanceIndex = roofExteriorSolarReflectanceIndex
      @roofExteriorThermalAbsorptance = roofExteriorThermalAbsorptance
      @quantity = quantity
      @yearInstalled = yearInstalled
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationSystemType
  #   fenestrationType - BuildingSync::FenestrationSystemType::FenestrationType
  #   fenestrationFrameMaterial - SOAP::SOAPString
  #   fenestrationOperation - SOAP::SOAPBoolean
  #   weatherstripped - SOAP::SOAPBoolean
  #   tightnessFitCondition - BuildingSync::Tightness
  #   glassType - SOAP::SOAPString
  #   fenestrationGasFill - SOAP::SOAPString
  #   fenestrationGlassLayers - SOAP::SOAPString
  #   fenestrationRValue - BuildingSync::FenestrationSystemType::FenestrationRValue
  #   fenestrationUFactor - BuildingSync::FenestrationSystemType::FenestrationUFactor
  #   solarHeatGainCoefficient - BuildingSync::FenestrationSystemType::SolarHeatGainCoefficient
  #   visibleTransmittance - BuildingSync::FenestrationSystemType::VisibleTransmittance
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class FenestrationSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: FenestrationType
    # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationType
    #   window - BuildingSync::FenestrationSystemType::FenestrationType::Window
    #   skylight - BuildingSync::FenestrationSystemType::FenestrationType::Skylight
    #   door - BuildingSync::FenestrationSystemType::FenestrationType::Door
    #   other - BuildingSync::OtherType
    class FenestrationType

      # inner class for member: Window
      # {http://buildingsync.net/schemas/bedes-auc/2019}Window
      #   windowLayout - SOAP::SOAPString
      #   windowOrientation - SOAP::SOAPString
      #   windowSillHeight - BuildingSync::FenestrationSystemType::FenestrationType::Window::WindowSillHeight
      #   assemblyType - SOAP::SOAPString
      #   windowHeight - BuildingSync::FenestrationSystemType::FenestrationType::Window::WindowHeight
      #   windowWidth - BuildingSync::FenestrationSystemType::FenestrationType::Window::WindowWidth
      #   windowHorizontalSpacing - BuildingSync::FenestrationSystemType::FenestrationType::Window::WindowHorizontalSpacing
      #   exteriorShadingType - SOAP::SOAPString
      #   overhangHeightAboveWindow - BuildingSync::FenestrationSystemType::FenestrationType::Window::OverhangHeightAboveWindow
      #   overhangProjection - BuildingSync::FenestrationSystemType::FenestrationType::Window::OverhangProjection
      #   verticalFinDepth - BuildingSync::FenestrationSystemType::FenestrationType::Window::VerticalFinDepth
      #   distanceBetweenVerticalFins - BuildingSync::FenestrationSystemType::FenestrationType::Window::DistanceBetweenVerticalFins
      #   verticalEdgeFinOnly - SOAP::SOAPBoolean
      #   lightShelves - BuildingSync::FenestrationSystemType::FenestrationType::Window::LightShelves
      #   interiorShadingType - SOAP::SOAPString
      class Window

        # inner class for member: WindowSillHeight
        # {http://buildingsync.net/schemas/bedes-auc/2019}WindowSillHeight
        #   xmlattr_Source - SOAP::SOAPString
        class WindowSillHeight < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: WindowHeight
        # {http://buildingsync.net/schemas/bedes-auc/2019}WindowHeight
        #   xmlattr_Source - SOAP::SOAPString
        class WindowHeight < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: WindowWidth
        # {http://buildingsync.net/schemas/bedes-auc/2019}WindowWidth
        #   xmlattr_Source - SOAP::SOAPString
        class WindowWidth < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: WindowHorizontalSpacing
        # {http://buildingsync.net/schemas/bedes-auc/2019}WindowHorizontalSpacing
        #   xmlattr_Source - SOAP::SOAPString
        class WindowHorizontalSpacing < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: OverhangHeightAboveWindow
        # {http://buildingsync.net/schemas/bedes-auc/2019}OverhangHeightAboveWindow
        #   xmlattr_Source - SOAP::SOAPString
        class OverhangHeightAboveWindow < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: OverhangProjection
        # {http://buildingsync.net/schemas/bedes-auc/2019}OverhangProjection
        #   xmlattr_Source - SOAP::SOAPString
        class OverhangProjection < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: VerticalFinDepth
        # {http://buildingsync.net/schemas/bedes-auc/2019}VerticalFinDepth
        #   xmlattr_Source - SOAP::SOAPString
        class VerticalFinDepth < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: DistanceBetweenVerticalFins
        # {http://buildingsync.net/schemas/bedes-auc/2019}DistanceBetweenVerticalFins
        #   xmlattr_Source - SOAP::SOAPString
        class DistanceBetweenVerticalFins < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        # inner class for member: LightShelves
        # {http://buildingsync.net/schemas/bedes-auc/2019}LightShelves
        #   lightShelfDistanceFromTop - BuildingSync::FenestrationSystemType::FenestrationType::Window::LightShelves::LightShelfDistanceFromTop
        #   lightShelfExteriorProtrusion - BuildingSync::FenestrationSystemType::FenestrationType::Window::LightShelves::LightShelfExteriorProtrusion
        #   lightShelfInteriorProtrusion - BuildingSync::FenestrationSystemType::FenestrationType::Window::LightShelves::LightShelfInteriorProtrusion
        class LightShelves

          # inner class for member: LightShelfDistanceFromTop
          # {http://buildingsync.net/schemas/bedes-auc/2019}LightShelfDistanceFromTop
          #   xmlattr_Source - SOAP::SOAPString
          class LightShelfDistanceFromTop < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          # inner class for member: LightShelfExteriorProtrusion
          # {http://buildingsync.net/schemas/bedes-auc/2019}LightShelfExteriorProtrusion
          #   xmlattr_Source - SOAP::SOAPString
          class LightShelfExteriorProtrusion < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          # inner class for member: LightShelfInteriorProtrusion
          # {http://buildingsync.net/schemas/bedes-auc/2019}LightShelfInteriorProtrusion
          #   xmlattr_Source - SOAP::SOAPString
          class LightShelfInteriorProtrusion < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          attr_accessor :lightShelfDistanceFromTop
          attr_accessor :lightShelfExteriorProtrusion
          attr_accessor :lightShelfInteriorProtrusion

          def initialize(lightShelfDistanceFromTop = nil, lightShelfExteriorProtrusion = nil, lightShelfInteriorProtrusion = nil)
            @lightShelfDistanceFromTop = lightShelfDistanceFromTop
            @lightShelfExteriorProtrusion = lightShelfExteriorProtrusion
            @lightShelfInteriorProtrusion = lightShelfInteriorProtrusion
          end
        end

        attr_accessor :windowLayout
        attr_accessor :windowOrientation
        attr_accessor :windowSillHeight
        attr_accessor :assemblyType
        attr_accessor :windowHeight
        attr_accessor :windowWidth
        attr_accessor :windowHorizontalSpacing
        attr_accessor :exteriorShadingType
        attr_accessor :overhangHeightAboveWindow
        attr_accessor :overhangProjection
        attr_accessor :verticalFinDepth
        attr_accessor :distanceBetweenVerticalFins
        attr_accessor :verticalEdgeFinOnly
        attr_accessor :lightShelves
        attr_accessor :interiorShadingType

        def initialize(windowLayout = nil, windowOrientation = nil, windowSillHeight = nil, assemblyType = nil, windowHeight = nil, windowWidth = nil, windowHorizontalSpacing = nil, exteriorShadingType = nil, overhangHeightAboveWindow = nil, overhangProjection = nil, verticalFinDepth = nil, distanceBetweenVerticalFins = nil, verticalEdgeFinOnly = nil, lightShelves = nil, interiorShadingType = nil)
          @windowLayout = windowLayout
          @windowOrientation = windowOrientation
          @windowSillHeight = windowSillHeight
          @assemblyType = assemblyType
          @windowHeight = windowHeight
          @windowWidth = windowWidth
          @windowHorizontalSpacing = windowHorizontalSpacing
          @exteriorShadingType = exteriorShadingType
          @overhangHeightAboveWindow = overhangHeightAboveWindow
          @overhangProjection = overhangProjection
          @verticalFinDepth = verticalFinDepth
          @distanceBetweenVerticalFins = distanceBetweenVerticalFins
          @verticalEdgeFinOnly = verticalEdgeFinOnly
          @lightShelves = lightShelves
          @interiorShadingType = interiorShadingType
        end
      end

      # inner class for member: Skylight
      # {http://buildingsync.net/schemas/bedes-auc/2019}Skylight
      #   skylightLayout - SOAP::SOAPString
      #   assemblyType - SOAP::SOAPString
      #   skylightPitch - BuildingSync::FenestrationSystemType::FenestrationType::Skylight::SkylightPitch
      #   skylightWindowTreatments - SOAP::SOAPString
      #   skylightSolarTube - SOAP::SOAPBoolean
      class Skylight

        # inner class for member: SkylightPitch
        # {http://buildingsync.net/schemas/bedes-auc/2019}SkylightPitch
        #   xmlattr_Source - SOAP::SOAPString
        class SkylightPitch < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :skylightLayout
        attr_accessor :assemblyType
        attr_accessor :skylightPitch
        attr_accessor :skylightWindowTreatments
        attr_accessor :skylightSolarTube

        def initialize(skylightLayout = nil, assemblyType = nil, skylightPitch = nil, skylightWindowTreatments = nil, skylightSolarTube = nil)
          @skylightLayout = skylightLayout
          @assemblyType = assemblyType
          @skylightPitch = skylightPitch
          @skylightWindowTreatments = skylightWindowTreatments
          @skylightSolarTube = skylightSolarTube
        end
      end

      # inner class for member: Door
      # {http://buildingsync.net/schemas/bedes-auc/2019}Door
      #   exteriorDoorType - SOAP::SOAPString
      #   vestibule - SOAP::SOAPBoolean
      #   doorOperation - SOAP::SOAPString
      #   doorGlazedAreaFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
      class Door
        attr_accessor :exteriorDoorType
        attr_accessor :vestibule
        attr_accessor :doorOperation
        attr_accessor :doorGlazedAreaFraction

        def initialize(exteriorDoorType = nil, vestibule = nil, doorOperation = nil, doorGlazedAreaFraction = nil)
          @exteriorDoorType = exteriorDoorType
          @vestibule = vestibule
          @doorOperation = doorOperation
          @doorGlazedAreaFraction = doorGlazedAreaFraction
        end
      end

      attr_accessor :window
      attr_accessor :skylight
      attr_accessor :door
      attr_accessor :other

      def initialize(window = nil, skylight = nil, door = nil, other = nil)
        @window = window
        @skylight = skylight
        @door = door
        @other = other
      end
    end

    # inner class for member: FenestrationRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationRValue
    #   xmlattr_Source - SOAP::SOAPString
    class FenestrationRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: FenestrationUFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationUFactor
    #   xmlattr_Source - SOAP::SOAPString
    class FenestrationUFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SolarHeatGainCoefficient
    # {http://buildingsync.net/schemas/bedes-auc/2019}SolarHeatGainCoefficient
    #   xmlattr_Source - SOAP::SOAPString
    class SolarHeatGainCoefficient < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: VisibleTransmittance
    # {http://buildingsync.net/schemas/bedes-auc/2019}VisibleTransmittance
    #   xmlattr_Source - SOAP::SOAPString
    class VisibleTransmittance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :fenestrationType
    attr_accessor :fenestrationFrameMaterial
    attr_accessor :fenestrationOperation
    attr_accessor :weatherstripped
    attr_accessor :tightnessFitCondition
    attr_accessor :glassType
    attr_accessor :fenestrationGasFill
    attr_accessor :fenestrationGlassLayers
    attr_accessor :fenestrationRValue
    attr_accessor :fenestrationUFactor
    attr_accessor :solarHeatGainCoefficient
    attr_accessor :visibleTransmittance
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(fenestrationType = nil, fenestrationFrameMaterial = nil, fenestrationOperation = nil, weatherstripped = nil, tightnessFitCondition = nil, glassType = nil, fenestrationGasFill = nil, fenestrationGlassLayers = nil, fenestrationRValue = nil, fenestrationUFactor = nil, solarHeatGainCoefficient = nil, visibleTransmittance = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, manufacturer = nil, modelNumber = nil, userDefinedFields = nil)
      @fenestrationType = fenestrationType
      @fenestrationFrameMaterial = fenestrationFrameMaterial
      @fenestrationOperation = fenestrationOperation
      @weatherstripped = weatherstripped
      @tightnessFitCondition = tightnessFitCondition
      @glassType = glassType
      @fenestrationGasFill = fenestrationGasFill
      @fenestrationGlassLayers = fenestrationGlassLayers
      @fenestrationRValue = fenestrationRValue
      @fenestrationUFactor = fenestrationUFactor
      @solarHeatGainCoefficient = solarHeatGainCoefficient
      @visibleTransmittance = visibleTransmittance
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorSystemType
  #   exteriorFloorConstruction - BuildingSync::EnvelopeConstructionType
  #   exteriorFloorFinish - BuildingSync::Finish
  #   exteriorFloorColor - BuildingSync::Color
  #   exteriorFloorRValue - BuildingSync::ExteriorFloorSystemType::ExteriorFloorRValue
  #   exteriorFloorUFactor - BuildingSync::ExteriorFloorSystemType::ExteriorFloorUFactor
  #   exteriorFloorFramingMaterial - BuildingSync::FramingMaterial
  #   exteriorFloorFramingSpacing - BuildingSync::ExteriorFloorSystemType::ExteriorFloorFramingSpacing
  #   exteriorFloorFramingDepth - BuildingSync::ExteriorFloorSystemType::ExteriorFloorFramingDepth
  #   exteriorFloorFramingFactor - BuildingSync::ExteriorFloorSystemType::ExteriorFloorFramingFactor
  #   exteriorFloorExteriorSolarAbsorptance - BuildingSync::ExteriorFloorSystemType::ExteriorFloorExteriorSolarAbsorptance
  #   exteriorFloorExteriorThermalAbsorptance - BuildingSync::ExteriorFloorSystemType::ExteriorFloorExteriorThermalAbsorptance
  #   interiorVisibleAbsorptance - BuildingSync::InteriorVisibleAbsorptance
  #   exteriorRoughness - BuildingSync::ExteriorRoughnessType
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class ExteriorFloorSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: ExteriorFloorRValue
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorRValue
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorRValue < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorUFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorUFactor
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorUFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorFramingSpacing
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorFramingSpacing
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorFramingSpacing < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorFramingDepth
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorFramingDepth
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorFramingDepth < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorFramingFactor
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorFramingFactor
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorFramingFactor < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorExteriorSolarAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorExteriorSolarAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorExteriorSolarAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ExteriorFloorExteriorThermalAbsorptance
    # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorExteriorThermalAbsorptance
    #   xmlattr_Source - SOAP::SOAPString
    class ExteriorFloorExteriorThermalAbsorptance < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :exteriorFloorConstruction
    attr_accessor :exteriorFloorFinish
    attr_accessor :exteriorFloorColor
    attr_accessor :exteriorFloorRValue
    attr_accessor :exteriorFloorUFactor
    attr_accessor :exteriorFloorFramingMaterial
    attr_accessor :exteriorFloorFramingSpacing
    attr_accessor :exteriorFloorFramingDepth
    attr_accessor :exteriorFloorFramingFactor
    attr_accessor :exteriorFloorExteriorSolarAbsorptance
    attr_accessor :exteriorFloorExteriorThermalAbsorptance
    attr_accessor :interiorVisibleAbsorptance
    attr_accessor :exteriorRoughness
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(exteriorFloorConstruction = nil, exteriorFloorFinish = nil, exteriorFloorColor = nil, exteriorFloorRValue = nil, exteriorFloorUFactor = nil, exteriorFloorFramingMaterial = nil, exteriorFloorFramingSpacing = nil, exteriorFloorFramingDepth = nil, exteriorFloorFramingFactor = nil, exteriorFloorExteriorSolarAbsorptance = nil, exteriorFloorExteriorThermalAbsorptance = nil, interiorVisibleAbsorptance = nil, exteriorRoughness = nil, quantity = nil, yearInstalled = nil, userDefinedFields = nil)
      @exteriorFloorConstruction = exteriorFloorConstruction
      @exteriorFloorFinish = exteriorFloorFinish
      @exteriorFloorColor = exteriorFloorColor
      @exteriorFloorRValue = exteriorFloorRValue
      @exteriorFloorUFactor = exteriorFloorUFactor
      @exteriorFloorFramingMaterial = exteriorFloorFramingMaterial
      @exteriorFloorFramingSpacing = exteriorFloorFramingSpacing
      @exteriorFloorFramingDepth = exteriorFloorFramingDepth
      @exteriorFloorFramingFactor = exteriorFloorFramingFactor
      @exteriorFloorExteriorSolarAbsorptance = exteriorFloorExteriorSolarAbsorptance
      @exteriorFloorExteriorThermalAbsorptance = exteriorFloorExteriorThermalAbsorptance
      @interiorVisibleAbsorptance = interiorVisibleAbsorptance
      @exteriorRoughness = exteriorRoughness
      @quantity = quantity
      @yearInstalled = yearInstalled
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationSystemType
  #   groundCouplings - BuildingSync::FoundationSystemType::GroundCouplings
  #   floorCovering - SOAP::SOAPString
  #   floorConstructionType - BuildingSync::EnvelopeConstructionType
  #   plumbingPenetrationSealing - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class FoundationSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: GroundCouplings
    # {http://buildingsync.net/schemas/bedes-auc/2019}GroundCouplings
    class GroundCouplings < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}GroundCoupling
      #   slabOnGrade - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::SlabOnGrade
      #   crawlspace - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace
      #   basement - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Basement
      #   other - BuildingSync::OtherType
      #   unknown - BuildingSync::UnknownType
      class GroundCoupling

        # inner class for member: SlabOnGrade
        # {http://buildingsync.net/schemas/bedes-auc/2019}SlabOnGrade
        #   slabInsulationOrientation - SOAP::SOAPString
        #   slabArea - BuildingSync::SlabArea
        #   slabPerimeter - BuildingSync::SlabPerimeter
        #   slabExposedPerimeter - BuildingSync::SlabExposedPerimeter
        #   slabInsulationThickness - BuildingSync::SlabInsulationThickness
        #   slabRValue - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::SlabOnGrade::SlabRValue
        #   slabUFactor - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::SlabOnGrade::SlabUFactor
        #   slabInsulationCondition - BuildingSync::InsulationCondition
        #   slabHeating - SOAP::SOAPString
        class SlabOnGrade

          # inner class for member: SlabRValue
          # {http://buildingsync.net/schemas/bedes-auc/2019}SlabRValue
          #   xmlattr_Source - SOAP::SOAPString
          class SlabRValue < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          # inner class for member: SlabUFactor
          # {http://buildingsync.net/schemas/bedes-auc/2019}SlabUFactor
          #   xmlattr_Source - SOAP::SOAPString
          class SlabUFactor < ::String
            AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

            def __xmlattr
              @__xmlattr ||= {}
            end

            def xmlattr_Source
              __xmlattr[AttrSource]
            end

            def xmlattr_Source=(value)
              __xmlattr[AttrSource] = value
            end

            def initialize(*arg)
              super
              @__xmlattr = {}
            end
          end

          attr_accessor :slabInsulationOrientation
          attr_accessor :slabArea
          attr_accessor :slabPerimeter
          attr_accessor :slabExposedPerimeter
          attr_accessor :slabInsulationThickness
          attr_accessor :slabRValue
          attr_accessor :slabUFactor
          attr_accessor :slabInsulationCondition
          attr_accessor :slabHeating

          def initialize(slabInsulationOrientation = nil, slabArea = nil, slabPerimeter = nil, slabExposedPerimeter = nil, slabInsulationThickness = nil, slabRValue = nil, slabUFactor = nil, slabInsulationCondition = nil, slabHeating = nil)
            @slabInsulationOrientation = slabInsulationOrientation
            @slabArea = slabArea
            @slabPerimeter = slabPerimeter
            @slabExposedPerimeter = slabExposedPerimeter
            @slabInsulationThickness = slabInsulationThickness
            @slabRValue = slabRValue
            @slabUFactor = slabUFactor
            @slabInsulationCondition = slabInsulationCondition
            @slabHeating = slabHeating
          end
        end

        # inner class for member: Crawlspace
        # {http://buildingsync.net/schemas/bedes-auc/2019}Crawlspace
        #   crawlspaceVenting - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting
        class Crawlspace

          # inner class for member: CrawlspaceVenting
          # {http://buildingsync.net/schemas/bedes-auc/2019}CrawlspaceVenting
          #   ventilated - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated
          #   unventilated - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Unventilated
          #   other - BuildingSync::OtherType
          #   unknown - BuildingSync::UnknownType
          class CrawlspaceVenting

            # inner class for member: Ventilated
            # {http://buildingsync.net/schemas/bedes-auc/2019}Ventilated
            #   floorInsulationThickness - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorInsulationThickness
            #   floorInsulationCondition - BuildingSync::InsulationCondition
            #   floorRValue - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorRValue
            #   floorUFactor - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorUFactor
            #   floorFramingSpacing - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorFramingSpacing
            #   floorFramingDepth - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorFramingDepth
            #   floorFramingFactor - BuildingSync::FoundationSystemType::GroundCouplings::GroundCoupling::Crawlspace::CrawlspaceVenting::Ventilated::FloorFramingFactor
            class Ventilated

              # inner class for member: FloorInsulationThickness
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorInsulationThickness
              #   xmlattr_Source - SOAP::SOAPString
              class FloorInsulationThickness < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: FloorRValue
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorRValue
              #   xmlattr_Source - SOAP::SOAPString
              class FloorRValue < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: FloorUFactor
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorUFactor
              #   xmlattr_Source - SOAP::SOAPString
              class FloorUFactor < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: FloorFramingSpacing
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorFramingSpacing
              #   xmlattr_Source - SOAP::SOAPString
              class FloorFramingSpacing < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: FloorFramingDepth
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorFramingDepth
              #   xmlattr_Source - SOAP::SOAPString
              class FloorFramingDepth < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              # inner class for member: FloorFramingFactor
              # {http://buildingsync.net/schemas/bedes-auc/2019}FloorFramingFactor
              #   xmlattr_Source - SOAP::SOAPString
              class FloorFramingFactor < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              attr_accessor :floorInsulationThickness
              attr_accessor :floorInsulationCondition
              attr_accessor :floorRValue
              attr_accessor :floorUFactor
              attr_accessor :floorFramingSpacing
              attr_accessor :floorFramingDepth
              attr_accessor :floorFramingFactor

              def initialize(floorInsulationThickness = nil, floorInsulationCondition = nil, floorRValue = nil, floorUFactor = nil, floorFramingSpacing = nil, floorFramingDepth = nil, floorFramingFactor = nil)
                @floorInsulationThickness = floorInsulationThickness
                @floorInsulationCondition = floorInsulationCondition
                @floorRValue = floorRValue
                @floorUFactor = floorUFactor
                @floorFramingSpacing = floorFramingSpacing
                @floorFramingDepth = floorFramingDepth
                @floorFramingFactor = floorFramingFactor
              end
            end

            # inner class for member: Unventilated
            # {http://buildingsync.net/schemas/bedes-auc/2019}Unventilated
            #   foundationWallConstruction - BuildingSync::EnvelopeConstructionType
            #   foundationHeightAboveGrade - BuildingSync::FoundationHeightAboveGrade
            #   foundationWallInsulationThickness - BuildingSync::FoundationWallInsulationThickness
            #   foundationWallRValue - BuildingSync::FoundationWallRValue
            #   foundationWallUFactor - BuildingSync::FoundationWallUFactor
            #   foundationWallInsulationContinuity - SOAP::SOAPString
            #   foundationWallInsulationCondition - BuildingSync::InsulationCondition
            class Unventilated
              attr_accessor :foundationWallConstruction
              attr_accessor :foundationHeightAboveGrade
              attr_accessor :foundationWallInsulationThickness
              attr_accessor :foundationWallRValue
              attr_accessor :foundationWallUFactor
              attr_accessor :foundationWallInsulationContinuity
              attr_accessor :foundationWallInsulationCondition

              def initialize(foundationWallConstruction = nil, foundationHeightAboveGrade = nil, foundationWallInsulationThickness = nil, foundationWallRValue = nil, foundationWallUFactor = nil, foundationWallInsulationContinuity = nil, foundationWallInsulationCondition = nil)
                @foundationWallConstruction = foundationWallConstruction
                @foundationHeightAboveGrade = foundationHeightAboveGrade
                @foundationWallInsulationThickness = foundationWallInsulationThickness
                @foundationWallRValue = foundationWallRValue
                @foundationWallUFactor = foundationWallUFactor
                @foundationWallInsulationContinuity = foundationWallInsulationContinuity
                @foundationWallInsulationCondition = foundationWallInsulationCondition
              end
            end

            attr_accessor :ventilated
            attr_accessor :unventilated
            attr_accessor :other
            attr_accessor :unknown

            def initialize(ventilated = nil, unventilated = nil, other = nil, unknown = nil)
              @ventilated = ventilated
              @unventilated = unventilated
              @other = other
              @unknown = unknown
            end
          end

          attr_accessor :crawlspaceVenting

          def initialize(crawlspaceVenting = nil)
            @crawlspaceVenting = crawlspaceVenting
          end
        end

        # inner class for member: Basement
        # {http://buildingsync.net/schemas/bedes-auc/2019}Basement
        #   basementConditioning - SOAP::SOAPString
        #   foundationWallConstruction - BuildingSync::EnvelopeConstructionType
        #   foundationHeightAboveGrade - BuildingSync::FoundationHeightAboveGrade
        #   foundationWallInsulationThickness - BuildingSync::FoundationWallInsulationThickness
        #   foundationWallRValue - BuildingSync::FoundationWallRValue
        #   foundationWallUFactor - BuildingSync::FoundationWallUFactor
        #   foundationWallInsulationContinuity - SOAP::SOAPString
        #   foundationWallInsulationCondition - BuildingSync::InsulationCondition
        #   slabInsulationOrientation - SOAP::SOAPString
        #   slabArea - BuildingSync::SlabArea
        #   slabPerimeter - BuildingSync::SlabPerimeter
        #   slabExposedPerimeter - BuildingSync::SlabExposedPerimeter
        #   slabInsulationThickness - BuildingSync::SlabInsulationThickness
        #   slabInsulationCondition - BuildingSync::InsulationCondition
        #   slabHeating - SOAP::SOAPString
        class Basement
          attr_accessor :basementConditioning
          attr_accessor :foundationWallConstruction
          attr_accessor :foundationHeightAboveGrade
          attr_accessor :foundationWallInsulationThickness
          attr_accessor :foundationWallRValue
          attr_accessor :foundationWallUFactor
          attr_accessor :foundationWallInsulationContinuity
          attr_accessor :foundationWallInsulationCondition
          attr_accessor :slabInsulationOrientation
          attr_accessor :slabArea
          attr_accessor :slabPerimeter
          attr_accessor :slabExposedPerimeter
          attr_accessor :slabInsulationThickness
          attr_accessor :slabInsulationCondition
          attr_accessor :slabHeating

          def initialize(basementConditioning = nil, foundationWallConstruction = nil, foundationHeightAboveGrade = nil, foundationWallInsulationThickness = nil, foundationWallRValue = nil, foundationWallUFactor = nil, foundationWallInsulationContinuity = nil, foundationWallInsulationCondition = nil, slabInsulationOrientation = nil, slabArea = nil, slabPerimeter = nil, slabExposedPerimeter = nil, slabInsulationThickness = nil, slabInsulationCondition = nil, slabHeating = nil)
            @basementConditioning = basementConditioning
            @foundationWallConstruction = foundationWallConstruction
            @foundationHeightAboveGrade = foundationHeightAboveGrade
            @foundationWallInsulationThickness = foundationWallInsulationThickness
            @foundationWallRValue = foundationWallRValue
            @foundationWallUFactor = foundationWallUFactor
            @foundationWallInsulationContinuity = foundationWallInsulationContinuity
            @foundationWallInsulationCondition = foundationWallInsulationCondition
            @slabInsulationOrientation = slabInsulationOrientation
            @slabArea = slabArea
            @slabPerimeter = slabPerimeter
            @slabExposedPerimeter = slabExposedPerimeter
            @slabInsulationThickness = slabInsulationThickness
            @slabInsulationCondition = slabInsulationCondition
            @slabHeating = slabHeating
          end
        end

        attr_accessor :slabOnGrade
        attr_accessor :crawlspace
        attr_accessor :basement
        attr_accessor :other
        attr_accessor :unknown

        def initialize(slabOnGrade = nil, crawlspace = nil, basement = nil, other = nil, unknown = nil)
          @slabOnGrade = slabOnGrade
          @crawlspace = crawlspace
          @basement = basement
          @other = other
          @unknown = unknown
        end
      end
    end

    attr_accessor :groundCouplings
    attr_accessor :floorCovering
    attr_accessor :floorConstructionType
    attr_accessor :plumbingPenetrationSealing
    attr_accessor :yearInstalled
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(groundCouplings = nil, floorCovering = nil, floorConstructionType = nil, plumbingPenetrationSealing = nil, yearInstalled = nil, userDefinedFields = nil, quantity = nil)
      @groundCouplings = groundCouplings
      @floorCovering = floorCovering
      @floorConstructionType = floorConstructionType
      @plumbingPenetrationSealing = plumbingPenetrationSealing
      @yearInstalled = yearInstalled
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CriticalITSystemType
  #   iTSystemType - SOAP::SOAPString
  #   iTPeakPower - BuildingSync::CriticalITSystemType::ITPeakPower
  #   iTStandbyPower - BuildingSync::CriticalITSystemType::ITStandbyPower
  #   iTNominalPower - BuildingSync::CriticalITSystemType::ITNominalPower
  #   controls - BuildingSync::CriticalITSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class CriticalITSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: ITPeakPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ITPeakPower
    #   xmlattr_Source - SOAP::SOAPString
    class ITPeakPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ITStandbyPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ITStandbyPower
    #   xmlattr_Source - SOAP::SOAPString
    class ITStandbyPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ITNominalPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ITNominalPower
    #   xmlattr_Source - SOAP::SOAPString
    class ITNominalPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :iTSystemType
    attr_accessor :iTPeakPower
    attr_accessor :iTStandbyPower
    attr_accessor :iTNominalPower
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(iTSystemType = nil, iTPeakPower = nil, iTStandbyPower = nil, iTNominalPower = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @iTSystemType = iTSystemType
      @iTPeakPower = iTPeakPower
      @iTStandbyPower = iTStandbyPower
      @iTNominalPower = iTNominalPower
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PlugElectricLoadType
  #   plugLoadType - SOAP::SOAPString
  #   plugLoadPeakPower - BuildingSync::PlugElectricLoadType::PlugLoadPeakPower
  #   plugLoadStandbyPower - BuildingSync::PlugElectricLoadType::PlugLoadStandbyPower
  #   plugLoadNominalPower - BuildingSync::PlugElectricLoadType::PlugLoadNominalPower
  #   weightedAverageLoad - BuildingSync::WeightedAverageLoad
  #   controls - BuildingSync::PlugElectricLoadType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Source - SOAP::SOAPString
  #   xmlattr_Status - SOAP::SOAPString
  class PlugElectricLoadType
    AttrID = XSD::QName.new(nil, "ID")
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: PlugLoadPeakPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}PlugLoadPeakPower
    #   xmlattr_Source - SOAP::SOAPString
    class PlugLoadPeakPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PlugLoadStandbyPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}PlugLoadStandbyPower
    #   xmlattr_Source - SOAP::SOAPString
    class PlugLoadStandbyPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PlugLoadNominalPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}PlugLoadNominalPower
    #   xmlattr_Source - SOAP::SOAPString
    class PlugLoadNominalPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :plugLoadType
    attr_accessor :plugLoadPeakPower
    attr_accessor :plugLoadStandbyPower
    attr_accessor :plugLoadNominalPower
    attr_accessor :weightedAverageLoad
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(plugLoadType = nil, plugLoadPeakPower = nil, plugLoadStandbyPower = nil, plugLoadNominalPower = nil, weightedAverageLoad = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @plugLoadType = plugLoadType
      @plugLoadPeakPower = plugLoadPeakPower
      @plugLoadStandbyPower = plugLoadStandbyPower
      @plugLoadNominalPower = plugLoadNominalPower
      @weightedAverageLoad = weightedAverageLoad
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ProcessGasElectricLoadType
  #   processLoadType - SOAP::SOAPString
  #   processLoadPeakPower - BuildingSync::ProcessGasElectricLoadType::ProcessLoadPeakPower
  #   processLoadStandbyPower - BuildingSync::ProcessGasElectricLoadType::ProcessLoadStandbyPower
  #   weightedAverageLoad - BuildingSync::WeightedAverageLoad
  #   heatGainFraction - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   dutyCycle - BuildingSync::DutyCycle
  #   controls - BuildingSync::ProcessGasElectricLoadType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Source - SOAP::SOAPString
  #   xmlattr_Status - SOAP::SOAPString
  class ProcessGasElectricLoadType
    AttrID = XSD::QName.new(nil, "ID")
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: ProcessLoadPeakPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ProcessLoadPeakPower
    #   xmlattr_Source - SOAP::SOAPString
    class ProcessLoadPeakPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ProcessLoadStandbyPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ProcessLoadStandbyPower
    #   xmlattr_Source - SOAP::SOAPString
    class ProcessLoadStandbyPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :processLoadType
    attr_accessor :processLoadPeakPower
    attr_accessor :processLoadStandbyPower
    attr_accessor :weightedAverageLoad
    attr_accessor :heatGainFraction
    attr_accessor :dutyCycle
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(processLoadType = nil, processLoadPeakPower = nil, processLoadStandbyPower = nil, weightedAverageLoad = nil, heatGainFraction = nil, dutyCycle = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @processLoadType = processLoadType
      @processLoadPeakPower = processLoadPeakPower
      @processLoadStandbyPower = processLoadStandbyPower
      @weightedAverageLoad = weightedAverageLoad
      @heatGainFraction = heatGainFraction
      @dutyCycle = dutyCycle
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ConveyanceSystemType
  #   conveyanceSystemType - SOAP::SOAPString
  #   conveyanceLoadType - SOAP::SOAPString
  #   conveyancePeakPower - BuildingSync::ConveyanceSystemType::ConveyancePeakPower
  #   conveyanceStandbyPower - BuildingSync::ConveyanceSystemType::ConveyanceStandbyPower
  #   controls - BuildingSync::ConveyanceSystemType::Controls
  #   conveyanceSystemCondition - BuildingSync::EquipmentCondition
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   primaryFuel - BuildingSync::FuelTypes
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class ConveyanceSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: ConveyancePeakPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ConveyancePeakPower
    #   xmlattr_Source - SOAP::SOAPString
    class ConveyancePeakPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: ConveyanceStandbyPower
    # {http://buildingsync.net/schemas/bedes-auc/2019}ConveyanceStandbyPower
    #   xmlattr_Source - SOAP::SOAPString
    class ConveyanceStandbyPower < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :conveyanceSystemType
    attr_accessor :conveyanceLoadType
    attr_accessor :conveyancePeakPower
    attr_accessor :conveyanceStandbyPower
    attr_accessor :controls
    attr_accessor :conveyanceSystemCondition
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :primaryFuel
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(conveyanceSystemType = nil, conveyanceLoadType = nil, conveyancePeakPower = nil, conveyanceStandbyPower = nil, controls = nil, conveyanceSystemCondition = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, yearOfManufacture = nil, primaryFuel = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil)
      @conveyanceSystemType = conveyanceSystemType
      @conveyanceLoadType = conveyanceLoadType
      @conveyancePeakPower = conveyancePeakPower
      @conveyanceStandbyPower = conveyanceStandbyPower
      @controls = controls
      @conveyanceSystemCondition = conveyanceSystemCondition
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @primaryFuel = primaryFuel
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OnsiteStorageTransmissionGenerationSystemType
  #   averageAnnualOperatingHours - SOAP::SOAPDecimal
  #   energyConversionType - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType
  #   backupGenerator - SOAP::SOAPBoolean
  #   demandReduction - SOAP::SOAPBoolean
  #   capacity - BuildingSync::Capacity
  #   capacityUnits - SOAP::SOAPString
  #   controls - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::Controls
  #   thirdPartyCertification - SOAP::SOAPString
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class OnsiteStorageTransmissionGenerationSystemType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: EnergyConversionType
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyConversionType
    #   storage - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Storage
    #   generation - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation
    class EnergyConversionType

      # inner class for member: Storage
      # {http://buildingsync.net/schemas/bedes-auc/2019}Storage
      #   energyStorageTechnology - SOAP::SOAPString
      #   thermalMedium - SOAP::SOAPString
      class Storage
        attr_accessor :energyStorageTechnology
        attr_accessor :thermalMedium

        def initialize(energyStorageTechnology = nil, thermalMedium = nil)
          @energyStorageTechnology = energyStorageTechnology
          @thermalMedium = thermalMedium
        end
      end

      # inner class for member: Generation
      # {http://buildingsync.net/schemas/bedes-auc/2019}Generation
      #   onsiteGenerationType - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType
      #   externalPowerSupply - SOAP::SOAPString
      class Generation

        # inner class for member: OnsiteGenerationType
        # {http://buildingsync.net/schemas/bedes-auc/2019}OnsiteGenerationType
        #   pV - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV
        #   other - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::Other
        class OnsiteGenerationType

          # inner class for member: PV
          # {http://buildingsync.net/schemas/bedes-auc/2019}PV
          #   photovoltaicSystemNumberOfModulesPerArray - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemNumberOfModulesPerArray
          #   photovoltaicSystemNumberOfArrays - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemNumberOfArrays
          #   photovoltaicSystemMaximumPowerOutput - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemMaximumPowerOutput
          #   photovoltaicSystemInverterEfficiency - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemInverterEfficiency
          #   photovoltaicSystemArrayAzimuth - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemArrayAzimuth
          #   photovoltaicSystemRackingSystemTiltAngleMin - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemRackingSystemTiltAngleMin
          #   photovoltaicSystemRackingSystemTiltAngleMax - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicSystemRackingSystemTiltAngleMax
          #   photovoltaicSystemLocation - SOAP::SOAPString
          #   photovoltaicModuleRatedPower - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicModuleRatedPower
          #   photovoltaicModuleLength - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicModuleLength
          #   photovoltaicModuleWidth - BuildingSync::OnsiteStorageTransmissionGenerationSystemType::EnergyConversionType::Generation::OnsiteGenerationType::PV::PhotovoltaicModuleWidth
          class PV

            # inner class for member: PhotovoltaicSystemNumberOfModulesPerArray
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemNumberOfModulesPerArray
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemNumberOfModulesPerArray < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemNumberOfArrays
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemNumberOfArrays
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemNumberOfArrays < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemMaximumPowerOutput
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemMaximumPowerOutput
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemMaximumPowerOutput < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemInverterEfficiency
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemInverterEfficiency
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemInverterEfficiency < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemArrayAzimuth
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemArrayAzimuth
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemArrayAzimuth < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemRackingSystemTiltAngleMin
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemRackingSystemTiltAngleMin
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemRackingSystemTiltAngleMin < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicSystemRackingSystemTiltAngleMax
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicSystemRackingSystemTiltAngleMax
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicSystemRackingSystemTiltAngleMax < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicModuleRatedPower
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicModuleRatedPower
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicModuleRatedPower < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicModuleLength
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicModuleLength
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicModuleLength < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            # inner class for member: PhotovoltaicModuleWidth
            # {http://buildingsync.net/schemas/bedes-auc/2019}PhotovoltaicModuleWidth
            #   xmlattr_Source - SOAP::SOAPString
            class PhotovoltaicModuleWidth < ::String
              AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_Source
                __xmlattr[AttrSource]
              end

              def xmlattr_Source=(value)
                __xmlattr[AttrSource] = value
              end

              def initialize(*arg)
                super
                @__xmlattr = {}
              end
            end

            attr_accessor :photovoltaicSystemNumberOfModulesPerArray
            attr_accessor :photovoltaicSystemNumberOfArrays
            attr_accessor :photovoltaicSystemMaximumPowerOutput
            attr_accessor :photovoltaicSystemInverterEfficiency
            attr_accessor :photovoltaicSystemArrayAzimuth
            attr_accessor :photovoltaicSystemRackingSystemTiltAngleMin
            attr_accessor :photovoltaicSystemRackingSystemTiltAngleMax
            attr_accessor :photovoltaicSystemLocation
            attr_accessor :photovoltaicModuleRatedPower
            attr_accessor :photovoltaicModuleLength
            attr_accessor :photovoltaicModuleWidth

            def initialize(photovoltaicSystemNumberOfModulesPerArray = nil, photovoltaicSystemNumberOfArrays = nil, photovoltaicSystemMaximumPowerOutput = nil, photovoltaicSystemInverterEfficiency = nil, photovoltaicSystemArrayAzimuth = nil, photovoltaicSystemRackingSystemTiltAngleMin = nil, photovoltaicSystemRackingSystemTiltAngleMax = nil, photovoltaicSystemLocation = nil, photovoltaicModuleRatedPower = nil, photovoltaicModuleLength = nil, photovoltaicModuleWidth = nil)
              @photovoltaicSystemNumberOfModulesPerArray = photovoltaicSystemNumberOfModulesPerArray
              @photovoltaicSystemNumberOfArrays = photovoltaicSystemNumberOfArrays
              @photovoltaicSystemMaximumPowerOutput = photovoltaicSystemMaximumPowerOutput
              @photovoltaicSystemInverterEfficiency = photovoltaicSystemInverterEfficiency
              @photovoltaicSystemArrayAzimuth = photovoltaicSystemArrayAzimuth
              @photovoltaicSystemRackingSystemTiltAngleMin = photovoltaicSystemRackingSystemTiltAngleMin
              @photovoltaicSystemRackingSystemTiltAngleMax = photovoltaicSystemRackingSystemTiltAngleMax
              @photovoltaicSystemLocation = photovoltaicSystemLocation
              @photovoltaicModuleRatedPower = photovoltaicModuleRatedPower
              @photovoltaicModuleLength = photovoltaicModuleLength
              @photovoltaicModuleWidth = photovoltaicModuleWidth
            end
          end

          # inner class for member: Other
          # {http://buildingsync.net/schemas/bedes-auc/2019}Other
          #   otherEnergyGenerationTechnology - SOAP::SOAPString
          #   outputResourceType - BuildingSync::FuelTypes
          class Other
            attr_accessor :otherEnergyGenerationTechnology
            attr_accessor :outputResourceType

            def initialize(otherEnergyGenerationTechnology = nil, outputResourceType = nil)
              @otherEnergyGenerationTechnology = otherEnergyGenerationTechnology
              @outputResourceType = outputResourceType
            end
          end

          attr_accessor :pV
          attr_accessor :other

          def initialize(pV = nil, other = nil)
            @pV = pV
            @other = other
          end
        end

        attr_accessor :onsiteGenerationType
        attr_accessor :externalPowerSupply

        def initialize(onsiteGenerationType = nil, externalPowerSupply = nil)
          @onsiteGenerationType = onsiteGenerationType
          @externalPowerSupply = externalPowerSupply
        end
      end

      attr_accessor :storage
      attr_accessor :generation

      def initialize(storage = nil, generation = nil)
        @storage = storage
        @generation = generation
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :averageAnnualOperatingHours
    attr_accessor :energyConversionType
    attr_accessor :backupGenerator
    attr_accessor :demandReduction
    attr_accessor :capacity
    attr_accessor :capacityUnits
    attr_accessor :controls
    attr_accessor :thirdPartyCertification
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(averageAnnualOperatingHours = nil, energyConversionType = nil, backupGenerator = nil, demandReduction = nil, capacity = nil, capacityUnits = nil, controls = nil, thirdPartyCertification = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @averageAnnualOperatingHours = averageAnnualOperatingHours
      @energyConversionType = energyConversionType
      @backupGenerator = backupGenerator
      @demandReduction = demandReduction
      @capacity = capacity
      @capacityUnits = capacityUnits
      @controls = controls
      @thirdPartyCertification = thirdPartyCertification
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PoolType
  #   poolType - SOAP::SOAPString
  #   poolSizeCategory - SOAP::SOAPString
  #   poolArea - BuildingSync::PoolType::PoolArea
  #   poolVolume - BuildingSync::PoolType::PoolVolume
  #   pumpDutyCycle - BuildingSync::PoolType::PumpDutyCycle
  #   heated - BuildingSync::PoolType::Heated
  #   thirdPartyCertification - SOAP::SOAPString
  #   quantity - BuildingSync::Quantity
  #   yearInstalled - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class PoolType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: PoolArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}PoolArea
    #   xmlattr_Source - SOAP::SOAPString
    class PoolArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PoolVolume
    # {http://buildingsync.net/schemas/bedes-auc/2019}PoolVolume
    #   xmlattr_Source - SOAP::SOAPString
    class PoolVolume < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: PumpDutyCycle
    # {http://buildingsync.net/schemas/bedes-auc/2019}PumpDutyCycle
    #   xmlattr_Source - SOAP::SOAPString
    class PumpDutyCycle < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Heated
    # {http://buildingsync.net/schemas/bedes-auc/2019}Heated
    #   primaryFuel - BuildingSync::FuelTypes
    #   waterTemperature - BuildingSync::PoolType::Heated::WaterTemperature
    #   hoursUncovered - BuildingSync::PoolType::Heated::HoursUncovered
    #   controls - BuildingSync::PoolType::Heated::Controls
    class Heated

      # inner class for member: WaterTemperature
      # {http://buildingsync.net/schemas/bedes-auc/2019}WaterTemperature
      #   xmlattr_Source - SOAP::SOAPString
      class WaterTemperature < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: HoursUncovered
      # {http://buildingsync.net/schemas/bedes-auc/2019}HoursUncovered
      #   xmlattr_Source - SOAP::SOAPString
      class HoursUncovered < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: Controls
      # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
      class Controls < ::Array
      end

      attr_accessor :primaryFuel
      attr_accessor :waterTemperature
      attr_accessor :hoursUncovered
      attr_accessor :controls

      def initialize(primaryFuel = nil, waterTemperature = nil, hoursUncovered = nil, controls = nil)
        @primaryFuel = primaryFuel
        @waterTemperature = waterTemperature
        @hoursUncovered = hoursUncovered
        @controls = controls
      end
    end

    attr_accessor :poolType
    attr_accessor :poolSizeCategory
    attr_accessor :poolArea
    attr_accessor :poolVolume
    attr_accessor :pumpDutyCycle
    attr_accessor :heated
    attr_accessor :thirdPartyCertification
    attr_accessor :quantity
    attr_accessor :yearInstalled
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(poolType = nil, poolSizeCategory = nil, poolArea = nil, poolVolume = nil, pumpDutyCycle = nil, heated = nil, thirdPartyCertification = nil, quantity = nil, yearInstalled = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil)
      @poolType = poolType
      @poolSizeCategory = poolSizeCategory
      @poolArea = poolArea
      @poolVolume = poolVolume
      @pumpDutyCycle = pumpDutyCycle
      @heated = heated
      @thirdPartyCertification = thirdPartyCertification
      @quantity = quantity
      @yearInstalled = yearInstalled
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterUseType
  #   waterUseType - SOAP::SOAPString
  #   waterResource - SOAP::SOAPString
  #   lowFlowFixtures - SOAP::SOAPBoolean
  #   waterFixtureRatedFlowRate - BuildingSync::WaterUseType::WaterFixtureRatedFlowRate
  #   waterFixtureVolumePerCycle - BuildingSync::WaterUseType::WaterFixtureVolumePerCycle
  #   waterFixtureCyclesPerDay - BuildingSync::WaterUseType::WaterFixtureCyclesPerDay
  #   waterFixtureFractionHotWater - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   thirdPartyCertification - SOAP::SOAPString
  #   controls - BuildingSync::WaterUseType::Controls
  #   yearInstalled - SOAP::SOAPGYear
  #   yearOfManufacture - SOAP::SOAPGYear
  #   manufacturer - SOAP::SOAPString
  #   modelNumber - SOAP::SOAPString
  #   location - SOAP::SOAPString
  #   linkedPremises - BuildingSync::LinkedPremises
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   quantity - BuildingSync::Quantity
  #   xmlattr_ID - SOAP::SOAPID
  #   xmlattr_Status - SOAP::SOAPString
  class WaterUseType
    AttrID = XSD::QName.new(nil, "ID")
    AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

    # inner class for member: WaterFixtureRatedFlowRate
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterFixtureRatedFlowRate
    #   xmlattr_Source - SOAP::SOAPString
    class WaterFixtureRatedFlowRate < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterFixtureVolumePerCycle
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterFixtureVolumePerCycle
    #   xmlattr_Source - SOAP::SOAPString
    class WaterFixtureVolumePerCycle < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: WaterFixtureCyclesPerDay
    # {http://buildingsync.net/schemas/bedes-auc/2019}WaterFixtureCyclesPerDay
    #   xmlattr_Source - SOAP::SOAPString
    class WaterFixtureCyclesPerDay < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: Controls
    # {http://buildingsync.net/schemas/bedes-auc/2019}Controls
    class Controls < ::Array
    end

    attr_accessor :waterUseType
    attr_accessor :waterResource
    attr_accessor :lowFlowFixtures
    attr_accessor :waterFixtureRatedFlowRate
    attr_accessor :waterFixtureVolumePerCycle
    attr_accessor :waterFixtureCyclesPerDay
    attr_accessor :waterFixtureFractionHotWater
    attr_accessor :thirdPartyCertification
    attr_accessor :controls
    attr_accessor :yearInstalled
    attr_accessor :yearOfManufacture
    attr_accessor :manufacturer
    attr_accessor :modelNumber
    attr_accessor :location
    attr_accessor :linkedPremises
    attr_accessor :userDefinedFields
    attr_accessor :quantity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def xmlattr_Status
      __xmlattr[AttrStatus]
    end

    def xmlattr_Status=(value)
      __xmlattr[AttrStatus] = value
    end

    def initialize(waterUseType = nil, waterResource = nil, lowFlowFixtures = nil, waterFixtureRatedFlowRate = nil, waterFixtureVolumePerCycle = nil, waterFixtureCyclesPerDay = nil, waterFixtureFractionHotWater = nil, thirdPartyCertification = nil, controls = nil, yearInstalled = nil, yearOfManufacture = nil, manufacturer = nil, modelNumber = nil, location = nil, linkedPremises = nil, userDefinedFields = nil, quantity = nil)
      @waterUseType = waterUseType
      @waterResource = waterResource
      @lowFlowFixtures = lowFlowFixtures
      @waterFixtureRatedFlowRate = waterFixtureRatedFlowRate
      @waterFixtureVolumePerCycle = waterFixtureVolumePerCycle
      @waterFixtureCyclesPerDay = waterFixtureCyclesPerDay
      @waterFixtureFractionHotWater = waterFixtureFractionHotWater
      @thirdPartyCertification = thirdPartyCertification
      @controls = controls
      @yearInstalled = yearInstalled
      @yearOfManufacture = yearOfManufacture
      @manufacturer = manufacturer
      @modelNumber = modelNumber
      @location = location
      @linkedPremises = linkedPremises
      @userDefinedFields = userDefinedFields
      @quantity = quantity
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CalculationMethodType
  #   modeled - BuildingSync::CalculationMethodType::Modeled
  #   measured - BuildingSync::CalculationMethodType::Measured
  #   estimated - BuildingSync::EstimatedType
  #   engineeringCalculation - BuildingSync::EngineeringCalculationType
  #   other - BuildingSync::OtherType
  class CalculationMethodType

    # inner class for member: Modeled
    # {http://buildingsync.net/schemas/bedes-auc/2019}Modeled
    #   softwareProgramUsed - SOAP::SOAPString
    #   softwareProgramVersion - SOAP::SOAPString
    #   weatherDataType - SOAP::SOAPString
    #   simulationCompletionStatus - SOAP::SOAPString
    class Modeled
      attr_accessor :softwareProgramUsed
      attr_accessor :softwareProgramVersion
      attr_accessor :weatherDataType
      attr_accessor :simulationCompletionStatus

      def initialize(softwareProgramUsed = nil, softwareProgramVersion = nil, weatherDataType = nil, simulationCompletionStatus = nil)
        @softwareProgramUsed = softwareProgramUsed
        @softwareProgramVersion = softwareProgramVersion
        @weatherDataType = weatherDataType
        @simulationCompletionStatus = simulationCompletionStatus
      end
    end

    # inner class for member: Measured
    # {http://buildingsync.net/schemas/bedes-auc/2019}Measured
    #   measuredEnergySource - BuildingSync::CalculationMethodType::Measured::MeasuredEnergySource
    class Measured

      # inner class for member: MeasuredEnergySource
      # {http://buildingsync.net/schemas/bedes-auc/2019}MeasuredEnergySource
      #   utilityBills - BuildingSync::CalculationMethodType::Measured::MeasuredEnergySource::UtilityBills
      #   directMeasurement - BuildingSync::CalculationMethodType::Measured::MeasuredEnergySource::DirectMeasurement
      #   other - BuildingSync::OtherType
      class MeasuredEnergySource

        # inner class for member: UtilityBills
        # {http://buildingsync.net/schemas/bedes-auc/2019}UtilityBills
        #   utilityMeterNumber - SOAP::SOAPString
        #   utilityAccountNumber - SOAP::SOAPString
        #   utilityBillpayer - SOAP::SOAPString
        class UtilityBills
          attr_accessor :utilityMeterNumber
          attr_accessor :utilityAccountNumber
          attr_accessor :utilityBillpayer

          def initialize(utilityMeterNumber = [], utilityAccountNumber = nil, utilityBillpayer = nil)
            @utilityMeterNumber = utilityMeterNumber
            @utilityAccountNumber = utilityAccountNumber
            @utilityBillpayer = utilityBillpayer
          end
        end

        # inner class for member: DirectMeasurement
        # {http://buildingsync.net/schemas/bedes-auc/2019}DirectMeasurement
        class DirectMeasurement
          def initialize
          end
        end

        attr_accessor :utilityBills
        attr_accessor :directMeasurement
        attr_accessor :other

        def initialize(utilityBills = nil, directMeasurement = nil, other = nil)
          @utilityBills = utilityBills
          @directMeasurement = directMeasurement
          @other = other
        end
      end

      attr_accessor :measuredEnergySource

      def initialize(measuredEnergySource = nil)
        @measuredEnergySource = measuredEnergySource
      end
    end

    attr_accessor :modeled
    attr_accessor :measured
    attr_accessor :estimated
    attr_accessor :engineeringCalculation
    attr_accessor :other

    def initialize(modeled = nil, measured = nil, estimated = nil, engineeringCalculation = nil, other = nil)
      @modeled = modeled
      @measured = measured
      @estimated = estimated
      @engineeringCalculation = engineeringCalculation
      @other = other
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SpatialUnitTypeType
  #   spatialUnitType - SOAP::SOAPString
  #   numberOfUnits - BuildingSync::SpatialUnitTypeType::NumberOfUnits
  #   unitDensity - BuildingSync::SpatialUnitTypeType::UnitDensity
  #   spatialUnitOccupiedPercentage - BuildingSync::SpatialUnitTypeType::SpatialUnitOccupiedPercentage
  class SpatialUnitTypeType

    # inner class for member: NumberOfUnits
    # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfUnits
    #   xmlattr_Source - SOAP::SOAPString
    class NumberOfUnits < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: UnitDensity
    # {http://buildingsync.net/schemas/bedes-auc/2019}UnitDensity
    #   xmlattr_Source - SOAP::SOAPString
    class UnitDensity < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SpatialUnitOccupiedPercentage
    # {http://buildingsync.net/schemas/bedes-auc/2019}SpatialUnitOccupiedPercentage
    class SpatialUnitOccupiedPercentage < ::String
      def initialize(*arg)
        super
      end
    end

    attr_accessor :spatialUnitType
    attr_accessor :numberOfUnits
    attr_accessor :unitDensity
    attr_accessor :spatialUnitOccupiedPercentage

    def initialize(spatialUnitType = nil, numberOfUnits = nil, unitDensity = nil, spatialUnitOccupiedPercentage = nil)
      @spatialUnitType = spatialUnitType
      @numberOfUnits = numberOfUnits
      @unitDensity = unitDensity
      @spatialUnitOccupiedPercentage = spatialUnitOccupiedPercentage
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CBECSType
  #   climateZone - SOAP::SOAPString
  class CBECSType
    attr_accessor :climateZone

    def initialize(climateZone = nil)
      @climateZone = climateZone
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ElectricResistanceType
  class ElectricResistanceType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EngineeringCalculationType
  class EngineeringCalculationType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EstimatedType
  class EstimatedType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NeonType
  class NeonType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NoCoolingType
  class NoCoolingType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NoHeatingType
  class NoHeatingType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OtherCombinationType
  class OtherCombinationType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OtherType
  class OtherType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PhotoluminescentType
  class PhotoluminescentType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PlasmaType
  class PlasmaType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PortfolioManagerType
  #   pMBenchmarkDate - SOAP::SOAPDate
  #   buildingProfileStatus - SOAP::SOAPString
  #   federalSustainabilityChecklistCompletionPercentage - BuildingSync::PortfolioManagerType::FederalSustainabilityChecklistCompletionPercentage
  class PortfolioManagerType

    # inner class for member: FederalSustainabilityChecklistCompletionPercentage
    # {http://buildingsync.net/schemas/bedes-auc/2019}FederalSustainabilityChecklistCompletionPercentage
    #   xmlattr_Source - SOAP::SOAPString
    class FederalSustainabilityChecklistCompletionPercentage < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :pMBenchmarkDate
    attr_accessor :buildingProfileStatus
    attr_accessor :federalSustainabilityChecklistCompletionPercentage

    def initialize(pMBenchmarkDate = nil, buildingProfileStatus = nil, federalSustainabilityChecklistCompletionPercentage = nil)
      @pMBenchmarkDate = pMBenchmarkDate
      @buildingProfileStatus = buildingProfileStatus
      @federalSustainabilityChecklistCompletionPercentage = federalSustainabilityChecklistCompletionPercentage
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SelfLuminousType
  class SelfLuminousType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}UnknownType
  class UnknownType
    def initialize
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FanBasedDistributionTypeType
  #   fanCoil - BuildingSync::FanBasedDistributionTypeType::FanCoil
  class FanBasedDistributionTypeType

    # inner class for member: FanCoil
    # {http://buildingsync.net/schemas/bedes-auc/2019}FanCoil
    #   fanCoilType - SOAP::SOAPString
    #   hVACPipeConfiguration - SOAP::SOAPString
    #   pipeInsulationThickness - BuildingSync::PipeInsulationThickness
    #   pipeLocation - BuildingSync::PipeLocation
    class FanCoil
      attr_accessor :fanCoilType
      attr_accessor :hVACPipeConfiguration
      attr_accessor :pipeInsulationThickness
      attr_accessor :pipeLocation

      def initialize(fanCoilType = nil, hVACPipeConfiguration = nil, pipeInsulationThickness = nil, pipeLocation = nil)
        @fanCoilType = fanCoilType
        @hVACPipeConfiguration = hVACPipeConfiguration
        @pipeInsulationThickness = pipeInsulationThickness
        @pipeLocation = pipeLocation
      end
    end

    attr_accessor :fanCoil

    def initialize(fanCoil = nil)
      @fanCoil = fanCoil
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FanBasedType
  #   fanBasedDistributionType - BuildingSync::FanBasedDistributionTypeType
  #   airSideEconomizer - BuildingSync::FanBasedType::AirSideEconomizer
  #   heatingSupplyAirTemperatureControl - SOAP::SOAPString
  #   coolingSupplyAirTemperature - BuildingSync::FanBasedType::CoolingSupplyAirTemperature
  #   coolingSupplyAirTemperatureControlType - SOAP::SOAPString
  #   outsideAirResetMaximumHeatingSupplyTemperature - BuildingSync::FanBasedType::OutsideAirResetMaximumHeatingSupplyTemperature
  #   outsideAirResetMinimumHeatingSupplyTemperature - BuildingSync::FanBasedType::OutsideAirResetMinimumHeatingSupplyTemperature
  #   outsideAirTemperatureUpperLimitHeatingResetControl - BuildingSync::FanBasedType::OutsideAirTemperatureUpperLimitHeatingResetControl
  #   outsideAirTemperatureLowerLimitHeatingResetControl - BuildingSync::FanBasedType::OutsideAirTemperatureLowerLimitHeatingResetControl
  #   outsideAirResetMaximumCoolingSupplyTemperature - BuildingSync::FanBasedType::OutsideAirResetMaximumCoolingSupplyTemperature
  #   outsideAirResetMinimumCoolingSupplyTemperature - BuildingSync::FanBasedType::OutsideAirResetMinimumCoolingSupplyTemperature
  #   outsideAirTemperatureUpperLimitCoolingResetControl - BuildingSync::FanBasedType::OutsideAirTemperatureUpperLimitCoolingResetControl
  #   outsideAirTemperatureLowerLimitCoolingResetControl - BuildingSync::FanBasedType::OutsideAirTemperatureLowerLimitCoolingResetControl
  #   heatingSupplyAirTemperature - BuildingSync::FanBasedType::HeatingSupplyAirTemperature
  #   supplyAirTemperatureResetControl - SOAP::SOAPBoolean
  #   staticPressureResetControl - SOAP::SOAPBoolean
  class FanBasedType

    # inner class for member: AirSideEconomizer
    # {http://buildingsync.net/schemas/bedes-auc/2019}AirSideEconomizer
    #   airSideEconomizerType - SOAP::SOAPString
    #   economizerControl - SOAP::SOAPString
    #   economizerDryBulbControlPoint - BuildingSync::FanBasedType::AirSideEconomizer::EconomizerDryBulbControlPoint
    #   economizerEnthalpyControlPoint - BuildingSync::FanBasedType::AirSideEconomizer::EconomizerEnthalpyControlPoint
    #   economizerLowTemperatureLockout - BuildingSync::FanBasedType::AirSideEconomizer::EconomizerLowTemperatureLockout
    #   xmlattr_ID - SOAP::SOAPID
    #   xmlattr_Status - SOAP::SOAPString
    class AirSideEconomizer
      AttrID = XSD::QName.new(nil, "ID")
      AttrStatus = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Status")

      # inner class for member: EconomizerDryBulbControlPoint
      # {http://buildingsync.net/schemas/bedes-auc/2019}EconomizerDryBulbControlPoint
      #   xmlattr_Source - SOAP::SOAPString
      class EconomizerDryBulbControlPoint < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: EconomizerEnthalpyControlPoint
      # {http://buildingsync.net/schemas/bedes-auc/2019}EconomizerEnthalpyControlPoint
      #   xmlattr_Source - SOAP::SOAPString
      class EconomizerEnthalpyControlPoint < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: EconomizerLowTemperatureLockout
      # {http://buildingsync.net/schemas/bedes-auc/2019}EconomizerLowTemperatureLockout
      #   xmlattr_Source - SOAP::SOAPString
      class EconomizerLowTemperatureLockout < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :airSideEconomizerType
      attr_accessor :economizerControl
      attr_accessor :economizerDryBulbControlPoint
      attr_accessor :economizerEnthalpyControlPoint
      attr_accessor :economizerLowTemperatureLockout

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_ID
        __xmlattr[AttrID]
      end

      def xmlattr_ID=(value)
        __xmlattr[AttrID] = value
      end

      def xmlattr_Status
        __xmlattr[AttrStatus]
      end

      def xmlattr_Status=(value)
        __xmlattr[AttrStatus] = value
      end

      def initialize(airSideEconomizerType = nil, economizerControl = nil, economizerDryBulbControlPoint = nil, economizerEnthalpyControlPoint = nil, economizerLowTemperatureLockout = nil)
        @airSideEconomizerType = airSideEconomizerType
        @economizerControl = economizerControl
        @economizerDryBulbControlPoint = economizerDryBulbControlPoint
        @economizerEnthalpyControlPoint = economizerEnthalpyControlPoint
        @economizerLowTemperatureLockout = economizerLowTemperatureLockout
        @__xmlattr = {}
      end
    end

    # inner class for member: CoolingSupplyAirTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingSupplyAirTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class CoolingSupplyAirTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirResetMaximumHeatingSupplyTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirResetMaximumHeatingSupplyTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirResetMaximumHeatingSupplyTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirResetMinimumHeatingSupplyTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirResetMinimumHeatingSupplyTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirResetMinimumHeatingSupplyTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirTemperatureUpperLimitHeatingResetControl
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirTemperatureUpperLimitHeatingResetControl
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirTemperatureUpperLimitHeatingResetControl < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirTemperatureLowerLimitHeatingResetControl
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirTemperatureLowerLimitHeatingResetControl
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirTemperatureLowerLimitHeatingResetControl < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirResetMaximumCoolingSupplyTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirResetMaximumCoolingSupplyTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirResetMaximumCoolingSupplyTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirResetMinimumCoolingSupplyTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirResetMinimumCoolingSupplyTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirResetMinimumCoolingSupplyTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirTemperatureUpperLimitCoolingResetControl
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirTemperatureUpperLimitCoolingResetControl
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirTemperatureUpperLimitCoolingResetControl < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: OutsideAirTemperatureLowerLimitCoolingResetControl
    # {http://buildingsync.net/schemas/bedes-auc/2019}OutsideAirTemperatureLowerLimitCoolingResetControl
    #   xmlattr_Source - SOAP::SOAPString
    class OutsideAirTemperatureLowerLimitCoolingResetControl < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: HeatingSupplyAirTemperature
    # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingSupplyAirTemperature
    #   xmlattr_Source - SOAP::SOAPString
    class HeatingSupplyAirTemperature < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :fanBasedDistributionType
    attr_accessor :airSideEconomizer
    attr_accessor :heatingSupplyAirTemperatureControl
    attr_accessor :coolingSupplyAirTemperature
    attr_accessor :coolingSupplyAirTemperatureControlType
    attr_accessor :outsideAirResetMaximumHeatingSupplyTemperature
    attr_accessor :outsideAirResetMinimumHeatingSupplyTemperature
    attr_accessor :outsideAirTemperatureUpperLimitHeatingResetControl
    attr_accessor :outsideAirTemperatureLowerLimitHeatingResetControl
    attr_accessor :outsideAirResetMaximumCoolingSupplyTemperature
    attr_accessor :outsideAirResetMinimumCoolingSupplyTemperature
    attr_accessor :outsideAirTemperatureUpperLimitCoolingResetControl
    attr_accessor :outsideAirTemperatureLowerLimitCoolingResetControl
    attr_accessor :heatingSupplyAirTemperature
    attr_accessor :supplyAirTemperatureResetControl
    attr_accessor :staticPressureResetControl

    def initialize(fanBasedDistributionType = nil, airSideEconomizer = nil, heatingSupplyAirTemperatureControl = nil, coolingSupplyAirTemperature = nil, coolingSupplyAirTemperatureControlType = nil, outsideAirResetMaximumHeatingSupplyTemperature = nil, outsideAirResetMinimumHeatingSupplyTemperature = nil, outsideAirTemperatureUpperLimitHeatingResetControl = nil, outsideAirTemperatureLowerLimitHeatingResetControl = nil, outsideAirResetMaximumCoolingSupplyTemperature = nil, outsideAirResetMinimumCoolingSupplyTemperature = nil, outsideAirTemperatureUpperLimitCoolingResetControl = nil, outsideAirTemperatureLowerLimitCoolingResetControl = nil, heatingSupplyAirTemperature = nil, supplyAirTemperatureResetControl = nil, staticPressureResetControl = nil)
      @fanBasedDistributionType = fanBasedDistributionType
      @airSideEconomizer = airSideEconomizer
      @heatingSupplyAirTemperatureControl = heatingSupplyAirTemperatureControl
      @coolingSupplyAirTemperature = coolingSupplyAirTemperature
      @coolingSupplyAirTemperatureControlType = coolingSupplyAirTemperatureControlType
      @outsideAirResetMaximumHeatingSupplyTemperature = outsideAirResetMaximumHeatingSupplyTemperature
      @outsideAirResetMinimumHeatingSupplyTemperature = outsideAirResetMinimumHeatingSupplyTemperature
      @outsideAirTemperatureUpperLimitHeatingResetControl = outsideAirTemperatureUpperLimitHeatingResetControl
      @outsideAirTemperatureLowerLimitHeatingResetControl = outsideAirTemperatureLowerLimitHeatingResetControl
      @outsideAirResetMaximumCoolingSupplyTemperature = outsideAirResetMaximumCoolingSupplyTemperature
      @outsideAirResetMinimumCoolingSupplyTemperature = outsideAirResetMinimumCoolingSupplyTemperature
      @outsideAirTemperatureUpperLimitCoolingResetControl = outsideAirTemperatureUpperLimitCoolingResetControl
      @outsideAirTemperatureLowerLimitCoolingResetControl = outsideAirTemperatureLowerLimitCoolingResetControl
      @heatingSupplyAirTemperature = heatingSupplyAirTemperature
      @supplyAirTemperatureResetControl = supplyAirTemperatureResetControl
      @staticPressureResetControl = staticPressureResetControl
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlGeneralType
  #   advancedPowerStrip - BuildingSync::ControlGeneralType::AdvancedPowerStrip
  #   manual - BuildingSync::ControlGeneralType::Manual
  #   occupancy - BuildingSync::Occupancy
  #   timer - BuildingSync::ControlGeneralType::Timer
  #   thermostat - BuildingSync::ControlGeneralType::Thermostat
  #   otherControlTechnology - BuildingSync::ControlGeneralType::OtherControlTechnology
  class ControlGeneralType

    # inner class for member: AdvancedPowerStrip
    # {http://buildingsync.net/schemas/bedes-auc/2019}AdvancedPowerStrip
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyGeneralType
    #   otherControlStrategyName - SOAP::SOAPString
    class AdvancedPowerStrip
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Manual
    # {http://buildingsync.net/schemas/bedes-auc/2019}Manual
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyGeneralType
    #   otherControlStrategyName - SOAP::SOAPString
    class Manual
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Timer
    # {http://buildingsync.net/schemas/bedes-auc/2019}Timer
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyGeneralType
    #   otherControlStrategyName - SOAP::SOAPString
    class Timer
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Thermostat
    # {http://buildingsync.net/schemas/bedes-auc/2019}Thermostat
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyGeneralType
    #   otherControlStrategyName - SOAP::SOAPString
    class Thermostat
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: OtherControlTechnology
    # {http://buildingsync.net/schemas/bedes-auc/2019}OtherControlTechnology
    #   controlSystemType - BuildingSync::ControlSystemType
    #   otherControlTechnologyName - SOAP::SOAPString
    #   controlStrategy - BuildingSync::ControlStrategyGeneralType
    #   otherControlStrategyName - SOAP::SOAPString
    class OtherControlTechnology
      attr_accessor :controlSystemType
      attr_accessor :otherControlTechnologyName
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, otherControlTechnologyName = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @otherControlTechnologyName = otherControlTechnologyName
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    attr_accessor :advancedPowerStrip
    attr_accessor :manual
    attr_accessor :occupancy
    attr_accessor :timer
    attr_accessor :thermostat
    attr_accessor :otherControlTechnology

    def initialize(advancedPowerStrip = nil, manual = nil, occupancy = nil, timer = nil, thermostat = nil, otherControlTechnology = nil)
      @advancedPowerStrip = advancedPowerStrip
      @manual = manual
      @occupancy = occupancy
      @timer = timer
      @thermostat = thermostat
      @otherControlTechnology = otherControlTechnology
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlLightingType
  #   advancedPowerStrip - BuildingSync::ControlLightingType::AdvancedPowerStrip
  #   daylighting - BuildingSync::ControlLightingType::Daylighting
  #   manual - BuildingSync::ControlLightingType::Manual
  #   occupancy - BuildingSync::Occupancy
  #   timer - BuildingSync::ControlLightingType::Timer
  #   otherControlTechnology - BuildingSync::ControlLightingType::OtherControlTechnology
  class ControlLightingType

    # inner class for member: AdvancedPowerStrip
    # {http://buildingsync.net/schemas/bedes-auc/2019}AdvancedPowerStrip
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyLightingType
    #   otherControlStrategyName - SOAP::SOAPString
    class AdvancedPowerStrip
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Daylighting
    # {http://buildingsync.net/schemas/bedes-auc/2019}Daylighting
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlSensor - BuildingSync::ControlSensorDaylightingType
    #   controlSteps - BuildingSync::ControlLightingType::Daylighting::ControlSteps
    #   controlStrategy - BuildingSync::ControlStrategyDaylightingType
    #   otherControlStrategyName - SOAP::SOAPString
    class Daylighting

      # inner class for member: ControlSteps
      # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSteps
      #   xmlattr_Source - SOAP::SOAPString
      class ControlSteps < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :controlSystemType
      attr_accessor :controlSensor
      attr_accessor :controlSteps
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlSensor = nil, controlSteps = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlSensor = controlSensor
        @controlSteps = controlSteps
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Manual
    # {http://buildingsync.net/schemas/bedes-auc/2019}Manual
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - SOAP::SOAPString
    #   otherControlStrategyName - SOAP::SOAPString
    class Manual
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: Timer
    # {http://buildingsync.net/schemas/bedes-auc/2019}Timer
    #   controlSystemType - BuildingSync::ControlSystemType
    #   controlStrategy - BuildingSync::ControlStrategyLightingType
    #   otherControlStrategyName - SOAP::SOAPString
    class Timer
      attr_accessor :controlSystemType
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    # inner class for member: OtherControlTechnology
    # {http://buildingsync.net/schemas/bedes-auc/2019}OtherControlTechnology
    #   controlSystemType - BuildingSync::ControlSystemType
    #   otherControlTechnologyName - SOAP::SOAPString
    #   controlStrategy - BuildingSync::ControlStrategyLightingType
    #   otherControlStrategyName - SOAP::SOAPString
    class OtherControlTechnology
      attr_accessor :controlSystemType
      attr_accessor :otherControlTechnologyName
      attr_accessor :controlStrategy
      attr_accessor :otherControlStrategyName

      def initialize(controlSystemType = nil, otherControlTechnologyName = nil, controlStrategy = nil, otherControlStrategyName = nil)
        @controlSystemType = controlSystemType
        @otherControlTechnologyName = otherControlTechnologyName
        @controlStrategy = controlStrategy
        @otherControlStrategyName = otherControlStrategyName
      end
    end

    attr_accessor :advancedPowerStrip
    attr_accessor :daylighting
    attr_accessor :manual
    attr_accessor :occupancy
    attr_accessor :timer
    attr_accessor :otherControlTechnology

    def initialize(advancedPowerStrip = nil, daylighting = nil, manual = nil, occupancy = nil, timer = nil, otherControlTechnology = nil)
      @advancedPowerStrip = advancedPowerStrip
      @daylighting = daylighting
      @manual = manual
      @occupancy = occupancy
      @timer = timer
      @otherControlTechnology = otherControlTechnology
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BoundedDecimalZeroToOneWithSourceAttribute
  #   xmlattr_Source - SOAP::SOAPString
  class BoundedDecimalZeroToOneWithSourceAttribute < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DerivedModelType
  #   derivedModelName - SOAP::SOAPString
  #   measuredScenarioID - BuildingSync::DerivedModelType::MeasuredScenarioID
  #   models - BuildingSync::DerivedModelType::Models
  #   savingsSummaries - BuildingSync::DerivedModelType::SavingsSummaries
  #   userDefinedFields - BuildingSync::UserDefinedFields
  #   xmlattr_ID - SOAP::SOAPID
  class DerivedModelType
    AttrID = XSD::QName.new(nil, "ID")

    # inner class for member: MeasuredScenarioID
    # {http://buildingsync.net/schemas/bedes-auc/2019}MeasuredScenarioID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class MeasuredScenarioID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    # inner class for member: Models
    # {http://buildingsync.net/schemas/bedes-auc/2019}Models
    class Models < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Model
      #   startTimestamp - SOAP::SOAPDateTime
      #   endTimestamp - SOAP::SOAPDateTime
      #   derivedModelInputs - BuildingSync::DerivedModelType::Models::Model::DerivedModelInputs
      #   derivedModelCoefficients - BuildingSync::DerivedModelType::Models::Model::DerivedModelCoefficients
      #   derivedModelPerformance - BuildingSync::DerivedModelType::Models::Model::DerivedModelPerformance
      #   summaryInformation - BuildingSync::DerivedModelType::Models::Model::SummaryInformation
      #   modeledTimeSeriesData - BuildingSync::DerivedModelType::Models::Model::ModeledTimeSeriesData
      #   xmlattr_ID - SOAP::SOAPID
      class Model
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: DerivedModelInputs
        # {http://buildingsync.net/schemas/bedes-auc/2019}DerivedModelInputs
        #   intervalFrequency - BuildingSync::IntervalFrequencyType
        #   responseVariable - BuildingSync::DerivedModelType::Models::Model::DerivedModelInputs::ResponseVariable
        #   explanatoryVariables - BuildingSync::DerivedModelType::Models::Model::DerivedModelInputs::ExplanatoryVariables
        class DerivedModelInputs

          # inner class for member: ResponseVariable
          # {http://buildingsync.net/schemas/bedes-auc/2019}ResponseVariable
          #   responseVariableName - BuildingSync::FuelTypes
          #   responseVariableUnits - (any)
          #   responseVariableEndUse - BuildingSync::EndUseType
          class ResponseVariable
            attr_accessor :responseVariableName
            attr_accessor :responseVariableUnits
            attr_accessor :responseVariableEndUse

            def initialize(responseVariableName = nil, responseVariableUnits = nil, responseVariableEndUse = nil)
              @responseVariableName = responseVariableName
              @responseVariableUnits = responseVariableUnits
              @responseVariableEndUse = responseVariableEndUse
            end
          end

          # inner class for member: ExplanatoryVariables
          # {http://buildingsync.net/schemas/bedes-auc/2019}ExplanatoryVariables
          class ExplanatoryVariables < ::Array

            # {http://buildingsync.net/schemas/bedes-auc/2019}ExplanatoryVariable
            #   explanatoryVariableName - SOAP::SOAPString
            #   explanatoryVariableUnits - (any)
            class ExplanatoryVariable
              attr_accessor :explanatoryVariableName
              attr_accessor :explanatoryVariableUnits

              def initialize(explanatoryVariableName = nil, explanatoryVariableUnits = nil)
                @explanatoryVariableName = explanatoryVariableName
                @explanatoryVariableUnits = explanatoryVariableUnits
              end
            end
          end

          attr_accessor :intervalFrequency
          attr_accessor :responseVariable
          attr_accessor :explanatoryVariables

          def initialize(intervalFrequency = nil, responseVariable = nil, explanatoryVariables = nil)
            @intervalFrequency = intervalFrequency
            @responseVariable = responseVariable
            @explanatoryVariables = explanatoryVariables
          end
        end

        # inner class for member: DerivedModelCoefficients
        # {http://buildingsync.net/schemas/bedes-auc/2019}DerivedModelCoefficients
        #   guideline14Model - BuildingSync::DerivedModelType::Models::Model::DerivedModelCoefficients::Guideline14Model
        #   timeOfWeekTemperatureModel - BuildingSync::DerivedModelType::Models::Model::DerivedModelCoefficients::TimeOfWeekTemperatureModel
        class DerivedModelCoefficients

          # inner class for member: Guideline14Model
          # {http://buildingsync.net/schemas/bedes-auc/2019}Guideline14Model
          #   modelType - SOAP::SOAPString
          #   intercept - SOAP::SOAPDecimal
          #   beta1 - SOAP::SOAPDecimal
          #   beta2 - SOAP::SOAPDecimal
          #   beta3 - SOAP::SOAPDecimal
          #   beta4 - SOAP::SOAPDecimal
          class Guideline14Model
            attr_accessor :modelType
            attr_accessor :intercept
            attr_accessor :beta1
            attr_accessor :beta2
            attr_accessor :beta3
            attr_accessor :beta4

            def initialize(modelType = nil, intercept = nil, beta1 = nil, beta2 = nil, beta3 = nil, beta4 = nil)
              @modelType = modelType
              @intercept = intercept
              @beta1 = beta1
              @beta2 = beta2
              @beta3 = beta3
              @beta4 = beta4
            end
          end

          # inner class for member: TimeOfWeekTemperatureModel
          # {http://buildingsync.net/schemas/bedes-auc/2019}TimeOfWeekTemperatureModel
          class TimeOfWeekTemperatureModel
            def initialize
            end
          end

          attr_accessor :guideline14Model
          attr_accessor :timeOfWeekTemperatureModel

          def initialize(guideline14Model = nil, timeOfWeekTemperatureModel = nil)
            @guideline14Model = guideline14Model
            @timeOfWeekTemperatureModel = timeOfWeekTemperatureModel
          end
        end

        # inner class for member: DerivedModelPerformance
        # {http://buildingsync.net/schemas/bedes-auc/2019}DerivedModelPerformance
        #   rSquared - SOAP::SOAPDecimal
        #   adjustedRSquared - SOAP::SOAPDecimal
        #   rMSE - SOAP::SOAPDecimal
        #   cVRMSE - SOAP::SOAPDecimal
        #   nDBE - SOAP::SOAPDecimal
        #   mBE - SOAP::SOAPDecimal
        #   nMBE - SOAP::SOAPDecimal
        class DerivedModelPerformance
          attr_accessor :rSquared
          attr_accessor :adjustedRSquared
          attr_accessor :rMSE
          attr_accessor :cVRMSE
          attr_accessor :nDBE
          attr_accessor :mBE
          attr_accessor :nMBE

          def initialize(rSquared = nil, adjustedRSquared = nil, rMSE = nil, cVRMSE = nil, nDBE = nil, mBE = nil, nMBE = nil)
            @rSquared = rSquared
            @adjustedRSquared = adjustedRSquared
            @rMSE = rMSE
            @cVRMSE = cVRMSE
            @nDBE = nDBE
            @mBE = mBE
            @nMBE = nMBE
          end
        end

        # inner class for member: SummaryInformation
        # {http://buildingsync.net/schemas/bedes-auc/2019}SummaryInformation
        #   numberOfDataPoints - SOAP::SOAPDecimal
        #   numberOfParameters - SOAP::SOAPDecimal
        #   degreesOfFreedom - SOAP::SOAPDecimal
        #   aggregateActualEnergyUse - SOAP::SOAPDecimal
        #   aggregateModeledEnergyUse - SOAP::SOAPDecimal
        class SummaryInformation
          attr_accessor :numberOfDataPoints
          attr_accessor :numberOfParameters
          attr_accessor :degreesOfFreedom
          attr_accessor :aggregateActualEnergyUse
          attr_accessor :aggregateModeledEnergyUse

          def initialize(numberOfDataPoints = nil, numberOfParameters = nil, degreesOfFreedom = nil, aggregateActualEnergyUse = nil, aggregateModeledEnergyUse = nil)
            @numberOfDataPoints = numberOfDataPoints
            @numberOfParameters = numberOfParameters
            @degreesOfFreedom = degreesOfFreedom
            @aggregateActualEnergyUse = aggregateActualEnergyUse
            @aggregateModeledEnergyUse = aggregateModeledEnergyUse
          end
        end

        # inner class for member: ModeledTimeSeriesData
        # {http://buildingsync.net/schemas/bedes-auc/2019}ModeledTimeSeriesData
        class ModeledTimeSeriesData < ::Array
        end

        attr_accessor :startTimestamp
        attr_accessor :endTimestamp
        attr_accessor :derivedModelInputs
        attr_accessor :derivedModelCoefficients
        attr_accessor :derivedModelPerformance
        attr_accessor :summaryInformation
        attr_accessor :modeledTimeSeriesData

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(startTimestamp = nil, endTimestamp = nil, derivedModelInputs = nil, derivedModelCoefficients = nil, derivedModelPerformance = nil, summaryInformation = nil, modeledTimeSeriesData = nil)
          @startTimestamp = startTimestamp
          @endTimestamp = endTimestamp
          @derivedModelInputs = derivedModelInputs
          @derivedModelCoefficients = derivedModelCoefficients
          @derivedModelPerformance = derivedModelPerformance
          @summaryInformation = summaryInformation
          @modeledTimeSeriesData = modeledTimeSeriesData
          @__xmlattr = {}
        end
      end
    end

    # inner class for member: SavingsSummaries
    # {http://buildingsync.net/schemas/bedes-auc/2019}SavingsSummaries
    #   savingsSummary - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary
    class SavingsSummaries

      # inner class for member: SavingsSummary
      # {http://buildingsync.net/schemas/bedes-auc/2019}SavingsSummary
      #   baselinePeriodModelID - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::BaselinePeriodModelID
      #   reportingPeriodModelID - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::ReportingPeriodModelID
      #   normalizationMethod - SOAP::SOAPString
      #   comparisonPeriodStartTimestamp - SOAP::SOAPDateTime
      #   comparisonPeriodEndTimestamp - SOAP::SOAPDateTime
      #   comparisonPeriodAggregateActualEnergyUse - SOAP::SOAPDecimal
      #   comparisonPeriodAggregateModeledEnergyUse - SOAP::SOAPDecimal
      #   avoidedEnergyUse - SOAP::SOAPDecimal
      #   savingsUncertainty - SOAP::SOAPDecimal
      #   confidenceLevel - (any)
      #   standardConditionsBaselinePeriodAggregateModeledEnergyUse - SOAP::SOAPDecimal
      #   standardConditionsReportingPeriodAggregateModeledEnergyUse - SOAP::SOAPDecimal
      #   standardConditionsAvoidedEnergyUse - SOAP::SOAPDecimal
      #   comparisonPeriodModeledTimeSeriesData - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::ComparisonPeriodModeledTimeSeriesData
      #   standardConditionsBaselinePeriodModeledTimeSeriesData - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::StandardConditionsBaselinePeriodModeledTimeSeriesData
      #   standardConditionsReportingPeriodModeledTimeSeriesData - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::StandardConditionsReportingPeriodModeledTimeSeriesData
      #   standardConditionsTimeSeriesData - BuildingSync::DerivedModelType::SavingsSummaries::SavingsSummary::StandardConditionsTimeSeriesData
      #   xmlattr_ID - SOAP::SOAPID
      class SavingsSummary
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: BaselinePeriodModelID
        # {http://buildingsync.net/schemas/bedes-auc/2019}BaselinePeriodModelID
        #   xmlattr_IDref - SOAP::SOAPIDREF
        class BaselinePeriodModelID
          AttrIDref = XSD::QName.new(nil, "IDref")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_IDref
            __xmlattr[AttrIDref]
          end

          def xmlattr_IDref=(value)
            __xmlattr[AttrIDref] = value
          end

          def initialize
            @__xmlattr = {}
          end
        end

        # inner class for member: ReportingPeriodModelID
        # {http://buildingsync.net/schemas/bedes-auc/2019}ReportingPeriodModelID
        #   xmlattr_IDref - SOAP::SOAPIDREF
        class ReportingPeriodModelID
          AttrIDref = XSD::QName.new(nil, "IDref")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_IDref
            __xmlattr[AttrIDref]
          end

          def xmlattr_IDref=(value)
            __xmlattr[AttrIDref] = value
          end

          def initialize
            @__xmlattr = {}
          end
        end

        # inner class for member: ComparisonPeriodModeledTimeSeriesData
        # {http://buildingsync.net/schemas/bedes-auc/2019}ComparisonPeriodModeledTimeSeriesData
        class ComparisonPeriodModeledTimeSeriesData < ::Array
        end

        # inner class for member: StandardConditionsBaselinePeriodModeledTimeSeriesData
        # {http://buildingsync.net/schemas/bedes-auc/2019}StandardConditionsBaselinePeriodModeledTimeSeriesData
        class StandardConditionsBaselinePeriodModeledTimeSeriesData < ::Array
        end

        # inner class for member: StandardConditionsReportingPeriodModeledTimeSeriesData
        # {http://buildingsync.net/schemas/bedes-auc/2019}StandardConditionsReportingPeriodModeledTimeSeriesData
        class StandardConditionsReportingPeriodModeledTimeSeriesData < ::Array
        end

        # inner class for member: StandardConditionsTimeSeriesData
        # {http://buildingsync.net/schemas/bedes-auc/2019}StandardConditionsTimeSeriesData
        class StandardConditionsTimeSeriesData < ::Array
        end

        attr_accessor :baselinePeriodModelID
        attr_accessor :reportingPeriodModelID
        attr_accessor :normalizationMethod
        attr_accessor :comparisonPeriodStartTimestamp
        attr_accessor :comparisonPeriodEndTimestamp
        attr_accessor :comparisonPeriodAggregateActualEnergyUse
        attr_accessor :comparisonPeriodAggregateModeledEnergyUse
        attr_accessor :avoidedEnergyUse
        attr_accessor :savingsUncertainty
        attr_accessor :confidenceLevel
        attr_accessor :standardConditionsBaselinePeriodAggregateModeledEnergyUse
        attr_accessor :standardConditionsReportingPeriodAggregateModeledEnergyUse
        attr_accessor :standardConditionsAvoidedEnergyUse
        attr_accessor :comparisonPeriodModeledTimeSeriesData
        attr_accessor :standardConditionsBaselinePeriodModeledTimeSeriesData
        attr_accessor :standardConditionsReportingPeriodModeledTimeSeriesData
        attr_accessor :standardConditionsTimeSeriesData

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(baselinePeriodModelID = nil, reportingPeriodModelID = nil, normalizationMethod = nil, comparisonPeriodStartTimestamp = nil, comparisonPeriodEndTimestamp = nil, comparisonPeriodAggregateActualEnergyUse = nil, comparisonPeriodAggregateModeledEnergyUse = nil, avoidedEnergyUse = nil, savingsUncertainty = nil, confidenceLevel = nil, standardConditionsBaselinePeriodAggregateModeledEnergyUse = nil, standardConditionsReportingPeriodAggregateModeledEnergyUse = nil, standardConditionsAvoidedEnergyUse = nil, comparisonPeriodModeledTimeSeriesData = nil, standardConditionsBaselinePeriodModeledTimeSeriesData = nil, standardConditionsReportingPeriodModeledTimeSeriesData = nil, standardConditionsTimeSeriesData = nil)
          @baselinePeriodModelID = baselinePeriodModelID
          @reportingPeriodModelID = reportingPeriodModelID
          @normalizationMethod = normalizationMethod
          @comparisonPeriodStartTimestamp = comparisonPeriodStartTimestamp
          @comparisonPeriodEndTimestamp = comparisonPeriodEndTimestamp
          @comparisonPeriodAggregateActualEnergyUse = comparisonPeriodAggregateActualEnergyUse
          @comparisonPeriodAggregateModeledEnergyUse = comparisonPeriodAggregateModeledEnergyUse
          @avoidedEnergyUse = avoidedEnergyUse
          @savingsUncertainty = savingsUncertainty
          @confidenceLevel = confidenceLevel
          @standardConditionsBaselinePeriodAggregateModeledEnergyUse = standardConditionsBaselinePeriodAggregateModeledEnergyUse
          @standardConditionsReportingPeriodAggregateModeledEnergyUse = standardConditionsReportingPeriodAggregateModeledEnergyUse
          @standardConditionsAvoidedEnergyUse = standardConditionsAvoidedEnergyUse
          @comparisonPeriodModeledTimeSeriesData = comparisonPeriodModeledTimeSeriesData
          @standardConditionsBaselinePeriodModeledTimeSeriesData = standardConditionsBaselinePeriodModeledTimeSeriesData
          @standardConditionsReportingPeriodModeledTimeSeriesData = standardConditionsReportingPeriodModeledTimeSeriesData
          @standardConditionsTimeSeriesData = standardConditionsTimeSeriesData
          @__xmlattr = {}
        end
      end

      attr_accessor :savingsSummary

      def initialize(savingsSummary = nil)
        @savingsSummary = savingsSummary
      end
    end

    attr_accessor :derivedModelName
    attr_accessor :measuredScenarioID
    attr_accessor :models
    attr_accessor :savingsSummaries
    attr_accessor :userDefinedFields

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ID
      __xmlattr[AttrID]
    end

    def xmlattr_ID=(value)
      __xmlattr[AttrID] = value
    end

    def initialize(derivedModelName = nil, measuredScenarioID = nil, models = nil, savingsSummaries = nil, userDefinedFields = nil)
      @derivedModelName = derivedModelName
      @measuredScenarioID = measuredScenarioID
      @models = models
      @savingsSummaries = savingsSummaries
      @userDefinedFields = userDefinedFields
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EquipmentCondition
  class EquipmentCondition < ::String
    Average = new("Average")
    Excellent = new("Excellent")
    Good = new("Good")
    Other = new("Other")
    Poor = new("Poor")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}InsulationCondition
  class InsulationCondition < ::String
    Average = new("Average")
    Excellent = new("Excellent")
    Good = new("Good")
    None = new("None")
    Other = new("Other")
    Poor = new("Poor")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}State
  class State < ::String
    AA = new("AA")
    AB = new("AB")
    AE = new("AE")
    AK = new("AK")
    AL = new("AL")
    AP = new("AP")
    AR = new("AR")
    AS = new("AS")
    AZ = new("AZ")
    BC = new("BC")
    CA = new("CA")
    CO = new("CO")
    CT = new("CT")
    DC = new("DC")
    DE = new("DE")
    FL = new("FL")
    FM = new("FM")
    GA = new("GA")
    GU = new("GU")
    HI = new("HI")
    IA = new("IA")
    ID = new("ID")
    IL = new("IL")
    IN = new("IN")
    KS = new("KS")
    KY = new("KY")
    LA = new("LA")
    MA = new("MA")
    MB = new("MB")
    MD = new("MD")
    ME = new("ME")
    MH = new("MH")
    MI = new("MI")
    MN = new("MN")
    MO = new("MO")
    MP = new("MP")
    MS = new("MS")
    MT = new("MT")
    NB = new("NB")
    NC = new("NC")
    ND = new("ND")
    NE = new("NE")
    NH = new("NH")
    NJ = new("NJ")
    NL = new("NL")
    NM = new("NM")
    NS = new("NS")
    NT = new("NT")
    NU = new("NU")
    NV = new("NV")
    NY = new("NY")
    OH = new("OH")
    OK = new("OK")
    ON = new("ON")
    OR = new("OR")
    PA = new("PA")
    PE = new("PE")
    PR = new("PR")
    PW = new("PW")
    QC = new("QC")
    RI = new("RI")
    SC = new("SC")
    SD = new("SD")
    SK = new("SK")
    TN = new("TN")
    TX = new("TX")
    UT = new("UT")
    VA = new("VA")
    VI = new("VI")
    VT = new("VT")
    WA = new("WA")
    WI = new("WI")
    WV = new("WV")
    WY = new("WY")
    YT = new("YT")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FuelTypes
  class FuelTypes < ::String
    Biodiesel = new("Biodiesel")
    Biofuel = new("Biofuel")
    BiofuelB10 = new("Biofuel B10")
    BiofuelB20 = new("Biofuel B20")
    BiofuelB5 = new("Biofuel B5")
    Biomass = new("Biomass")
    Coal = new("Coal")
    CoalAnthracite = new("Coal anthracite")
    CoalBituminous = new("Coal bituminous")
    Coke = new("Coke")
    Diesel = new("Diesel")
    DistrictChilledWater = new("District chilled water")
    DistrictHotWater = new("District hot water")
    DistrictSteam = new("District steam")
    DrySteam = new("Dry steam")
    DualFuel = new("Dual fuel")
    Electricity = new("Electricity")
    ElectricityExported = new("Electricity-Exported")
    ElectricityOnsiteGenerated = new("Electricity-Onsite generated")
    Ethanol = new("Ethanol")
    FlashSteam = new("Flash steam")
    FuelOil = new("Fuel oil")
    FuelOilNo1 = new("Fuel oil no 1")
    FuelOilNo2 = new("Fuel oil no 2")
    FuelOilNo4 = new("Fuel oil no 4")
    FuelOilNo5 = new("Fuel oil no 5")
    FuelOilNo5AndNo6 = new("Fuel oil no 5 and no 6")
    FuelOilNo5Heavy = new("Fuel oil no 5 (heavy)")
    FuelOilNo5Light = new("Fuel oil no 5 (light)")
    FuelOilNo6 = new("Fuel oil no 6")
    Gasoline = new("Gasoline")
    Geothermal = new("Geothermal")
    Hydropower = new("Hydropower")
    Hydrothermal = new("Hydrothermal")
    Kerosene = new("Kerosene")
    LiquidPropane = new("Liquid propane")
    NaturalGas = new("Natural gas")
    Other = new("Other")
    OtherDeliveredExported = new("Other delivered-Exported")
    OtherDeliveredOnsiteGenerated = new("Other delivered-Onsite generated")
    OtherMeteredExported = new("Other metered-Exported")
    OtherMeteredOnsiteGenerated = new("Other metered-Onsite generated")
    Propane = new("Propane")
    Solar = new("Solar")
    ThermalExported = new("Thermal-Exported")
    ThermalOnsiteGenerated = new("Thermal-Onsite generated")
    Unknown = new("Unknown")
    WasteHeat = new("Waste heat")
    Wind = new("Wind")
    Wood = new("Wood")
    WoodPellets = new("Wood pellets")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EndUseType
  class EndUseType < ::String
    AllEndUses = new("All end uses")
    Conveyance = new("Conveyance")
    Cooking = new("Cooking")
    Cooling = new("Cooling")
    Dishwasher = new("Dishwasher")
    DomesticHotWater = new("Domestic hot water")
    ExteriorLighting = new("Exterior lighting")
    Heating = new("Heating")
    ITEquipment = new("IT equipment")
    InteriorLighting = new("Interior lighting")
    Laundry = new("Laundry")
    OnSiteGeneration = new("On site generation")
    PlugInElectricVehicle = new("Plug in electric vehicle")
    PlugLoad = new("Plug load")
    PoolHeating = new("Pool heating")
    ProcessLoad = new("Process load")
    Pump = new("Pump")
    Refrigeration = new("Refrigeration")
    TotalLighting = new("Total lighting")
    Ventilation = new("Ventilation")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OccupancyClassificationType
  class OccupancyClassificationType < ::String
    AgriculturalEstate = new("Agricultural estate")
    AssemblyArcadeOrCasinoWithoutLodging = new("Assembly-Arcade or casino without lodging")
    AssemblyConventionCenter = new("Assembly-Convention center")
    AssemblyCulturalEntertainment = new("Assembly-Cultural entertainment")
    AssemblyIndoorArena = new("Assembly-Indoor arena")
    AssemblyPublic = new("Assembly-Public")
    AssemblyRaceTrack = new("Assembly-Race track")
    AssemblyReligious = new("Assembly-Religious")
    AssemblySocialEntertainment = new("Assembly-Social entertainment")
    AssemblyStadium = new("Assembly-Stadium")
    AssemblyStadiumClosed = new("Assembly-Stadium (closed)")
    AssemblyStadiumOpen = new("Assembly-Stadium (open)")
    Atrium = new("Atrium")
    Attic = new("Attic")
    Auditorium = new("Auditorium")
    Bank = new("Bank")
    Bar = new("Bar")
    BarNightclub = new("Bar-Nightclub")
    Basement = new("Basement")
    CentralPlant = new("Central Plant")
    ChemicalStorageRoom = new("Chemical storage room")
    Classroom = new("Classroom")
    CommonArea = new("Common area")
    ComputerLab = new("Computer lab")
    ConferenceRoom = new("Conference room")
    ConvenienceStore = new("Convenience store")
    Corridor = new("Corridor")
    Courthouse = new("Courthouse")
    Courtroom = new("Courtroom")
    Courtyard = new("Courtyard")
    DanceFloor = new("Dance floor")
    Darkroom = new("Darkroom")
    DataCenter = new("Data center")
    DayRoom = new("Day room")
    Deck = new("Deck")
    DiningArea = new("Dining area")
    DressingArea = new("Dressing area")
    Education = new("Education")
    EducationAdult = new("Education-Adult")
    EducationHigher = new("Education-Higher")
    EducationPreschoolOrDaycare = new("Education-Preschool or daycare")
    EducationPrimary = new("Education-Primary")
    EducationSecondary = new("Education-Secondary")
    EducationVocational = new("Education-Vocational")
    EnergyGenerationPlant = new("Energy generation plant")
    FoodSales = new("Food sales")
    FoodSalesGroceryStore = new("Food sales-Grocery store")
    FoodService = new("Food service")
    FoodServiceFast = new("Food service-Fast")
    FoodServiceFull = new("Food service-Full")
    FoodServiceInstitutional = new("Food service-Institutional")
    FoodServiceLimited = new("Food service-Limited")
    GasStation = new("Gas station")
    HealthCare = new("Health care")
    HealthCareDiagnosticCenter = new("Health care-Diagnostic center")
    HealthCareInpatientHospital = new("Health care-Inpatient hospital")
    HealthCareMorgueOrMortuary = new("Health care-Morgue or mortuary")
    HealthCareOutpatientFacility = new("Health care-Outpatient facility")
    HealthCareOutpatientNonDiagnostic = new("Health care-Outpatient non-diagnostic")
    HealthCareOutpatientRehabilitation = new("Health care-Outpatient rehabilitation")
    HealthCareOutpatientSurgical = new("Health care-Outpatient surgical")
    HealthCarePharmacy = new("Health care-Pharmacy")
    HealthCareResidentialTreatmentCenter = new("Health care-Residential treatment center")
    HealthCareSkilledNursingFacility = new("Health care-Skilled nursing facility")
    HealthCareVeterinary = new("Health care-Veterinary")
    Industrial = new("Industrial")
    IndustrialManufacturingPlant = new("Industrial manufacturing plant")
    JanitorialCloset = new("Janitorial closet")
    Kitchen = new("Kitchen")
    Kitchenette = new("Kitchenette")
    Laboratory = new("Laboratory")
    LaboratoryMedical = new("Laboratory-Medical")
    LaboratoryTesting = new("Laboratory-Testing")
    LaundryArea = new("Laundry area")
    LivingArea = new("Living area")
    Lobby = new("Lobby")
    Lodging = new("Lodging")
    LodgingArea = new("Lodging area")
    LodgingBarracks = new("Lodging-Barracks")
    LodgingInstitutional = new("Lodging-Institutional")
    LodgingWithExtendedAmenities = new("Lodging with extended amenities")
    LodgingWithLimitedAmenities = new("Lodging with limited amenities")
    ManufacturedHome = new("Manufactured home")
    MechanicalRoom = new("Mechanical room")
    MediaCenter = new("Media center")
    MixedUseCommercial = new("Mixed-use commercial")
    Multifamily = new("Multifamily")
    MultifamilyIndividualUnit = new("Multifamily individual unit")
    MultifamilyWithCommercial = new("Multifamily with commercial")
    NonChemicalStorageRoom = new("Non-chemical storage room")
    NonOfficeWorkArea = new("Non-office work area")
    Office = new("Office")
    OfficeFinancial = new("Office-Financial")
    OfficeWorkArea = new("Office work area")
    Other = new("Other")
    Parking = new("Parking")
    PrintingRoom = new("Printing room")
    PublicHousing = new("Public housing")
    PublicSafety = new("Public safety")
    PublicSafetyCorrectionalFacility = new("Public safety-Correctional facility")
    PublicSafetyDetentionCenter = new("Public safety-Detention center")
    PublicSafetyStation = new("Public safety station")
    PublicSafetyStationFire = new("Public safety station-Fire")
    PublicSafetyStationPolice = new("Public safety station-Police")
    ReceptionArea = new("Reception area")
    Recreation = new("Recreation")
    RecreationBowlingAlley = new("Recreation-Bowling alley")
    RecreationFitnessCenter = new("Recreation-Fitness center")
    RecreationIceRink = new("Recreation-Ice rink")
    RecreationIndoorSport = new("Recreation-Indoor sport")
    RecreationPool = new("Recreation-Pool")
    RecreationRollerRink = new("Recreation-Roller rink")
    RefrigeratedStorage = new("Refrigerated storage")
    Residential = new("Residential")
    Restroom = new("Restroom")
    Retail = new("Retail")
    RetailAutomobileDealership = new("Retail-Automobile dealership")
    RetailDryGoodsRetail = new("Retail-Dry goods retail")
    RetailEnclosedMall = new("Retail-Enclosed mall")
    RetailHypermarket = new("Retail-Hypermarket")
    RetailMall = new("Retail-Mall")
    RetailStripMall = new("Retail-Strip mall")
    SciencePark = new("Science park")
    SecurityRoom = new("Security room")
    Service = new("Service")
    ServiceBeautyAndHealth = new("Service-Beauty and health")
    ServiceLaundryOrDryCleaning = new("Service-Laundry or dry cleaning")
    ServicePostal = new("Service-Postal")
    ServiceProductionAndAssembly = new("Service-Production and assembly")
    ServiceRepair = new("Service-Repair")
    ServiceStudio = new("Service-Studio")
    ShippingAndReceiving = new("Shipping and receiving")
    SingleFamily = new("Single family")
    SleepingArea = new("Sleeping area")
    SpectatorArea = new("Spectator area")
    SportPlayArea = new("Sport play area")
    Stage = new("Stage")
    TVStudio = new("TV studio")
    TelephoneDataEntry = new("Telephone data entry")
    TradingFloor = new("Trading floor")
    TransportationTerminal = new("Transportation terminal")
    TransportationWaitingArea = new("Transportation waiting area")
    Unknown = new("Unknown")
    Utility = new("Utility")
    Vault = new("Vault")
    Vivarium = new("Vivarium")
    WaitingArea = new("Waiting area")
    Warehouse = new("Warehouse")
    WarehouseRefrigerated = new("Warehouse-Refrigerated")
    WarehouseSelfStorage = new("Warehouse-Self-storage")
    WarehouseUnrefrigerated = new("Warehouse-Unrefrigerated")
    WaterTreatment = new("Water treatment")
    WaterTreatmentDrinkingWaterAndDistribution = new("Water treatment-Drinking water and distribution")
    WaterTreatmentWastewater = new("Water treatment-Wastewater")
    Zoo = new("Zoo")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}RankType
  class RankType < ::String
    Fair = new("Fair")
    Good = new("Good")
    Superior = new("Superior")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnvelopeConstructionType
  class EnvelopeConstructionType < ::String
    BuiltUp = new("Built up")
    ConcreteAerated = new("Concrete aerated")
    ConcreteInsulatedForms = new("Concrete insulated forms")
    ConcreteLightweight = new("Concrete lightweight")
    ConcreteLoadBearing = new("Concrete load bearing")
    ConcreteMasonryUnit = new("Concrete masonry unit")
    ConcretePanels = new("Concrete panels")
    ConcretePoured = new("Concrete poured")
    ConcreteSolid = new("Concrete solid")
    DoubleWoodFrame = new("Double wood frame")
    LogSolidWood = new("Log solid wood")
    Masonry = new("Masonry")
    Other = new("Other")
    SteelFrame = new("Steel frame")
    Stone = new("Stone")
    StrawBale = new("Straw bale")
    StructuralBrick = new("Structural brick")
    StructuralInsulatedPanel = new("Structural insulated panel")
    Unknown = new("Unknown")
    WoodFrame = new("Wood frame")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AuditorQualificationType
  class AuditorQualificationType < ::String
    ASHRAEBuildingCommissioningProfessionalBCxP = new("ASHRAE Building Commissioning Professional (BCxP)")
    ASHRAEBuildingEnergyAssessmentProfessionalBEAP = new("ASHRAE Building Energy Assessment Professional (BEAP)")
    ASHRAEBuildingEnergyModelingProfessionalBEMP = new("ASHRAE Building Energy Modeling Professional (BEMP)")
    AccreditedCommissioningProcessAuthorityProfessionalCxAP = new("Accredited Commissioning Process Authority Professional (CxAP)")
    AssociateCommissioningProfessionalACP = new("Associate Commissioning Professional (ACP)")
    AssociatedAirBalanceCouncilAABCCertifiedMemberAgency = new("Associated Air Balance Council (AABC) Certified Member Agency")
    AssociatedAirBalanceCouncilAABCTestAndBalanceTechnician = new("Associated Air Balance Council (AABC) Test and Balance Technician")
    AssociationOfEnergyEngineersCertifiedBuildingCommissioningFirmProgramCBCF = new("Association of Energy Engineers Certified Building Commissioning Firm Program (CBCF)")
    AssociationOfEnergyEngineersCertifiedBuildingCommissioningProfessionalCBCP = new("Association of Energy Engineers Certified Building Commissioning Professional (CBCP)")
    AssociationOfEnergyEngineersCertifiedBuildingEnergySimulationAnalystBESA = new("Association of Energy Engineers Certified Building Energy Simulation Analyst (BESA)")
    AssociationOfEnergyEngineersCertifiedBusinessEnergyProfessionalBEP = new("Association of Energy Engineers Certified Business Energy Professional (BEP)")
    AssociationOfEnergyEngineersCertifiedCarbonReductionManagerCRM = new("Association of Energy Engineers Certified Carbon Reduction Manager (CRM)")
    AssociationOfEnergyEngineersCertifiedDemandSideManagerCDSM = new("Association of Energy Engineers Certified Demand Side Manager (CDSM)")
    AssociationOfEnergyEngineersCertifiedEnergyAuditorCEA = new("Association of Energy Engineers Certified Energy Auditor (CEA)")
    AssociationOfEnergyEngineersCertifiedEnergyManagerCEM = new("Association of Energy Engineers Certified Energy Manager (CEM)")
    AssociationOfEnergyEngineersCertifiedEnergyProcurementProfessionalCEP = new("Association of Energy Engineers Certified Energy Procurement Professional (CEP)")
    AssociationOfEnergyEngineersCertifiedGeoExchangeDesignerProgramCGD = new("Association of Energy Engineers Certified GeoExchange Designer Program (CGD)")
    AssociationOfEnergyEngineersCertifiedGreenBuildingEngineerGBE = new("Association of Energy Engineers Certified Green Building Engineer (GBE)")
    AssociationOfEnergyEngineersCertifiedIndustrialEnergyProfessionalCIEP = new("Association of Energy Engineers Certified Industrial Energy Professional (CIEP)")
    AssociationOfEnergyEngineersCertifiedLightingEfficiencyProfessionalCLEP = new("Association of Energy Engineers Certified Lighting Efficiency Professional (CLEP)")
    AssociationOfEnergyEngineersCertifiedMeasurement38VerificationProfessionalCMVP = new("Association of Energy Engineers Certified Measurement &#38; Verification Professional (CMVP)")
    AssociationOfEnergyEngineersCertifiedPowerQualityProfessionalCPQ = new("Association of Energy Engineers Certified Power Quality Professional (CPQ)")
    AssociationOfEnergyEngineersCertifiedResidentialEnergyAuditorREA = new("Association of Energy Engineers Certified Residential Energy Auditor (REA)")
    AssociationOfEnergyEngineersCertifiedSustainableDevelopmentProfessionalCSDP = new("Association of Energy Engineers Certified Sustainable Development Professional (CSDP)")
    AssociationOfEnergyEngineersCertifiedWaterEfficiencyProfessionalCWEP = new("Association of Energy Engineers Certified Water Efficiency Professional (CWEP)")
    AssociationOfEnergyEngineersDistributedGenerationCertifiedProfessionalDGCP = new("Association of Energy Engineers Distributed Generation Certified Professional (DGCP)")
    AssociationOfEnergyEngineersEnergyEfficiencyPractitionerEEP = new("Association of Energy Engineers Energy Efficiency Practitioner (EEP)")
    AssociationOfEnergyEngineersPerformanceContractingAndFundingProfessionalPCF = new("Association of Energy Engineers Performance Contracting and Funding Professional (PCF)")
    AssociationOfEnergyEngineersRenewableEnergyProfessionalREP = new("Association of Energy Engineers Renewable Energy Professional (REP)")
    BuildingOperatorCertificationBOCLevel1 = new("Building Operator Certification (BOC): Level 1")
    BuildingOperatorCertificationBOCLevel2 = new("Building Operator Certification (BOC): Level 2")
    BuildingPerformanceInstituteBPIAdvancedHomeEnergyProfessionalCrewLeaderHEPCL = new("Building Performance Institute (BPI): Advanced Home Energy Professional - Crew Leader (HEP-CL)")
    BuildingPerformanceInstituteBPIAdvancedHomeEnergyProfessionalEnergyAuditorHEPEA = new("Building Performance Institute (BPI): Advanced Home Energy Professional - Energy Auditor (HEP-EA)")
    BuildingPerformanceInstituteBPIAdvancedHomeEnergyProfessionalHEP = new("Building Performance Institute (BPI): Advanced Home Energy Professional (HEP)")
    BuildingPerformanceInstituteBPIAdvancedHomeEnergyProfessionalQualityControlInspectorHEPQCI = new("Building Performance Institute (BPI): Advanced Home Energy Professional - Quality Control Inspector (HEP-QCI)")
    BuildingPerformanceInstituteBPIAdvancedHomeEnergyProfessionalRetrofitInstallerHEPRI = new("Building Performance Institute (BPI): Advanced Home Energy Professional - Retrofit Installer (HEP-RI)")
    BuildingPerformanceInstituteBPIBuildingAnalystBA = new("Building Performance Institute (BPI): Building Analyst (BA)")
    BuildingPerformanceInstituteBPICertification = new("Building Performance Institute (BPI) Certification")
    BuildingPerformanceInstituteBPIMultifamilyBuildingAnalyst = new("Building Performance Institute (BPI): Multifamily Building Analyst")
    CertifiedCommissioningProfessionalCCP = new("Certified Commissioning Professional (CCP)")
    CommissioningProcessManagementProfessionalCPMP = new("Commissioning Process Management Professional (CPMP)")
    DepartmentOfBuildingsDOBApprovedAgent = new("Department of Buildings (DOB) Approved Agent")
    ExistingBuildingCommissioningProfessionalEBCP = new("Existing Building Commissioning Professional (EBCP)")
    GreenPointRaterExistingHomeMultifamilyRater = new("GreenPoint Rater Existing Home Multifamily Rater")
    HERSWholeHouseHERSIIRater = new("HERS Whole House (HERS II) Rater")
    HighPerformanceBuildingDesignProfessionalHBDP = new("High-Performance Building Design Professional (HBDP)")
    HighPressureBoilerOperatingEngineer = new("High Pressure Boiler Operating Engineer")
    InternationalUnionOfOperatingEngineersCertifiedEnergySpecialist = new("International Union of Operating Engineers Certified Energy Specialist")
    NYSERDAFlexTechConsultant = new("NYSERDA FlexTech Consultant")
    None = new("None")
    NorthwestEnergyEducationInstituteEnergyManagementCertification = new("Northwest Energy Education Institute Energy Management Certification")
    Other = new("Other")
    PhDInMechanicalEngineering = new("PhD in Mechanical Engineering")
    ProfessionalEngineerPE = new("Professional Engineer (PE)")
    RefrigeratingSystemOperatingEngineer = new("Refrigerating System Operating Engineer")
    RegisteredArchitectRA = new("Registered Architect (RA)")
    ResidentialEnergyServicesNetworkRESNETCertification = new("Residential Energy Services Network (RESNET) Certification")
    ResidentialEnergyServicesNetworkRESNETHomePartner = new("Residential Energy Services Network (RESNET) - Home Partner")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}InsulationMaterialType
  class InsulationMaterialType < ::String
    Cellulose = new("Cellulose")
    ClosedCell = new("Closed cell")
    EPS = new("EPS")
    Fiberglass = new("Fiberglass")
    ISOCY = new("ISOCY")
    Icynene = new("Icynene")
    Insulsafe = new("Insulsafe")
    None = new("None")
    Other = new("Other")
    RecycledCotton = new("Recycled cotton")
    RockWool = new("Rock wool")
    Unknown = new("Unknown")
    Vermiculite = new("Vermiculite")
    XPS = new("XPS")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlStrategyGeneralType
  class ControlStrategyGeneralType < ::String
    AlwaysOn = new("Always On")
    Aquastat = new("Aquastat")
    Astronomical = new("Astronomical")
    Chronological = new("Chronological")
    Demand = new("Demand")
    EMCS = new("EMCS")
    Manual = new("Manual")
    None = new("None")
    Other = new("Other")
    Programmable = new("Programmable")
    Timer = new("Timer")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlStrategyLightingType
  class ControlStrategyLightingType < ::String
    Advanced = new("Advanced")
    AlwaysOn = new("Always On")
    Astronomical = new("Astronomical")
    Chronological = new("Chronological")
    Demand = new("Demand")
    EMCS = new("EMCS")
    Manual = new("Manual")
    None = new("None")
    Other = new("Other")
    Programmable = new("Programmable")
    Timer = new("Timer")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSensorOccupancyType
  class ControlSensorOccupancyType < ::String
    Camera = new("Camera")
    Microwave = new("Microwave")
    Other = new("Other")
    PassiveInfrared = new("Passive infrared")
    PassiveInfraredAndUltrasonic = new("Passive infrared and ultrasonic")
    Ultrasonic = new("Ultrasonic")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSensorDaylightingType
  class ControlSensorDaylightingType < ::String
    Camera = new("Camera")
    Other = new("Other")
    Photocell = new("Photocell")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlStrategyDaylightingType
  class ControlStrategyDaylightingType < ::String
    Continuous = new("Continuous")
    ContinuousPlusOff = new("Continuous Plus Off")
    None = new("None")
    Other = new("Other")
    SteppedDimming = new("Stepped Dimming")
    SteppedSwitching = new("Stepped Switching")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlStrategyOccupancyType
  class ControlStrategyOccupancyType < ::String
    None = new("None")
    OccupancySensors = new("Occupancy Sensors")
    Other = new("Other")
    Unknown = new("Unknown")
    VacancySensors = new("Vacancy Sensors")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CommunicationProtocolAnalogType
  class CommunicationProtocolAnalogType < ::String
    AMX192 = new("AMX192")
    Current = new("Current")
    D54 = new("D54")
    None = new("None")
    Other = new("Other")
    Unknown = new("Unknown")
    Voltage = new("Voltage")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CommunicationProtocolDigitalType
  class CommunicationProtocolDigitalType < ::String
    BACnet = new("BACnet")
    DALI = new("DALI")
    DMX512 = new("DMX512")
    DSI = new("DSI ")
    EnOcean = new("EnOcean")
    KMX = new("KMX")
    Konnex = new("Konnex")
    LonTalk = new("LonTalk")
    MODBUS = new("MODBUS")
    None = new("None")
    Other = new("Other")
    PROFIBUSFMS = new("PROFIBUS FMS")
    Unknown = new("Unknown")
    X10 = new("X10")
    ZigBee = new("ZigBee")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Finish
  class Finish < ::String
    AsphaltOrFiberglass = new("Asphalt or fiberglass")
    Brick = new("Brick")
    Carpet = new("Carpet")
    Concrete = new("Concrete")
    EIFS = new("EIFS")
    FiberCement = new("Fiber cement")
    Linoleum = new("Linoleum")
    Masonite = new("Masonite")
    Masonry = new("Masonry")
    Metal = new("Metal")
    MetalPanel = new("Metal panel")
    MetalPanelStandingSeam = new("Metal panel standing seam")
    Other = new("Other")
    PlasticRubberSyntheticSheeting = new("Plastic rubber synthetic sheeting")
    ShakesWood = new("Shakes wood")
    SheetMetal = new("Sheet metal")
    ShinglesAsbestos = new("Shingles asbestos")
    ShinglesAsphalt = new("Shingles asphalt")
    ShinglesComposition = new("Shingles composition")
    ShinglesSlateOrTile = new("Shingles slate or tile")
    ShinglesWood = new("Shingles wood")
    Stone = new("Stone")
    Tile = new("Tile")
    Unknown = new("Unknown")
    Wood = new("Wood")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Color
  class Color < ::String
    Dark = new("Dark")
    Light = new("Light")
    Medium = new("Medium")
    MediumDark = new("Medium dark")
    Other = new("Other")
    Reflective = new("Reflective")
    Unknown = new("Unknown")
    White = new("White")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FramingMaterial
  class FramingMaterial < ::String
    Brick = new("Brick")
    Concrete = new("Concrete")
    Masonry = new("Masonry")
    None = new("None")
    Other = new("Other")
    Steel = new("Steel")
    Unknown = new("Unknown")
    Wood = new("Wood")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorRoughnessType
  class ExteriorRoughnessType < ::String
    MediumRough = new("Medium rough")
    MediumSmooth = new("Medium smooth")
    Rough = new("Rough")
    Smooth = new("Smooth")
    Unknown = new("Unknown")
    VeryRough = new("Very rough")
    VerySmooth = new("Very smooth")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Tightness
  class Tightness < ::String
    Average = new("Average")
    Leaky = new("Leaky")
    Tight = new("Tight")
    Unknown = new("Unknown")
    VeryLeaky = new("Very Leaky")
    VeryTight = new("Very Tight")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LowMedHigh
  class LowMedHigh < ::String
    High = new("High")
    Low = new("Low")
    Medium = new("Medium")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}IntervalFrequencyType
  class IntervalFrequencyType < ::String
    Annual = new("Annual")
    C_10Minute = new("10 minute")
    C_15Minute = new("15 minute")
    C_1Minute = new("1 minute")
    C_30Minute = new("30 minute")
    Day = new("Day")
    Hour = new("Hour")
    Month = new("Month")
    Other = new("Other")
    Quarter = new("Quarter")
    Unknown = new("Unknown")
    Week = new("Week")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}UnitsType
  #  any of auc:ResourceUnitsType auc:PressureUnitsType auc:PeakResourceUnitsType auc:TemperatureUnitsType
  class UnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DimensionlessUnitsType
  #  any of auc:OtherUnitsType auc:DimensionlessUnitsBaseType
  class DimensionlessUnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PeakResourceUnitsType
  #  any of auc:OtherUnitsType auc:PeakResourceUnitsBaseType
  class PeakResourceUnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PressureUnitsType
  #  any of auc:OtherUnitsType auc:PressureUnitsBaseType
  class PressureUnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUnitsType
  #  any of auc:OtherUnitsType auc:ResourceUnitsBaseType
  class ResourceUnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TemperatureUnitsType
  #  any of auc:OtherUnitsType auc:TemperatureUnitsBaseType
  class TemperatureUnitsType < ::String
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OtherUnitsType
  class OtherUnitsType < ::String
    None = new("None")
    Other = new("Other")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DimensionlessUnitsBaseType
  class DimensionlessUnitsBaseType < ::String
    Percent = new("Percent, %")
    PercentRelativeHumidityRH = new("Percent Relative Humidity, %RH")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PeakResourceUnitsBaseType
  class PeakResourceUnitsBaseType < ::String
    KW = new("kW")
    MMBtuDay = new("MMBtu/day")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PressureUnitsBaseType
  class PressureUnitsBaseType < ::String
    AtmosphereAtm = new("Atmosphere, atm")
    Bar = new("Bar")
    PoundsPerSquareInchPsi = new("Pounds per Square Inch, psi")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUnitsBaseType
  class ResourceUnitsBaseType < ::String
    Btu = new("Btu")
    CubicMeters = new("Cubic Meters")
    Gallons = new("Gallons")
    KBtu = new("kBtu")
    KWh = new("kWh")
    Kcf = new("kcf")
    Klbs = new("Klbs")
    Lbs = new("lbs")
    MCF = new("MCF")
    MMBtu = new("MMBtu")
    MWh = new("MWh")
    MassTon = new("Mass ton")
    Mlbs = new("Mlbs")
    Therms = new("therms")
    TonHour = new("Ton-hour")
    Wh = new("Wh")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TemperatureUnitsBaseType
  class TemperatureUnitsBaseType < ::String
    FahrenheitF = new("Fahrenheit, F")
  end

  # {http://www.gbxml.org/schema}absorptanceUnitEnum
  class AbsorptanceUnitEnum < ::String
    ExtIR = new("ExtIR")
    ExtSolar = new("ExtSolar")
    ExtTotal = new("ExtTotal")
    ExtVisible = new("ExtVisible")
    IntIR = new("IntIR")
    IntSolar = new("IntSolar")
    IntTotal = new("IntTotal")
    IntVisible = new("IntVisible")
  end

  # {http://www.gbxml.org/schema}airTemperatureTypeEnum
  class AirTemperatureTypeEnum < ::String
    Outside = new("Outside")
    Zone = new("Zone")
  end

  # {http://www.gbxml.org/schema}resetTemperatureTypeEnum
  class ResetTemperatureTypeEnum < ::String
    Automatic = new("Automatic")
    None = new("None")
    OutdoorAirBased = new("OutdoorAirBased")
    Scheduled = new("Scheduled")
  end

  # {http://www.gbxml.org/schema}areaUnitEnum
  class AreaUnitEnum < ::String
    SquareCentimeters = new("SquareCentimeters")
    SquareFeet = new("SquareFeet")
    SquareInches = new("SquareInches")
    SquareKilometers = new("SquareKilometers")
    SquareMeters = new("SquareMeters")
    SquareMiles = new("SquareMiles")
    SquareMillimeters = new("SquareMillimeters")
    SquareYards = new("SquareYards")
  end

  # {http://www.gbxml.org/schema}baseboardHeatingTypeEnum
  class BaseboardHeatingTypeEnum < ::String
    ACH = new("ACH")
    Electric = new("Electric")
    HotWater = new("HotWater")
  end

  # {http://www.gbxml.org/schema}blowerDoorUnitEnum
  class BlowerDoorUnitEnum < ::String
    ACH = new("ACH")
    AirChangesPerHour = new("AirChangesPerHour")
    SquareFeet = new("SquareFeet")
    SquareMeter = new("SquareMeter")
  end

  # {http://www.gbxml.org/schema}buildingTypeEnum
  class BuildingTypeEnum < ::String
    AutomotiveFacility = new("AutomotiveFacility")
    ConventionCenter = new("ConventionCenter")
    Courthouse = new("Courthouse")
    DataCenter = new("DataCenter")
    DiningBarLoungeOrLeisure = new("DiningBarLoungeOrLeisure")
    DiningCafeteriaFastFood = new("DiningCafeteriaFastFood")
    DiningFamily = new("DiningFamily")
    Dormitory = new("Dormitory")
    ExerciseCenter = new("ExerciseCenter")
    FireStation = new("FireStation")
    Gymnasium = new("Gymnasium")
    HospitalOrHealthcare = new("HospitalOrHealthcare")
    Hotel = new("Hotel")
    Library = new("Library")
    Manufacturing = new("Manufacturing")
    Motel = new("Motel")
    MotionPictureTheatre = new("MotionPictureTheatre")
    MultiFamily = new("MultiFamily")
    Museum = new("Museum")
    Office = new("Office")
    ParkingGarage = new("ParkingGarage")
    Penitentiary = new("Penitentiary")
    PerformingArtsTheater = new("PerformingArtsTheater")
    PoliceStation = new("PoliceStation")
    PostOffice = new("PostOffice")
    ReligiousBuilding = new("ReligiousBuilding")
    Retail = new("Retail")
    SchoolOrUniversity = new("SchoolOrUniversity")
    SingleFamily = new("SingleFamily")
    SportsArena = new("SportsArena")
    TownHall = new("TownHall")
    Transportation = new("Transportation")
    Unknown = new("Unknown")
    Warehouse = new("Warehouse")
    Workshop = new("Workshop")
  end

  # {http://www.gbxml.org/schema}capacityTypeEnum
  class CapacityTypeEnum < ::String
    CoolingLatent = new("CoolingLatent")
    CoolingSHR = new("CoolingSHR")
    CoolingSensible = new("CoolingSensible")
    CoolingTotal = new("CoolingTotal")
    Heating = new("Heating")
    Volume = new("Volume")
  end

  # {http://www.gbxml.org/schema}capacityUnitEnum
  class CapacityUnitEnum < ::String
    BtuPerHour = new("BtuPerHour")
    CubicFeet = new("CubicFeet")
    CubicMeters = new("CubicMeters")
    Gallons = new("Gallons")
    KBtuPerHour = new("kBtuPerHour")
    KW = new("kW")
    Liters = new("Liters")
    Tons = new("Tons")
  end

  # {http://www.gbxml.org/schema}conditioningUnitEnum
  class ConditioningUnitEnum < ::String
    Btu = new("Btu")
    KBtu = new("kBtu")
    KW = new("kW")
    Tons = new("Tons")
  end

  # {http://www.gbxml.org/schema}conditionTypeEnum
  class ConditionTypeEnum < ::String
    Cooled = new("Cooled")
    Heated = new("Heated")
    HeatedAndCooled = new("HeatedAndCooled")
    NaturallyVentedOnly = new("NaturallyVentedOnly")
    Unconditioned = new("Unconditioned")
    Vented = new("Vented")
  end

  # {http://www.gbxml.org/schema}conditioningTypeEnum
  class ConditioningTypeEnum < ::String
    Cooling = new("Cooling")
    Heating = new("Heating")
    HeatingAndCooling = new("HeatingAndCooling")
  end

  # {http://www.gbxml.org/schema}conductivityFofTUnitEnum
  class ConductivityFofTUnitEnum < ::String
    BtuPerHourFtSquareF = new("BtuPerHourFtSquareF")
    WPerMSquareK = new("WPerMSquareK")
  end

  # {http://www.gbxml.org/schema}conductivityUnitEnum
  class ConductivityUnitEnum < ::String
    BtuPerHourFtF = new("BtuPerHourFtF")
    WPerCmC = new("WPerCmC")
    WPerMeterK = new("WPerMeterK")
  end

  # {http://www.gbxml.org/schema}controlTypeEnum
  class ControlTypeEnum < ::String
    Boiler = new("Boiler")
    Chiller = new("Chiller")
    Damper = new("Damper")
    Fan = new("Fan")
    Pump = new("Pump")
    Valve = new("Valve")
  end

  # {http://www.gbxml.org/schema}coolingCoilSetpointResetTypeEnum
  class CoolingCoilSetpointResetTypeEnum < ::String
    None = new("None")
    OutdoorAirTemperatureReset = new("OutdoorAirTemperatureReset")
    Warmest = new("Warmest")
    WarmestTemperatureFirst = new("WarmestTemperatureFirst")
  end

  # {http://www.gbxml.org/schema}coolingCoilTypeEnum
  class CoolingCoilTypeEnum < ::String
    ChilledWater = new("ChilledWater")
    ChilledWaterDetailedFlatModel = new("ChilledWaterDetailedFlatModel")
  end

  # {http://www.gbxml.org/schema}costTypeEnum
  class CostTypeEnum < ::String
    AnnualCost = new("AnnualCost")
    CO2 = new("CO2")
    DeliveryCost = new("DeliveryCost")
    EmbodiedEnergyInstallation = new("EmbodiedEnergyInstallation")
    EmbodiedEnergyManufacture = new("EmbodiedEnergyManufacture")
    EmbodiedEnergyTotal = new("EmbodiedEnergyTotal")
    EmbodiedEnergyTransportation = new("EmbodiedEnergyTransportation")
    FirstCost = new("FirstCost")
    InstallationCost = new("InstallationCost")
    MaintenanceCost = new("MaintenanceCost")
    MonthlyCost = new("MonthlyCost")
    NOx = new("NOx")
    OverhaulCost = new("OverhaulCost")
    PurchaseCost = new("PurchaseCost")
    SOx = new("SOx")
  end

  # {http://www.gbxml.org/schema}currencyTypeEnum
  class CurrencyTypeEnum < ::String
    AustralianDollar = new("AustralianDollar")
    CanadianDollars = new("CanadianDollars")
    EnglishPound = new("EnglishPound")
    Euros = new("Euros")
    Franc = new("Franc")
    IndianRupee = new("IndianRupee")
    Mark = new("Mark")
    NewZealandDollar = new("NewZealandDollar")
    Pesos = new("Pesos")
    Real = new("Real")
    Ruble = new("Ruble")
    TaiwanDollar = new("TaiwanDollar")
    USDollars = new("USDollars")
    Yen = new("Yen")
    Yuan = new("Yuan")
  end

  # {http://www.gbxml.org/schema}damperHeatingActionEnum
  class DamperHeatingActionEnum < ::String
    Normal = new("Normal")
    Reverse = new("Reverse")
  end

  # {http://www.gbxml.org/schema}dayTypeEnum
  class DayTypeEnum < ::String
    All = new("All")
    CoolingDesignDay = new("CoolingDesignDay")
    Custom = new("Custom")
    Fri = new("Fri")
    HeatingDesignDay = new("HeatingDesignDay")
    Holiday = new("Holiday")
    Mon = new("Mon")
    Sat = new("Sat")
    Sun = new("Sun")
    Thu = new("Thu")
    Tue = new("Tue")
    Wed = new("Wed")
    Weekday = new("Weekday")
    Weekend = new("Weekend")
    WeekendOrHoliday = new("WeekendOrHoliday")
  end

  # {http://www.gbxml.org/schema}defrostControlEnum
  class DefrostControlEnum < ::String
    OnDemand = new("OnDemand")
    Timed = new("Timed")
  end

  # {http://www.gbxml.org/schema}defrostStrategyEnum
  class DefrostStrategyEnum < ::String
    Resistive = new("Resistive")
    ReverseCycle = new("ReverseCycle")
  end

  # {http://www.gbxml.org/schema}deltaPUnitEnum
  class DeltaPUnitEnum < ::String
    Atmospheres = new("Atmospheres")
    CentimetersOfH2O = new("CentimetersOfH2O")
    CentimetersOfMercury = new("CentimetersOfMercury")
    InchesOfH2O = new("InchesOfH2O")
    InchesOfMercury = new("InchesOfMercury")
    KPa = new("kPa")
    MillimetersOfMercury = new("MillimetersOfMercury")
    PSI = new("PSI")
    Pascals = new("Pascals")
  end

  # {http://www.gbxml.org/schema}densityUnitEnum
  class DensityUnitEnum < ::String
    GramsPerCubicCm = new("GramsPerCubicCm")
    KgPerCubicM = new("KgPerCubicM")
    LbsPerCubicFt = new("LbsPerCubicFt")
    LbsPerCubicIn = new("LbsPerCubicIn")
  end

  # {http://www.gbxml.org/schema}densityFofTUnitEnum
  class DensityFofTUnitEnum < ::String
    KgPerCubicMK = new("KgPerCubicMK")
    LbsPerCubicFtF = new("LbsPerCubicFtF")
  end

  # {http://www.gbxml.org/schema}directionUnitEnum
  class DirectionUnitEnum < ::String
    DegreeDecimalFromNorth = new("DegreeDecimalFromNorth")
  end

  # {http://www.gbxml.org/schema}economizerLockoutEnum
  class EconomizerLockoutEnum < ::String
    LockoutWithCompressor = new("LockoutWithCompressor")
    LockoutWithHeating = new("LockoutWithHeating")
    NoLockout = new("NoLockout")
  end

  # {http://www.gbxml.org/schema}enthalpyTypeEnum
  class EnthalpyTypeEnum < ::String
    AirSideEconomizerMinSetpoint = new("AirSideEconomizerMinSetpoint")
    EconomizerMaxLimit = new("EconomizerMaxLimit")
    EconomizerUpperLimit = new("EconomizerUpperLimit")
  end

  # {http://www.gbxml.org/schema}enthalpyUnitEnum
  class EnthalpyUnitEnum < ::String
    BTUPerLb = new("BTUPerLb")
    KJPerKg = new("KJPerKg")
  end

  # {http://www.gbxml.org/schema}equipmentTypeEnum
  class EquipmentTypeEnum < ::String
    Coil = new("Coil")
    Dehumidifier = new("Dehumidifier")
    Duct = new("Duct")
    Economizer = new("Economizer")
    Evaporative = new("Evaporative")
    EvaporativePreCooler = new("EvaporativePreCooler")
    Fan = new("Fan")
    Furnace = new("Furnace")
    HeatExchanger = new("HeatExchanger")
    Humidifier = new("Humidifier")
    PreheatCoil = new("PreheatCoil")
    Radiant = new("Radiant")
    Register = new("Register")
    SplitAC = new("SplitAC")
    SplitHP = new("SplitHP")
    TerminalUnit = new("TerminalUnit")
    UnitaryAC = new("UnitaryAC")
    UnitaryHP = new("UnitaryHP")
    VAVBox = new("VAVBox")
  end

  # {http://www.gbxml.org/schema}efficiencyTypeEnum
  class EfficiencyTypeEnum < ::String
    AFUE = new("AFUE")
    BTUPerHourPerF = new("BTUPerHourPerF")
    BoilerEff = new("BoilerEff")
    COP = new("COP")
    EER = new("EER")
    Effectiveness = new("effectiveness")
    EnergyFactor = new("EnergyFactor")
    FanEff = new("FanEff")
    HSPF = new("HSPF")
    KWPerC = new("kWPerC")
    KWPerTon = new("kWPerTon")
    KWPerkW = new("kWPerkW")
    MechanicalEff = new("MechanicalEff")
    MotorEff = new("MotorEff")
    SEER = new("SEER")
    ThermalEff = new("ThermalEff")
  end

  # {http://www.gbxml.org/schema}emissionUnitEnum
  class EmissionUnitEnum < ::String
    GramsPerHour = new("GramsPerHour")
    KilogramsPerHour = new("KilogramsPerHour")
    PoundsPerHour = new("PoundsPerHour")
  end

  # {http://www.gbxml.org/schema}emittanceTypeEnum
  class EmittanceTypeEnum < ::String
    ExtIR = new("ExtIR")
    IntIR = new("IntIR")
  end

  # {http://www.gbxml.org/schema}energyUnitEnum
  class EnergyUnitEnum < ::String
    BTU = new("BTU")
    Joules = new("Joules")
    KilowattHours = new("KilowattHours")
    Therms = new("Therms")
  end

  # {http://www.gbxml.org/schema}entityTypeEnum
  class EntityTypeEnum < ::String
    C_File = new("File")
    Model = new("Model")
    Project = new("Project")
    Run = new("Run")
  end

  # {http://www.gbxml.org/schema}extEquipTypeEnum
  class ExtEquipTypeEnum < ::String
    BatteryCharger = new("BatteryCharger")
    CogenDiesel = new("CogenDiesel")
    CogenFuelCell = new("CogenFuelCell")
    CogenGasTurbine = new("CogenGasTurbine")
    Elevator = new("Elevator")
    Escalator = new("Escalator")
    Fountain = new("Fountain")
    Freezer = new("Freezer")
    Furnace = new("Furnace")
    GeneralPlugload = new("GeneralPlugload")
    HotTub = new("HotTub")
    IndustrialEquip = new("IndustrialEquip")
    Irrigation = new("Irrigation")
    LawnMower = new("LawnMower")
    MiscEquip = new("MiscEquip")
    Photovoltaic = new("Photovoltaic")
    Pool = new("Pool")
    Pump = new("Pump")
    Refrigerator = new("Refrigerator")
    Sauna = new("Sauna")
    Sprinkler = new("Sprinkler")
    Vending = new("Vending")
    WindTurbine = new("WindTurbine")
  end

  # {http://www.gbxml.org/schema}floorCategoryEnum
  class FloorCategoryEnum < ::String
    Basement = new("Basement")
    OverEnclosedCrawlSpaceOrBasement = new("OverEnclosedCrawlSpaceOrBasement")
    OverOpenCrawlSpaceOrGarage = new("OverOpenCrawlSpaceOrGarage")
    SlabOnGrade = new("SlabOnGrade")
  end

  # {http://www.gbxml.org/schema}floorSlabPerimeterHeatLossCoefficientUnitTypeEnum
  class FloorSlabPerimeterHeatLossCoefficientUnitTypeEnum < ::String
    BtuPerHourDegreeFPerLinearFoot = new("btuPerHourDegreeFPerLinearFoot")
    WattDegreeCPerLinearMeter = new("wattDegreeCPerLinearMeter")
  end

  # {http://www.gbxml.org/schema}flowUnitEnum
  class FlowUnitEnum < ::String
    CFM = new("CFM")
    CubicMPerHr = new("CubicMPerHr")
    Fraction = new("Fraction")
    GPH = new("GPH")
    GPM = new("GPM")
    LPM = new("LPM")
    LPerSec = new("LPerSec")
  end

  # {http://www.gbxml.org/schema}flowPerAreaUnitEnum
  class FlowPerAreaUnitEnum < ::String
    CFMPerSquareFoot = new("CFMPerSquareFoot")
    CubicMPerHourPerSquareM = new("CubicMPerHourPerSquareM")
    CubicMPerSecPerSquareM = new("CubicMPerSecPerSquareM")
    LPerSecPerSquareM = new("LPerSecPerSquareM")
  end

  # {http://www.gbxml.org/schema}flowTypeEnum
  class FlowTypeEnum < ::String
    Parallel = new("Parallel")
    ParallelFromPlenum = new("ParallelFromPlenum")
    Series = new("Series")
    SeriesFromPlenum = new("SeriesFromPlenum")
  end

  # {http://www.gbxml.org/schema}fluidTypeEnum
  class FluidTypeEnum < ::String
    Brine = new("Brine")
    Glycol = new("Glycol")
    Water = new("Water")
  end

  # {http://www.gbxml.org/schema}frameTypeEnum
  class FrameTypeEnum < ::String
    Aluminum = new("Aluminum")
    AluminumWithBreak = new("AluminumWithBreak")
    Insulated = new("Insulated")
    Vinyl = new("Vinyl")
    Wood = new("Wood")
  end

  # {http://www.gbxml.org/schema}fuelLoadUnitEnum
  class FuelLoadUnitEnum < ::String
    BtuPerHour = new("BtuPerHour")
    KBtuPerHour = new("kBtuPerHour")
    KW = new("kW")
    MBtuPerHour = new("MBtuPerHour")
    Watts = new("Watts")
  end

  # {http://www.gbxml.org/schema}gasTypeEnum
  class GasTypeEnum < ::String
    Air = new("Air")
    Argon = new("Argon")
    CO2 = new("CO2")
    Custom = new("Custom")
    Krypton = new("Krypton")
    SF6 = new("SF6")
  end

  # {http://www.gbxml.org/schema}heatingCoilSetpointResetTypeEnum
  class HeatingCoilSetpointResetTypeEnum < ::String
    None = new("None")
    OutdoorAirTemperatureReset = new("OutdoorAirTemperatureReset")
  end

  # {http://www.gbxml.org/schema}heatRecoveryTypeEnum
  class HeatRecoveryTypeEnum < ::String
    Enthalpy = new("Enthalpy")
    None = new("None")
    Sensible = new("Sensible")
  end

  # {http://www.gbxml.org/schema}hOutsideUnitTypeEnum
  class HOutsideUnitTypeEnum < ::String
    BTUPerHourSquareFootDegreeF = new("BTUPerHourSquareFootDegreeF")
    WattsPerSecondSquareMeterDegreeC = new("WattsPerSecondSquareMeterDegreeC")
  end

  # {http://www.gbxml.org/schema}hydronicEquipTypeEnum
  class HydronicEquipTypeEnum < ::String
    Boiler = new("Boiler")
    Chiller = new("Chiller")
    Coil = new("Coil")
    Condenser = new("Condenser")
    CoolingTower = new("CoolingTower")
    Earth = new("Earth")
    HeatExchanger = new("HeatExchanger")
    HotWaterHeater = new("HotWaterHeater")
    Pipe = new("Pipe")
    Pump = new("Pump")
    RadiantPanel = new("RadiantPanel")
    Radiator = new("Radiator")
    SolarPanels = new("SolarPanels")
    Storage = new("Storage")
    ThreeWayValve = new("ThreeWayValve")
    TwoWayValve = new("TwoWayValve")
  end

  # {http://www.gbxml.org/schema}illuminanceUnitEnum
  class IlluminanceUnitEnum < ::String
    Footcandles = new("Footcandles")
    Lux = new("Lux")
    Phot = new("Phot")
  end

  # {http://www.gbxml.org/schema}infiltrationTypeEnum
  class InfiltrationTypeEnum < ::String
    Average = new("Average")
    Loose = new("Loose")
    Tight = new("Tight")
  end

  # {http://www.gbxml.org/schema}intEquipTypeEnum
  class IntEquipTypeEnum < ::String
    AudioEquip = new("AudioEquip")
    BatteryCharger = new("BatteryCharger")
    ClothesDryer = new("ClothesDryer")
    ClothesWasher = new("ClothesWasher")
    Computer = new("Computer")
    Cooktop = new("Cooktop")
    Copier = new("Copier")
    Dishwasher = new("Dishwasher")
    Elevator = new("Elevator")
    Escalator = new("Escalator")
    Fan = new("Fan")
    Freezer = new("Freezer")
    Fryer = new("Fryer")
    Furnace = new("Furnace")
    GeneralEntertainmentEquip = new("GeneralEntertainmentEquip")
    GeneralFitnessEquip = new("GeneralFitnessEquip")
    GeneralKitchenEquip = new("GeneralKitchenEquip")
    GeneralLaundryEquip = new("GeneralLaundryEquip")
    GeneralMedicalEquip = new("GeneralMedicalEquip")
    GeneralOfficeEquip = new("GeneralOfficeEquip")
    GeneralPlugload = new("GeneralPlugload")
    GeneralRefrigerationEquip = new("GeneralRefrigerationEquip")
    GeneralToilet = new("GeneralToilet")
    GeneralVideoEquip = new("GeneralVideoEquip")
    HotTub = new("HotTub")
    IndustrialEquip = new("IndustrialEquip")
    Microwave = new("Microwave")
    MiscEquip = new("MiscEquip")
    Pool = new("Pool")
    Printer = new("Printer")
    Refrigerator = new("Refrigerator")
    Sauna = new("Sauna")
    Shower = new("Shower")
    Sink = new("Sink")
    Stove = new("Stove")
    TV = new("TV")
    Toilet = new("Toilet")
    Urinal = new("Urinal")
    VCR = new("VCR")
    Vending = new("Vending")
  end

  # {http://www.gbxml.org/schema}inverseTempUnitEnum
  class InverseTempUnitEnum < ::String
    PerF = new("PerF")
    PerK = new("PerK")
  end

  # {http://www.gbxml.org/schema}lengthUnitEnum
  class LengthUnitEnum < ::String
    Centimeters = new("Centimeters")
    Feet = new("Feet")
    Inches = new("Inches")
    Kilometers = new("Kilometers")
    Meters = new("Meters")
    Miles = new("Miles")
    Millimeters = new("Millimeters")
    Yards = new("Yards")
  end

  # {http://www.gbxml.org/schema}lifeUnitEnum
  class LifeUnitEnum < ::String
    Cycles = new("Cycles")
    MillionCycles = new("MillionCycles")
    Months = new("Months")
    Years = new("Years")
  end

  # {http://www.gbxml.org/schema}lightControlTypeEnum
  class LightControlTypeEnum < ::String
    Continuous = new("Continuous")
    ContinuousOff = new("ContinuousOff")
    MotionSensor = new("MotionSensor")
    OnOff = new("OnOff")
    Photocell = new("Photocell")
    Stepped10 = new("Stepped10")
    Stepped11 = new("Stepped11")
    Stepped12 = new("Stepped12")
    Stepped13 = new("Stepped13")
    Stepped14 = new("Stepped14")
    Stepped15 = new("Stepped15")
    Stepped16 = new("Stepped16")
    Stepped17 = new("Stepped17")
    Stepped18 = new("Stepped18")
    Stepped19 = new("Stepped19")
    Stepped2 = new("Stepped2")
    Stepped20 = new("Stepped20")
    Stepped3 = new("Stepped3")
    Stepped4 = new("Stepped4")
    Stepped5 = new("Stepped5")
    Stepped6 = new("Stepped6")
    Stepped7 = new("Stepped7")
    Stepped8 = new("Stepped8")
    Stepped9 = new("Stepped9")
  end

  # {http://www.gbxml.org/schema}loadUnitEnum
  class LoadUnitEnum < ::String
    BtuPerHour = new("BtuPerHour")
    Watt = new("Watt")
  end

  # {http://www.gbxml.org/schema}loopTypeEnum
  class LoopTypeEnum < ::String
    CondenserWater = new("CondenserWater")
    DomesticHotWater = new("DomesticHotWater")
    HotWater = new("HotWater")
    PotableWaterLoop = new("PotableWaterLoop")
    PrimaryChilledWater = new("PrimaryChilledWater")
    SecondaryChilledWater = new("SecondaryChilledWater")
    TwoPipe = new("TwoPipe")
    WaterLoopHeatPump = new("WaterLoopHeatPump")
  end

  # {http://www.gbxml.org/schema}minimumOutdoorAirControlTypeEnum
  class MinimumOutdoorAirControlTypeEnum < ::String
    FixedMinimum = new("FixedMinimum")
    ProportionalMinimum = new("ProportionalMinimum")
  end

  # {http://www.gbxml.org/schema}nightCycleControlEnum
  class NightCycleControlEnum < ::String
    CycleOnAny = new("CycleOnAny")
    CycleOnControlZone = new("CycleOnControlZone")
    StayOff = new("StayOff")
  end

  # {http://www.gbxml.org/schema}openingTypeEnum
  class OpeningTypeEnum < ::String
    Air = new("Air")
    FixedSkylight = new("FixedSkylight")
    FixedWindow = new("FixedWindow")
    NonSlidingDoor = new("NonSlidingDoor")
    OperableSkylight = new("OperableSkylight")
    OperableWindow = new("OperableWindow")
    SlidingDoor = new("SlidingDoor")
  end

  # {http://www.gbxml.org/schema}operationTypeEnum
  class OperationTypeEnum < ::String
    Continuous = new("Continuous")
    Cycling = new("Cycling")
  end

  # {http://www.gbxml.org/schema}peopleHeatGainUnitEnum
  class PeopleHeatGainUnitEnum < ::String
    BtuPerHourPerson = new("BtuPerHourPerson")
    WattPerPerson = new("WattPerPerson")
  end

  # {http://www.gbxml.org/schema}peopleHeatGainTypeEnum
  class PeopleHeatGainTypeEnum < ::String
    Latent = new("Latent")
    Sensible = new("Sensible")
    Total = new("Total")
  end

  # {http://www.gbxml.org/schema}peopleNumberUnitEnum
  class PeopleNumberUnitEnum < ::String
    NumberOfPeople = new("NumberOfPeople")
    SquareFtPerPerson = new("SquareFtPerPerson")
    SquareMPerPerson = new("SquareMPerPerson")
  end

  # {http://www.gbxml.org/schema}permUnitEnum
  class PermUnitEnum < ::String
    PermIP = new("PermIP")
    PermSI = new("PermSI")
  end

  # {http://www.gbxml.org/schema}powerTypeEnum
  class PowerTypeEnum < ::String
    Biogas = new("Biogas")
    ChilledWater = new("ChilledWater")
    Diesel = new("Diesel")
    Electricity = new("Electricity")
    FuelOil1 = new("FuelOil1")
    FuelOil2 = new("FuelOil2")
    FuelOil4 = new("FuelOil4")
    HotWater = new("HotWater")
    NaturalGas = new("NaturalGas")
    Propane = new("Propane")
    Steam = new("Steam")
    Water = new("Water")
  end

  # {http://www.gbxml.org/schema}powerUnitEnum
  class PowerUnitEnum < ::String
    BtuPerHour = new("BtuPerHour")
    BtuPerSecond = new("BtuPerSecond")
    FootPoundForcePerSecond = new("FootPoundForcePerSecond")
    Horsepower = new("Horsepower")
    KilocaloriesPerSecond = new("KilocaloriesPerSecond")
    KilogramForceMeterPerSecond = new("KilogramForceMeterPerSecond")
    Kilowatt = new("Kilowatt")
    Watt = new("Watt")
  end

  # {http://www.gbxml.org/schema}powerUseTypeEnum
  class PowerUseTypeEnum < ::String
    Both = new("Both")
    Cooling = new("Cooling")
    ElectricityGeneration = new("ElectricityGeneration")
    Heating = new("Heating")
    Other = new("Other")
  end

  # {http://www.gbxml.org/schema}powerPerAreaUnitEnum
  class PowerPerAreaUnitEnum < ::String
    WattPerSquareFoot = new("WattPerSquareFoot")
    WattPerSquareMeter = new("WattPerSquareMeter")
  end

  # {http://www.gbxml.org/schema}preheatCoilTypeEnum
  class PreheatCoilTypeEnum < ::String
    Electric = new("Electric")
    Gas = new("Gas")
    None = new("None")
  end

  # {http://www.gbxml.org/schema}pressureUnitEnum
  class PressureUnitEnum < ::String
    Atmospheres = new("Atmospheres")
    CentimetersOfH2O = new("CentimetersOfH2O")
    CentimetersOfMercury = new("CentimetersOfMercury")
    InchesOfH2O = new("InchesOfH2O")
    InchesOfMercury = new("InchesOfMercury")
    KPa = new("kPa")
    MillimetersOfMercury = new("MillimetersOfMercury")
    PSI = new("PSI")
    Pascals = new("Pascals")
  end

  # {http://www.gbxml.org/schema}radiationWavelengthTypeEnum
  class RadiationWavelengthTypeEnum < ::String
    IR = new("IR")
    Solar = new("Solar")
    Visible = new("Visible")
  end

  # {http://www.gbxml.org/schema}reflectanceTypeEnum
  class ReflectanceTypeEnum < ::String
    ExtIR = new("ExtIR")
    ExtSolar = new("ExtSolar")
    ExtVisible = new("ExtVisible")
    Ground = new("Ground")
    IntIR = new("IntIR")
    IntSolar = new("IntSolar")
    IntVisible = new("IntVisible")
  end

  # {http://www.gbxml.org/schema}resistanceUnitEnum
  class ResistanceUnitEnum < ::String
    HrSquareFtFPerBTU = new("HrSquareFtFPerBTU")
    SquareMeterKPerW = new("SquareMeterKPerW")
  end

  # {http://www.gbxml.org/schema}uValueUnitEnum
  class UValueUnitEnum < ::String
    BtuPerHourSquareFtF = new("BtuPerHourSquareFtF")
    WPerSquareMeterK = new("WPerSquareMeterK")
  end

  # {http://www.gbxml.org/schema}resourceTypeEnum
  class ResourceTypeEnum < ::String
    ChilledWater = new("ChilledWater")
    Electricity = new("Electricity")
    FuelOil1 = new("FuelOil1")
    FuelOil2 = new("FuelOil2")
    FuelOil4 = new("FuelOil4")
    HotWater = new("HotWater")
    NaturalGas = new("NaturalGas")
    Propane = new("Propane")
    Steam = new("Steam")
    Water = new("Water")
  end

  # {http://www.gbxml.org/schema}resultsExtraResourceTypeEnum
  class ResultsExtraResourceTypeEnum < ::String
    Air = new("Air")
    Contaminant = new("Contaminant")
    Light = new("Light")
    Moisture = new("Moisture")
    Thermal = new("Thermal")
  end

  # {http://www.gbxml.org/schema}resultsTypeEnum
  class ResultsTypeEnum < ::String
    CO2 = new("CO2")
    Capacity = new("Capacity")
    CommodityCost = new("CommodityCost")
    CoolingLoad = new("CoolingLoad")
    Cost = new("Cost")
    DemandCost = new("DemandCost")
    DewPointTemperature = new("DewPointTemperature")
    DryBulbTemperature = new("DryBulbTemperature")
    Energy = new("Energy")
    EnergyCost = new("EnergyCost")
    Flow = new("Flow")
    FootCandles = new("FootCandles")
    HeatLoad = new("HeatLoad")
    Humidity = new("Humidity")
    MoistureContent = new("MoistureContent")
    NOx = new("NOx")
    Power = new("Power")
    SO2 = new("SO2")
    TransportationCost = new("TransportationCost")
    WetBulbTemperature = new("WetBulbTemperature")
  end

  # {http://www.gbxml.org/schema}roofASHRAENumberEnum
  class RoofASHRAENumberEnum < ::String
    C_0 = new("0")
    C_1 = new("1")
    C_10 = new("10")
    C_11 = new("11")
    C_12 = new("12")
    C_13 = new("13")
    C_2 = new("2")
    C_3 = new("3")
    C_4 = new("4")
    C_5 = new("5")
    C_6 = new("6")
    C_7 = new("7")
    C_8 = new("8")
    C_9 = new("9")
  end

  # {http://www.gbxml.org/schema}roofCLTDIndexEnum
  class RoofCLTDIndexEnum < ::String
    C_1 = new("1")
    C_10 = new("10")
    C_11 = new("11")
    C_12 = new("12")
    C_13 = new("13")
    C_14 = new("14")
    C_15 = new("15")
    C_16 = new("16")
    C_17 = new("17")
    C_18 = new("18")
    C_19 = new("19")
    C_2 = new("2")
    C_20 = new("20")
    C_21 = new("21")
    C_22 = new("22")
    C_23 = new("23")
    C_24 = new("24")
    C_25 = new("25")
    C_26 = new("26")
    C_27 = new("27")
    C_28 = new("28")
    C_29 = new("29")
    C_3 = new("3")
    C_30 = new("30")
    C_31 = new("31")
    C_32 = new("32")
    C_33 = new("33")
    C_34 = new("34")
    C_35 = new("35")
    C_36 = new("36")
    C_37 = new("37")
    C_38 = new("38")
    C_39 = new("39")
    C_4 = new("4")
    C_40 = new("40")
    C_41 = new("41")
    C_42 = new("42")
    C_43 = new("43")
    C_44 = new("44")
    C_45 = new("45")
    C_46 = new("46")
    C_47 = new("47")
    C_5 = new("5")
    C_6 = new("6")
    C_7 = new("7")
    C_8 = new("8")
    C_9 = new("9")
  end

  # {http://www.gbxml.org/schema}roofColorEnum
  class RoofColorEnum < ::String
    Dark = new("Dark")
    Light = new("Light")
  end

  # {http://www.gbxml.org/schema}roofCTSTypeEnum
  class RoofCTSTypeEnum < ::String
    C_1 = new("1")
    C_10 = new("10")
    C_11 = new("11")
    C_12 = new("12")
    C_13 = new("13")
    C_14 = new("14")
    C_15 = new("15")
    C_16 = new("16")
    C_17 = new("17")
    C_18 = new("18")
    C_19 = new("19")
    C_2 = new("2")
    C_3 = new("3")
    C_4 = new("4")
    C_5 = new("5")
    C_6 = new("6")
    C_7 = new("7")
    C_8 = new("8")
    C_9 = new("9")
  end

  # {http://www.gbxml.org/schema}roughnessValueEnum
  class RoughnessValueEnum < ::String
    MediumRough = new("MediumRough")
    MediumSmooth = new("MediumSmooth")
    Rough = new("Rough")
    Smooth = new("Smooth")
    VeryRough = new("VeryRough")
    VerySmooth = new("VerySmooth")
  end

  # {http://www.gbxml.org/schema}scheduleTypeEnum
  class ScheduleTypeEnum < ::String
    ActivityLevel = new("ActivityLevel")
    Fraction = new("Fraction")
    OnOff = new("OnOff")
    ResetTemp = new("ResetTemp")
    Temp = new("Temp")
  end

  # {http://www.gbxml.org/schema}scheduleTypeLimitsEnum
  class ScheduleTypeLimitsEnum < ::String
    Continuous = new("Continuous")
    Discrete = new("Discrete")
  end

  # {http://www.gbxml.org/schema}shadeTypeEnum
  class ShadeTypeEnum < ::String
    ExternalInsulated = new("ExternalInsulated")
    ExternalUnInsulated = new("ExternalUnInsulated")
    InteriorInsulated = new("InteriorInsulated")
    InteriorUnInsulated = new("InteriorUnInsulated")
  end

  # {http://www.gbxml.org/schema}shadeOperationEnum
  class ShadeOperationEnum < ::String
    Fixed = new("Fixed")
    Operable = new("Operable")
  end

  # {http://www.gbxml.org/schema}shadeScheduleTypeEnum
  class ShadeScheduleTypeEnum < ::String
    Blind = new("Blind")
    MaxSolar = new("MaxSolar")
    Operation = new("Operation")
    Probability = new("Probability")
    Shade = new("Shade")
  end

  # {http://www.gbxml.org/schema}sinkRateUnitEnum
  class SinkRateUnitEnum < ::String
    GramsPerHour = new("GramsPerHour")
    KilogramsPerHour = new("KilogramsPerHour")
    PoundsPerHour = new("PoundsPerHour")
  end

  # {http://www.gbxml.org/schema}spaceTypeEnum
  class SpaceTypeEnum < ::String
    ActiveStorage = new("ActiveStorage")
    ActiveStorageHospitalOrHealthcare = new("ActiveStorageHospitalOrHealthcare")
    AirOrTrainOrBusBaggageArea = new("AirOrTrainOrBusBaggageArea")
    AirportConcourse = new("AirportConcourse")
    AtriumEachAdditionalFloor = new("AtriumEachAdditionalFloor")
    AtriumFirstThreeFloors = new("AtriumFirstThreeFloors")
    AudienceOrSeatingAreaAuditorium = new("AudienceOrSeatingAreaAuditorium")
    AudienceOrSeatingAreaConventionCenter = new("AudienceOrSeatingAreaConventionCenter")
    AudienceOrSeatingAreaCourtHouse = new("AudienceOrSeatingAreaCourtHouse")
    AudienceOrSeatingAreaExerciseCenter = new("AudienceOrSeatingAreaExerciseCenter")
    AudienceOrSeatingAreaGymnasium = new("AudienceOrSeatingAreaGymnasium")
    AudienceOrSeatingAreaMotionPictureTheatre = new("AudienceOrSeatingAreaMotionPictureTheatre")
    AudienceOrSeatingAreaPenitentiary = new("AudienceOrSeatingAreaPenitentiary")
    AudienceOrSeatingAreaPerformingArtsTheatre = new("AudienceOrSeatingAreaPerformingArtsTheatre")
    AudienceOrSeatingAreaPoliceOrFireStations = new("AudienceOrSeatingAreaPoliceOrFireStations")
    AudienceOrSeatingAreaReligious = new("AudienceOrSeatingAreaReligious")
    AudienceOrSeatingAreaSportsArena = new("AudienceOrSeatingAreaSportsArena")
    BankCustomerArea = new("BankCustomerArea")
    BankingActivityAreaOffice = new("BankingActivityAreaOffice")
    BarberAndBeautyParlor = new("BarberAndBeautyParlor")
    CardFileAndCataloguingLibrary = new("CardFileAndCataloguingLibrary")
    ClassroomOrLectureOrTraining = new("ClassroomOrLectureOrTraining")
    ClassroomOrLectureOrTrainingPenitentiary = new("ClassroomOrLectureOrTrainingPenitentiary")
    ConferenceMeetingOrMultipurpose = new("ConferenceMeetingOrMultipurpose")
    ConfinementCellsCourtHouse = new("ConfinementCellsCourtHouse")
    ConfinementCellsPenitentiary = new("ConfinementCellsPenitentiary")
    CorridorOrTransition = new("CorridorOrTransition")
    CorridorOrTransitionManufacturingFacility = new("CorridorOrTransitionManufacturingFacility")
    CorridorsWithPatientWaitingExamHospitalOrHealthcare = new("CorridorsWithPatientWaitingExamHospitalOrHealthcare")
    CourtSportsAreaSportsArena = new("CourtSportsAreaSportsArena")
    CourtroomCourtHouse = new("CourtroomCourtHouse")
    DepartmentStoreSalesAreaRetail = new("DepartmentStoreSalesAreaRetail")
    DetailedManufacturingFacility = new("DetailedManufacturingFacility")
    DiningArea = new("DiningArea")
    DiningAreaCivilServices = new("DiningAreaCivilServices")
    DiningAreaFamilyDining = new("DiningAreaFamilyDining")
    DiningAreaHotel = new("DiningAreaHotel")
    DiningAreaLoungeOrLeisureDining = new("DiningAreaLoungeOrLeisureDining")
    DiningAreaMotel = new("DiningAreaMotel")
    DiningAreaPenitentiary = new("DiningAreaPenitentiary")
    DiningAreaTransportation = new("DiningAreaTransportation")
    DormitoryBedroom = new("DormitoryBedroom")
    DormitoryStudyHall = new("DormitoryStudyHall")
    DressingOrLockerOrFittingRoomAuditorium = new("DressingOrLockerOrFittingRoomAuditorium")
    DressingOrLockerOrFittingRoomCourtHouse = new("DressingOrLockerOrFittingRoomCourtHouse")
    DressingOrLockerOrFittingRoomExerciseCenter = new("DressingOrLockerOrFittingRoomExerciseCenter")
    DressingOrLockerOrFittingRoomGymnasium = new("DressingOrLockerOrFittingRoomGymnasium")
    DressingOrLockerOrFittingRoomPerformingArtsTheatre = new("DressingOrLockerOrFittingRoomPerformingArtsTheatre")
    ElectricalOrMechanical = new("ElectricalOrMechanical")
    ElevatorLobbies = new("ElevatorLobbies")
    EmergencyHospitalOrHealthcare = new("EmergencyHospitalOrHealthcare")
    EquipmentRoomManufacturingFacility = new("EquipmentRoomManufacturingFacility")
    ExamOrTreatmentHospitalOrHealthcare = new("ExamOrTreatmentHospitalOrHealthcare")
    ExcerciseAreaExerciseCenter = new("ExcerciseAreaExerciseCenter")
    ExcerciseAreaGymnasium = new("ExcerciseAreaGymnasium")
    ExhibitSpaceConventionCenter = new("ExhibitSpaceConventionCenter")
    FellowshipHallReligiousBuildings = new("FellowshipHallReligiousBuildings")
    FineMaterialWarehouse = new("FineMaterialWarehouse")
    FineMerchandiseSalesAreaRetail = new("FineMerchandiseSalesAreaRetail")
    FireStationEngineRoomPoliceOrFireStation = new("FireStationEngineRoomPoliceOrFireStation")
    FoodPreparation = new("FoodPreparation")
    GarageServiceOrRepairAutomotiveFacility = new("GarageServiceOrRepairAutomotiveFacility")
    GeneralExhibitionMuseum = new("GeneralExhibitionMuseum")
    GeneralHighBayManufacturingFacility = new("GeneralHighBayManufacturingFacility")
    GeneralLowBayManufacturingFacility = new("GeneralLowBayManufacturingFacility")
    HospitalNurseryHospitalOrHealthcare = new("HospitalNurseryHospitalOrHealthcare")
    HospitalOrMedicalSuppliesHospitalOrHealthcare = new("HospitalOrMedicalSuppliesHospitalOrHealthcare")
    HospitalOrRadiologyHospitalOrHealthcare = new("HospitalOrRadiologyHospitalOrHealthcare")
    HotelOrConferenceCenterConferenceOrMeeting = new("HotelOrConferenceCenterConferenceOrMeeting")
    InactiveStorage = new("InactiveStorage")
    JudgesChambersCourtHouse = new("JudgesChambersCourtHouse")
    LaboratoryOffice = new("LaboratoryOffice")
    LaundryIroningAndSorting = new("LaundryIroningAndSorting")
    LaundryWashingHospitalOrHealthcare = new("LaundryWashingHospitalOrHealthcare")
    LibraryAudioVisualLibraryAudioVisual = new("LibraryAudioVisualLibraryAudioVisual")
    LivingQuartersDormitory = new("LivingQuartersDormitory")
    LivingQuartersHotel = new("LivingQuartersHotel")
    LivingQuartersMotel = new("LivingQuartersMotel")
    Lobby = new("Lobby")
    LobbyAuditorium = new("LobbyAuditorium")
    LobbyHotel = new("LobbyHotel")
    LobbyMotionPictureTheatre = new("LobbyMotionPictureTheatre")
    LobbyPerformingArtsTheatre = new("LobbyPerformingArtsTheatre")
    LobbyPostOffice = new("LobbyPostOffice")
    LobbyReligiousBuildings = new("LobbyReligiousBuildings")
    LoungeOrRecreation = new("LoungeOrRecreation")
    MallConcourseSalesAreaRetail = new("MallConcourseSalesAreaRetail")
    MassMerchandisingSalesAreaRetail = new("MassMerchandisingSalesAreaRetail")
    MediumOrBulkyMaterialWarehouse = new("MediumOrBulkyMaterialWarehouse")
    MerchandisingSalesAreaRetail = new("MerchandisingSalesAreaRetail")
    MuseumAndGalleryStorage = new("MuseumAndGalleryStorage")
    NurseStationHospitalOrHealthcare = new("NurseStationHospitalOrHealthcare")
    OfficeCommonActivityAreasInactiveStorage = new("OfficeCommonActivityAreasInactiveStorage")
    OfficeEnclosed = new("OfficeEnclosed")
    OfficeOpenPlan = new("OfficeOpenPlan")
    OperatingRoomHospitalOrHealthcare = new("OperatingRoomHospitalOrHealthcare")
    OtherTelevisedPlayingAreaSportsArena = new("OtherTelevisedPlayingAreaSportsArena")
    ParkingAreaAttendantOnlyParkingGarage = new("ParkingAreaAttendantOnlyParkingGarage")
    ParkingAreaPedestrianParkingGarage = new("ParkingAreaPedestrianParkingGarage")
    PatientRoomHospitalOrHealthcare = new("PatientRoomHospitalOrHealthcare")
    PersonalServicesSalesAreaRetail = new("PersonalServicesSalesAreaRetail")
    PharmacyHospitalOrHealthcare = new("PharmacyHospitalOrHealthcare")
    PhysicalTherapyHospitalOrHealthcare = new("PhysicalTherapyHospitalOrHealthcare")
    PlayingAreaGymnasium = new("PlayingAreaGymnasium")
    Plenum = new("Plenum")
    PoliceStationLaboratoryPoliceOrFireStations = new("PoliceStationLaboratoryPoliceOrFireStations")
    PublicAndStaffLoungeHospitalOrHealthcare = new("PublicAndStaffLoungeHospitalOrHealthcare")
    ReadingAreaLibrary = new("ReadingAreaLibrary")
    ReceptionOrWaitingHotel = new("ReceptionOrWaitingHotel")
    ReceptionOrWaitingMotel = new("ReceptionOrWaitingMotel")
    ReceptionOrWaitingTransportation = new("ReceptionOrWaitingTransportation")
    RecoveryHospitalOrHealthcare = new("RecoveryHospitalOrHealthcare")
    RestorationMuseum = new("RestorationMuseum")
    Restrooms = new("Restrooms")
    RingSportsAreaSportsArena = new("RingSportsAreaSportsArena")
    ServerRoom = new("ServerRoom")
    SleepingQuartersPoliceOrFireStation = new("SleepingQuartersPoliceOrFireStation")
    SortingAreaPostOffice = new("SortingAreaPostOffice")
    SpecialtyStoreSalesAreaRetail = new("SpecialtyStoreSalesAreaRetail")
    StacksLibrary = new("StacksLibrary")
    StairsInactive = new("StairsInactive")
    Stairway = new("Stairway")
    SupermarketSalesAreaRetail = new("SupermarketSalesAreaRetail")
    TerminalTicketCounterTransportation = new("TerminalTicketCounterTransportation")
    WorkshopWorkshop = new("WorkshopWorkshop")
    WorshipPulpitChoirReligious = new("WorshipPulpitChoirReligious")
  end

  # {http://www.gbxml.org/schema}specificHeatUnitEnum
  class SpecificHeatUnitEnum < ::String
    BTUPerLbF = new("BTUPerLbF")
    JPerKgK = new("JPerKgK")
  end

  # {http://www.gbxml.org/schema}stageTypeEnum
  class StageTypeEnum < ::String
    C_1Stage = new("1Stage")
    C_2Stage = new("2Stage")
    Variable = new("Variable")
  end

  # {http://www.gbxml.org/schema}standardsTypeEnum
  class StandardsTypeEnum < ::String
    ANSI = new("ANSI")
    ARI = new("ARI")
    DOE = new("DOE")
    NEMA = new("NEMA")
  end

  # {http://www.gbxml.org/schema}stationIdTypeEnum
  class StationIdTypeEnum < ::String
    COOP = new("COOP")
    FAACallSign = new("FAACallSign")
    ICAO = new("ICAO")
    Modeled = new("Modeled")
    NWSLI = new("NWSLI")
    WBAN = new("WBAN")
    WMO = new("WMO")
  end

  # {http://www.gbxml.org/schema}supplementalHeatingCoilTypeEnum
  class SupplementalHeatingCoilTypeEnum < ::String
    Electric = new("Electric")
    Gas = new("Gas")
    HotWater = new("HotWater")
  end

  # {http://www.gbxml.org/schema}surfaceDescriptionEnum
  class SurfaceDescriptionEnum < ::String
    Both = new("Both")
    C_1 = new("1")
    C_2 = new("2")
  end

  # {http://www.gbxml.org/schema}surfaceTypeEnum
  class SurfaceTypeEnum < ::String
    Air = new("Air")
    Ceiling = new("Ceiling")
    EmbeddedColumn = new("EmbeddedColumn")
    ExposedFloor = new("ExposedFloor")
    ExteriorWall = new("ExteriorWall")
    FreestandingColumn = new("FreestandingColumn")
    InteriorFloor = new("InteriorFloor")
    InteriorWall = new("InteriorWall")
    RaisedFloor = new("RaisedFloor")
    Roof = new("Roof")
    Shade = new("Shade")
    SlabOnGrade = new("SlabOnGrade")
    UndergroundCeiling = new("UndergroundCeiling")
    UndergroundSlab = new("UndergroundSlab")
    UndergroundWall = new("UndergroundWall")
  end

  # {http://www.gbxml.org/schema}systemTypeEnum
  class SystemTypeEnum < ::String
    ActiveChilledBeams = new("ActiveChilledBeams")
    CeilingBypassVariableAirVolume = new("CeilingBypassVariableAirVolume")
    CentralHeatingConvectors = new("CentralHeatingConvectors")
    CentralHeatingHotAir = new("CentralHeatingHotAir")
    CentralHeatingRadiantFloor = new("CentralHeatingRadiantFloor")
    CentralHeatingRadiators = new("CentralHeatingRadiators")
    ConstantVolumeDualDuct = new("ConstantVolumeDualDuct")
    ConstantVolumeFixedOA = new("ConstantVolumeFixedOA")
    ConstantVolumeTerminalReheat = new("ConstantVolumeTerminalReheat")
    ConstantVolumeVariableOA = new("ConstantVolumeVariableOA")
    DualDuct = new("DualDuct")
    EvaporativeCooling = new("EvaporativeCooling")
    Exhaust = new("Exhaust")
    FanCoil = new("FanCoil")
    FloorPanelHeating = new("FloorPanelHeating")
    ForcedConvectionHeaterFlue = new("ForcedConvectionHeaterFlue")
    ForcedConvectionHeaterNoFlue = new("ForcedConvectionHeaterNoFlue")
    HeatingAndVentilating = new("HeatingAndVentilating")
    InductionUnit = new("InductionUnit")
    MultiZone = new("MultiZone")
    MultizoneHotDeckColdDeck = new("MultizoneHotDeckColdDeck")
    OtherRoomHeater = new("OtherRoomHeater")
    PackagedMultiZone = new("PackagedMultiZone")
    PackagedSingleZone = new("PackagedSingleZone")
    PackagedTerminalAirConditioner = new("PackagedTerminalAirConditioner")
    PackagedVariableAirVolume = new("PackagedVariableAirVolume")
    PackagedVariableVolumeVariableTemperature = new("PackagedVariableVolumeVariableTemperature")
    PoweredInductionUnit = new("PoweredInductionUnit")
    RadiantCooledCeilings = new("RadiantCooledCeilings")
    RadiantHeaterFlue = new("RadiantHeaterFlue")
    RadiantHeaterMultiburner = new("RadiantHeaterMultiburner")
    RadiantHeaterNoFlue = new("RadiantHeaterNoFlue")
    ReheatFan = new("ReheatFan")
    ResidentialCyclingFurnaceCyclingAC = new("ResidentialCyclingFurnaceCyclingAC")
    ResidentialVariableAirVolumeVariableTemperature = new("ResidentialVariableAirVolumeVariableTemperature")
    SingleZoneCeilingInduction = new("SingleZoneCeilingInduction")
    SingleZoneReheat = new("SingleZoneReheat")
    SplitSystemsWithMechanicalVentilation = new("SplitSystemsWithMechanicalVentilation")
    SplitSystemsWithMechanicalVentilationWithCooling = new("SplitSystemsWithMechanicalVentilationWithCooling")
    SplitSystemsWithNaturalVentilation = new("SplitSystemsWithNaturalVentilation")
    UnitHeater = new("UnitHeater")
    UnitVentilator = new("UnitVentilator")
    VAVDualDuct = new("VAVDualDuct")
    VAVIndoorPackagedCabinet = new("VAVIndoorPackagedCabinet")
    VAVReheatFan = new("VAVReheatFan")
    VAVSingleDuct = new("VAVSingleDuct")
    VariableAirVolume = new("VariableAirVolume")
    VariableRefrigerantFlow = new("VariableRefrigerantFlow")
    WaterLoopHeatPump = new("WaterLoopHeatPump")
  end

  # {http://www.gbxml.org/schema}temperatureUnitEnum
  class TemperatureUnitEnum < ::String
    C = new("C")
    F = new("F")
    K = new("K")
    R = new("R")
  end

  # {http://www.gbxml.org/schema}tempTypeEnum
  class TempTypeEnum < ::String
    Approach = new("Approach")
    C_Range = new("Range")
    ChilledWaterSupply = new("ChilledWaterSupply")
    CondenserWaterSupply = new("CondenserWaterSupply")
    CoolDesign = new("CoolDesign")
    Design = new("Design")
    EconomizerMaxLimitDewpoint = new("EconomizerMaxLimitDewpoint")
    EnteringDryBulb = new("EnteringDryBulb")
    EnteringWetBulb = new("EnteringWetBulb")
    HeatDesign = new("HeatDesign")
    HeatPumpDefrostMaxOADryBulb = new("HeatPumpDefrostMaxOADryBulb")
    HighTempLockout = new("HighTempLockout")
    LeavingChilledWater = new("LeavingChilledWater")
    LeavingCondenserWater = new("LeavingCondenserWater")
    LeavingDryBulb = new("LeavingDryBulb")
    LeavingWetBulb = new("LeavingWetBulb")
    LowTempLockout = new("LowTempLockout")
    Max = new("Max")
    Min = new("Min")
    PreheatCoilDesignSetpoint = new("PreheatCoilDesignSetpoint")
    SupplementalHeatingCoilMaxOADryBulb = new("SupplementalHeatingCoilMaxOADryBulb")
    Throttle = new("Throttle")
  end

  # {http://www.gbxml.org/schema}timePeriodEnum
  class TimePeriodEnum < ::String
    Annual = new("Annual")
    Apr = new("Apr")
    Aug = new("Aug")
    Dec = new("Dec")
    Feb = new("Feb")
    Jan = new("Jan")
    Jul = new("Jul")
    Jun = new("Jun")
    Mar = new("Mar")
    May = new("May")
    Nov = new("Nov")
    Oct = new("Oct")
    Sep = new("Sep")
  end

  # {http://www.gbxml.org/schema}timeUnitEnum
  class TimeUnitEnum < ::String
    Day = new("Day")
    Hour = new("Hour")
    Minute = new("Minute")
    Month = new("Month")
    Week = new("Week")
    Year = new("Year")
  end

  # {http://www.gbxml.org/schema}transportationTypeEnum
  class TransportationTypeEnum < ::String
    Airplane = new("Airplane")
    Bike = new("Bike")
    Bus = new("Bus")
    Car = new("Car")
    Ferry = new("Ferry")
    LightRail = new("LightRail")
    Monorail = new("Monorail")
    Train = new("Train")
  end

  # {http://www.gbxml.org/schema}unitlessSmallUnitEnum
  class UnitlessSmallUnitEnum < ::String
    MilliGramsPerCubicMeter = new("milliGramsPerCubicMeter")
    PartPerMillionByVolume = new("PartPerMillionByVolume")
    Percent = new("Percent")
  end

  # {http://www.gbxml.org/schema}unitlessUnitEnum
  class UnitlessUnitEnum < ::String
    Fraction = new("Fraction")
    Percent = new("Percent")
  end

  # {http://www.gbxml.org/schema}valueTypeEnum
  class ValueTypeEnum < ::String
    Historical = new("Historical")
    Measured = new("Measured")
    Rated = new("Rated")
    Simulated = new("Simulated")
  end

  # {http://www.gbxml.org/schema}vegetationTypeEnum
  class VegetationTypeEnum < ::String
    Bushes = new("Bushes")
    DeciduousShrubs = new("DeciduousShrubs")
    DeciduousTrees = new("DeciduousTrees")
    EvergreenShrubs = new("EvergreenShrubs")
    EvergreenTrees = new("EvergreenTrees")
    Grass = new("Grass")
    Moss = new("Moss")
    Plants = new("Plants")
    Trees = new("Trees")
  end

  # {http://www.gbxml.org/schema}velocityUnitEnum
  class VelocityUnitEnum < ::String
    Knots = new("Knots")
    MetersPerSecond = new("MetersPerSecond")
    MilesPerHour = new("MilesPerHour")
  end

  # {http://www.gbxml.org/schema}windSpeedEnum
  class WindSpeedEnum < ::String
    CutInWindSpeed = new("CutInWindSpeed")
    CutOutWindSpeed = new("CutOutWindSpeed")
    RatedWindSpeed = new("RatedWindSpeed")
  end

  # {http://www.gbxml.org/schema}versionEnum
  class VersionEnum < ::String
    C_035 = new("0.35")
    C_036 = new("0.36")
    C_037 = new("0.37")
    C_500 = new("5.00")
    C_501 = new("5.01")
    C_510 = new("5.10")
    C_511 = new("5.11")
    C_512 = new("5.12")
    C_600 = new("6.00")
    C_601 = new("6.01")
  end

  # {http://www.gbxml.org/schema}viscosityUnitEnum
  class ViscosityUnitEnum < ::String
    KgPerMSec = new("KgPerMSec")
    PoundPerFootSec = new("PoundPerFootSec")
  end

  # {http://www.gbxml.org/schema}viscosityFofTUnitEnum
  class ViscosityFofTUnitEnum < ::String
    KgPerMSecK = new("KgPerMSecK")
    PoundPerFootSecF = new("PoundPerFootSecF")
  end

  # {http://www.gbxml.org/schema}volumeUnitEnum
  class VolumeUnitEnum < ::String
    CubicCentimeters = new("CubicCentimeters")
    CubicFeet = new("CubicFeet")
    CubicInches = new("CubicInches")
    CubicKilometers = new("CubicKilometers")
    CubicMeters = new("CubicMeters")
    CubicMiles = new("CubicMiles")
    CubicMillimeters = new("CubicMillimeters")
    CubicYards = new("CubicYards")
  end

  # {http://www.gbxml.org/schema}wallASHRAEGroupEnum
  class WallASHRAEGroupEnum < ::String
    A = new("A")
    B = new("B")
    C = new("C")
    D = new("D")
    E = new("E")
    F = new("F")
    G = new("G")
  end

  # {http://www.gbxml.org/schema}wallColorEnum
  class WallColorEnum < ::String
    Dark = new("Dark")
    Light = new("Light")
    Medium = new("Medium")
  end

  # {http://www.gbxml.org/schema}wallCTSTypeEnum
  class WallCTSTypeEnum < ::String
    C_1 = new("1")
    C_10 = new("10")
    C_11 = new("11")
    C_12 = new("12")
    C_13 = new("13")
    C_14 = new("14")
    C_15 = new("15")
    C_16 = new("16")
    C_17 = new("17")
    C_18 = new("18")
    C_19 = new("19")
    C_2 = new("2")
    C_20 = new("20")
    C_21 = new("21")
    C_22 = new("22")
    C_23 = new("23")
    C_24 = new("24")
    C_25 = new("25")
    C_26 = new("26")
    C_27 = new("27")
    C_28 = new("28")
    C_29 = new("29")
    C_3 = new("3")
    C_30 = new("30")
    C_31 = new("31")
    C_32 = new("32")
    C_33 = new("33")
    C_34 = new("34")
    C_35 = new("35")
    C_4 = new("4")
    C_5 = new("5")
    C_6 = new("6")
    C_7 = new("7")
    C_8 = new("8")
    C_9 = new("9")
  end

  # {http://www.gbxml.org/schema}surfaceReferenceLocationEnum
  class SurfaceReferenceLocationEnum < ::String
    Centerline = new("Centerline")
    InteriorSurface = new("InteriorSurface")
  end

  # {http://www.gbxml.org/schema}wallGroupManualJEnum
  class WallGroupManualJEnum < ::String
    A = new("A")
    B = new("B")
    C = new("C")
    D = new("D")
    E = new("E")
    F = new("F")
    G = new("G")
    H = new("H")
    I = new("I")
    J = new("J")
    K = new("K")
  end

  # {http://www.gbxml.org/schema}waterUseUnitEnum
  class WaterUseUnitEnum < ::String
    CubicMeters = new("CubicMeters")
    Gallons = new("Gallons")
    Kilograms = new("Kilograms")
    Liters = new("Liters")
    Tons = new("Tons")
  end

  # {http://www.gbxml.org/schema}weightUnitEnum
  class WeightUnitEnum < ::String
    Kilograms = new("Kilograms")
    Pounds = new("Pounds")
    Tons = new("Tons")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingSync
  #   programs - BuildingSync::BuildingSync::Programs
  #   facilities - BuildingSync::BuildingSync::Facilities
  #   xmlattr_version - SOAP::SOAPString
  class BuildingSync
    AttrVersion = XSD::QName.new(nil, "version")

    # inner class for member: Programs
    # {http://buildingsync.net/schemas/bedes-auc/2019}Programs
    class Programs < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Program
      #   programDate - SOAP::SOAPDate
      #   programFundingSource - SOAP::SOAPString
      #   programClassification - SOAP::SOAPString
      class Program
        attr_accessor :programDate
        attr_accessor :programFundingSource
        attr_accessor :programClassification

        def initialize(programDate = nil, programFundingSource = nil, programClassification = nil)
          @programDate = programDate
          @programFundingSource = programFundingSource
          @programClassification = programClassification
        end
      end
    end

    # inner class for member: Facilities
    # {http://buildingsync.net/schemas/bedes-auc/2019}Facilities
    class Facilities < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}Facility
      #   sites - BuildingSync::BuildingSync::Facilities::Facility::Sites
      #   systems - BuildingSync::BuildingSync::Facilities::Facility::Systems
      #   schedules - BuildingSync::BuildingSync::Facilities::Facility::Schedules
      #   measures - BuildingSync::BuildingSync::Facilities::Facility::Measures
      #   reports - BuildingSync::BuildingSync::Facilities::Facility::Reports
      #   contacts - BuildingSync::BuildingSync::Facilities::Facility::Contacts
      #   tenants - BuildingSync::BuildingSync::Facilities::Facility::Tenants
      #   userDefinedFields - BuildingSync::UserDefinedFields
      #   xmlattr_ID - SOAP::SOAPID
      class Facility
        AttrID = XSD::QName.new(nil, "ID")

        # inner class for member: Sites
        # {http://buildingsync.net/schemas/bedes-auc/2019}Sites
        class Sites < ::Array
        end

        # inner class for member: Systems
        # {http://buildingsync.net/schemas/bedes-auc/2019}Systems
        #   hVACSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::HVACSystems
        #   lightingSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::LightingSystems
        #   domesticHotWaterSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::DomesticHotWaterSystems
        #   cookingSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::CookingSystems
        #   refrigerationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::RefrigerationSystems
        #   dishwasherSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::DishwasherSystems
        #   laundrySystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::LaundrySystems
        #   pumpSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::PumpSystems
        #   fanSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::FanSystems
        #   motorSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::MotorSystems
        #   heatRecoverySystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::HeatRecoverySystems
        #   wallSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::WallSystems
        #   roofSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::RoofSystems
        #   ceilingSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::CeilingSystems
        #   fenestrationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::FenestrationSystems
        #   exteriorFloorSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::ExteriorFloorSystems
        #   foundationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::FoundationSystems
        #   criticalITSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::CriticalITSystems
        #   plugLoads - BuildingSync::BuildingSync::Facilities::Facility::Systems::PlugLoads
        #   processLoads - BuildingSync::BuildingSync::Facilities::Facility::Systems::ProcessLoads
        #   conveyanceSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::ConveyanceSystems
        #   onsiteStorageTransmissionGenerationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::OnsiteStorageTransmissionGenerationSystems
        #   pools - BuildingSync::BuildingSync::Facilities::Facility::Systems::Pools
        #   waterUses - BuildingSync::BuildingSync::Facilities::Facility::Systems::WaterUses
        #   airInfiltrationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::AirInfiltrationSystems
        #   waterInfiltrationSystems - BuildingSync::BuildingSync::Facilities::Facility::Systems::WaterInfiltrationSystems
        class Systems

          # inner class for member: HVACSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}HVACSystems
          class HVACSystems < ::Array
          end

          # inner class for member: LightingSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}LightingSystems
          class LightingSystems < ::Array
          end

          # inner class for member: DomesticHotWaterSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}DomesticHotWaterSystems
          class DomesticHotWaterSystems < ::Array
          end

          # inner class for member: CookingSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}CookingSystems
          class CookingSystems < ::Array
          end

          # inner class for member: RefrigerationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerationSystems
          class RefrigerationSystems < ::Array
          end

          # inner class for member: DishwasherSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}DishwasherSystems
          class DishwasherSystems < ::Array
          end

          # inner class for member: LaundrySystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}LaundrySystems
          class LaundrySystems < ::Array
          end

          # inner class for member: PumpSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}PumpSystems
          class PumpSystems < ::Array
          end

          # inner class for member: FanSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}FanSystems
          class FanSystems < ::Array
          end

          # inner class for member: MotorSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}MotorSystems
          class MotorSystems < ::Array
          end

          # inner class for member: HeatRecoverySystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}HeatRecoverySystems
          class HeatRecoverySystems < ::Array
          end

          # inner class for member: WallSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}WallSystems
          class WallSystems < ::Array
          end

          # inner class for member: RoofSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}RoofSystems
          class RoofSystems < ::Array
          end

          # inner class for member: CeilingSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}CeilingSystems
          class CeilingSystems < ::Array
          end

          # inner class for member: FenestrationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationSystems
          class FenestrationSystems < ::Array
          end

          # inner class for member: ExteriorFloorSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}ExteriorFloorSystems
          class ExteriorFloorSystems < ::Array
          end

          # inner class for member: FoundationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationSystems
          class FoundationSystems < ::Array
          end

          # inner class for member: CriticalITSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}CriticalITSystems
          class CriticalITSystems < ::Array
          end

          # inner class for member: PlugLoads
          # {http://buildingsync.net/schemas/bedes-auc/2019}PlugLoads
          class PlugLoads < ::Array
          end

          # inner class for member: ProcessLoads
          # {http://buildingsync.net/schemas/bedes-auc/2019}ProcessLoads
          class ProcessLoads < ::Array
          end

          # inner class for member: ConveyanceSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}ConveyanceSystems
          class ConveyanceSystems < ::Array
          end

          # inner class for member: OnsiteStorageTransmissionGenerationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}OnsiteStorageTransmissionGenerationSystems
          class OnsiteStorageTransmissionGenerationSystems < ::Array
          end

          # inner class for member: Pools
          # {http://buildingsync.net/schemas/bedes-auc/2019}Pools
          class Pools < ::Array
          end

          # inner class for member: WaterUses
          # {http://buildingsync.net/schemas/bedes-auc/2019}WaterUses
          class WaterUses < ::Array
          end

          # inner class for member: AirInfiltrationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}AirInfiltrationSystems
          class AirInfiltrationSystems < ::Array

            # {http://buildingsync.net/schemas/bedes-auc/2019}AirInfiltrationSystem
            #   airInfiltrationNotes - SOAP::SOAPString
            #   tightness - BuildingSync::Tightness
            #   airInfiltrationValue - BuildingSync::BuildingSync::Facilities::Facility::Systems::AirInfiltrationSystems::AirInfiltrationSystem::AirInfiltrationValue
            #   airInfiltrationValueUnits - SOAP::SOAPString
            #   airInfiltrationTest - SOAP::SOAPString
            #   linkedPremises - BuildingSync::LinkedPremises
            #   userDefinedFields - BuildingSync::UserDefinedFields
            #   xmlattr_ID - SOAP::SOAPID
            class AirInfiltrationSystem
              AttrID = XSD::QName.new(nil, "ID")

              # inner class for member: AirInfiltrationValue
              # {http://buildingsync.net/schemas/bedes-auc/2019}AirInfiltrationValue
              #   xmlattr_Source - SOAP::SOAPString
              class AirInfiltrationValue < ::String
                AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

                def __xmlattr
                  @__xmlattr ||= {}
                end

                def xmlattr_Source
                  __xmlattr[AttrSource]
                end

                def xmlattr_Source=(value)
                  __xmlattr[AttrSource] = value
                end

                def initialize(*arg)
                  super
                  @__xmlattr = {}
                end
              end

              attr_accessor :airInfiltrationNotes
              attr_accessor :tightness
              attr_accessor :airInfiltrationValue
              attr_accessor :airInfiltrationValueUnits
              attr_accessor :airInfiltrationTest
              attr_accessor :linkedPremises
              attr_accessor :userDefinedFields

              def __xmlattr
                @__xmlattr ||= {}
              end

              def xmlattr_ID
                __xmlattr[AttrID]
              end

              def xmlattr_ID=(value)
                __xmlattr[AttrID] = value
              end

              def initialize(airInfiltrationNotes = nil, tightness = nil, airInfiltrationValue = nil, airInfiltrationValueUnits = nil, airInfiltrationTest = nil, linkedPremises = nil, userDefinedFields = nil)
                @airInfiltrationNotes = airInfiltrationNotes
                @tightness = tightness
                @airInfiltrationValue = airInfiltrationValue
                @airInfiltrationValueUnits = airInfiltrationValueUnits
                @airInfiltrationTest = airInfiltrationTest
                @linkedPremises = linkedPremises
                @userDefinedFields = userDefinedFields
                @__xmlattr = {}
              end
            end
          end

          # inner class for member: WaterInfiltrationSystems
          # {http://buildingsync.net/schemas/bedes-auc/2019}WaterInfiltrationSystems
          class WaterInfiltrationSystems < ::Array

            # {http://buildingsync.net/schemas/bedes-auc/2019}WaterInfiltrationSystem
            #   waterInfiltrationNotes - SOAP::SOAPString
            #   locationsOfExteriorWaterIntrusionDamages - BuildingSync::BuildingSync::Facilities::Facility::Systems::WaterInfiltrationSystems::WaterInfiltrationSystem::LocationsOfExteriorWaterIntrusionDamages
            #   locationsOfInteriorWaterIntrusionDamages - BuildingSync::BuildingSync::Facilities::Facility::Systems::WaterInfiltrationSystems::WaterInfiltrationSystem::LocationsOfInteriorWaterIntrusionDamages
            #   linkedPremises - BuildingSync::LinkedPremises
            #   userDefinedFields - BuildingSync::UserDefinedFields
            class WaterInfiltrationSystem

              # inner class for member: LocationsOfExteriorWaterIntrusionDamages
              # {http://buildingsync.net/schemas/bedes-auc/2019}LocationsOfExteriorWaterIntrusionDamages
              class LocationsOfExteriorWaterIntrusionDamages < ::Array
              end

              # inner class for member: LocationsOfInteriorWaterIntrusionDamages
              # {http://buildingsync.net/schemas/bedes-auc/2019}LocationsOfInteriorWaterIntrusionDamages
              class LocationsOfInteriorWaterIntrusionDamages < ::Array
              end

              attr_accessor :waterInfiltrationNotes
              attr_accessor :locationsOfExteriorWaterIntrusionDamages
              attr_accessor :locationsOfInteriorWaterIntrusionDamages
              attr_accessor :linkedPremises
              attr_accessor :userDefinedFields

              def initialize(waterInfiltrationNotes = nil, locationsOfExteriorWaterIntrusionDamages = nil, locationsOfInteriorWaterIntrusionDamages = nil, linkedPremises = nil, userDefinedFields = nil)
                @waterInfiltrationNotes = waterInfiltrationNotes
                @locationsOfExteriorWaterIntrusionDamages = locationsOfExteriorWaterIntrusionDamages
                @locationsOfInteriorWaterIntrusionDamages = locationsOfInteriorWaterIntrusionDamages
                @linkedPremises = linkedPremises
                @userDefinedFields = userDefinedFields
              end
            end
          end

          attr_accessor :hVACSystems
          attr_accessor :lightingSystems
          attr_accessor :domesticHotWaterSystems
          attr_accessor :cookingSystems
          attr_accessor :refrigerationSystems
          attr_accessor :dishwasherSystems
          attr_accessor :laundrySystems
          attr_accessor :pumpSystems
          attr_accessor :fanSystems
          attr_accessor :motorSystems
          attr_accessor :heatRecoverySystems
          attr_accessor :wallSystems
          attr_accessor :roofSystems
          attr_accessor :ceilingSystems
          attr_accessor :fenestrationSystems
          attr_accessor :exteriorFloorSystems
          attr_accessor :foundationSystems
          attr_accessor :criticalITSystems
          attr_accessor :plugLoads
          attr_accessor :processLoads
          attr_accessor :conveyanceSystems
          attr_accessor :onsiteStorageTransmissionGenerationSystems
          attr_accessor :pools
          attr_accessor :waterUses
          attr_accessor :airInfiltrationSystems
          attr_accessor :waterInfiltrationSystems

          def initialize(hVACSystems = nil, lightingSystems = nil, domesticHotWaterSystems = nil, cookingSystems = nil, refrigerationSystems = nil, dishwasherSystems = nil, laundrySystems = nil, pumpSystems = nil, fanSystems = nil, motorSystems = nil, heatRecoverySystems = nil, wallSystems = nil, roofSystems = nil, ceilingSystems = nil, fenestrationSystems = nil, exteriorFloorSystems = nil, foundationSystems = nil, criticalITSystems = nil, plugLoads = nil, processLoads = nil, conveyanceSystems = nil, onsiteStorageTransmissionGenerationSystems = nil, pools = nil, waterUses = nil, airInfiltrationSystems = nil, waterInfiltrationSystems = nil)
            @hVACSystems = hVACSystems
            @lightingSystems = lightingSystems
            @domesticHotWaterSystems = domesticHotWaterSystems
            @cookingSystems = cookingSystems
            @refrigerationSystems = refrigerationSystems
            @dishwasherSystems = dishwasherSystems
            @laundrySystems = laundrySystems
            @pumpSystems = pumpSystems
            @fanSystems = fanSystems
            @motorSystems = motorSystems
            @heatRecoverySystems = heatRecoverySystems
            @wallSystems = wallSystems
            @roofSystems = roofSystems
            @ceilingSystems = ceilingSystems
            @fenestrationSystems = fenestrationSystems
            @exteriorFloorSystems = exteriorFloorSystems
            @foundationSystems = foundationSystems
            @criticalITSystems = criticalITSystems
            @plugLoads = plugLoads
            @processLoads = processLoads
            @conveyanceSystems = conveyanceSystems
            @onsiteStorageTransmissionGenerationSystems = onsiteStorageTransmissionGenerationSystems
            @pools = pools
            @waterUses = waterUses
            @airInfiltrationSystems = airInfiltrationSystems
            @waterInfiltrationSystems = waterInfiltrationSystems
          end
        end

        # inner class for member: Schedules
        # {http://buildingsync.net/schemas/bedes-auc/2019}Schedules
        class Schedules < ::Array
        end

        # inner class for member: Measures
        # {http://buildingsync.net/schemas/bedes-auc/2019}Measures
        class Measures < ::Array
        end

        # inner class for member: Reports
        # {http://buildingsync.net/schemas/bedes-auc/2019}Reports
        class Reports < ::Array
        end

        # inner class for member: Contacts
        # {http://buildingsync.net/schemas/bedes-auc/2019}Contacts
        class Contacts < ::Array
        end

        # inner class for member: Tenants
        # {http://buildingsync.net/schemas/bedes-auc/2019}Tenants
        class Tenants < ::Array
        end

        attr_accessor :sites
        attr_accessor :systems
        attr_accessor :schedules
        attr_accessor :measures
        attr_accessor :reports
        attr_accessor :contacts
        attr_accessor :tenants
        attr_accessor :userDefinedFields

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_ID
          __xmlattr[AttrID]
        end

        def xmlattr_ID=(value)
          __xmlattr[AttrID] = value
        end

        def initialize(sites = nil, systems = nil, schedules = nil, measures = nil, reports = nil, contacts = nil, tenants = nil, userDefinedFields = nil)
          @sites = sites
          @systems = systems
          @schedules = schedules
          @measures = measures
          @reports = reports
          @contacts = contacts
          @tenants = tenants
          @userDefinedFields = userDefinedFields
          @__xmlattr = {}
        end
      end
    end

    attr_accessor :programs
    attr_accessor :facilities

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_version
      __xmlattr[AttrVersion]
    end

    def xmlattr_version=(value)
      __xmlattr[AttrVersion] = value
    end

    def initialize(programs = nil, facilities = nil)
      @programs = programs
      @facilities = facilities
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Quantity
  #   xmlattr_Source - SOAP::SOAPString
  class Quantity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Location
  class Location < ::String
    Attic = new("Attic")
    Closet = new("Closet")
    Exterior = new("Exterior")
    Garage = new("Garage")
    Interior = new("Interior")
    MechanicalFloor = new("Mechanical Floor")
    MechanicalRoom = new("Mechanical Room")
    Other = new("Other")
    Penthouse = new("Penthouse")
    Roof = new("Roof")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Capacity
  #   xmlattr_Source - SOAP::SOAPString
  class Capacity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CapacityUnits
  class CapacityUnits < ::String
    BtuHr = new("Btu/hr")
    BtuS = new("Btu/s")
    CalH = new("cal/h")
    Cfh = new("cfh")
    CoolingTon = new("Cooling ton")
    Ft3Min = new("ft3/min")
    FtLbfH = new("ft-lbf/h")
    FtLbfMin = new("ft-lbf/min")
    Gpm = new("gpm")
    Hp = new("hp")
    KBtuHr = new("kBtu/hr")
    KW = new("kW")
    KcfH = new("kcf/h")
    KlbsH = new("Klbs/h")
    LbsH = new("lbs/h")
    MCFDay = new("MCF/day")
    MMBtuHr = new("MMBtu/hr")
    MW = new("MW")
    MlbsH = new("Mlbs/h")
    Other = new("Other")
    ThermsH = new("therms/h")
    W = new("W")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlTechnology
  class ControlTechnology < ::String
    AlwaysOn = new("Always On")
    EMCS = new("EMCS")
    ManualAnalogThermostat = new("Manual Analog Thermostat")
    ManualDigitalThermostat = new("Manual Digital Thermostat")
    ManualOnOff = new("Manual On/Off")
    None = new("None")
    Other = new("Other")
    ProgrammableThermostat = new("Programmable Thermostat")
    Timer = new("Timer")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Refrigerant
  class Refrigerant < ::String
    Other = new("Other")
    R123 = new("R123")
    R134a = new("R134a")
    R22 = new("R22")
    R290 = new("R290")
    R401a = new("R401a")
    R404a = new("R404a")
    R407a = new("R407a")
    R407c = new("R407c")
    R408a = new("R408a")
    R409a = new("R409a")
    R410a = new("R410a")
    R500 = new("R500")
    R502 = new("R502")
    R600a = new("R600a")
    R717 = new("R717")
    R718 = new("R718")
    R744 = new("R744")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedPremises
  #   facility - BuildingSync::LinkedPremises::Facility
  #   site - BuildingSync::LinkedPremises::Site
  #   building - BuildingSync::LinkedPremises::Building
  #   section - BuildingSync::LinkedPremises::Section
  #   thermalZone - BuildingSync::LinkedPremises::ThermalZone
  #   space - BuildingSync::LinkedPremises::Space
  class LinkedPremises

    # inner class for member: Facility
    # {http://buildingsync.net/schemas/bedes-auc/2019}Facility
    class Facility < ::Array
    end

    # inner class for member: Site
    # {http://buildingsync.net/schemas/bedes-auc/2019}Site
    class Site < ::Array
    end

    # inner class for member: Building
    # {http://buildingsync.net/schemas/bedes-auc/2019}Building
    class Building < ::Array
    end

    # inner class for member: Section
    # {http://buildingsync.net/schemas/bedes-auc/2019}Section
    class Section < ::Array
    end

    # inner class for member: ThermalZone
    # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZone
    class ThermalZone < ::Array
    end

    # inner class for member: Space
    # {http://buildingsync.net/schemas/bedes-auc/2019}Space
    class Space < ::Array
    end

    attr_accessor :facility
    attr_accessor :site
    attr_accessor :building
    attr_accessor :section
    attr_accessor :thermalZone
    attr_accessor :space

    def initialize(facility = nil, site = nil, building = nil, section = nil, thermalZone = nil, space = nil)
      @facility = facility
      @site = site
      @building = building
      @section = section
      @thermalZone = thermalZone
      @space = space
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedPremisesOrSystem
  #   facility - BuildingSync::LinkedPremisesOrSystem::Facility
  #   site - BuildingSync::LinkedPremisesOrSystem::Site
  #   building - BuildingSync::LinkedPremisesOrSystem::Building
  #   section - BuildingSync::LinkedPremisesOrSystem::Section
  #   thermalZone - BuildingSync::LinkedPremisesOrSystem::ThermalZone
  #   space - BuildingSync::LinkedPremisesOrSystem::Space
  #   system - BuildingSync::LinkedPremisesOrSystem::System
  class LinkedPremisesOrSystem

    # inner class for member: Facility
    # {http://buildingsync.net/schemas/bedes-auc/2019}Facility
    class Facility < ::Array
    end

    # inner class for member: Site
    # {http://buildingsync.net/schemas/bedes-auc/2019}Site
    class Site < ::Array
    end

    # inner class for member: Building
    # {http://buildingsync.net/schemas/bedes-auc/2019}Building
    class Building < ::Array
    end

    # inner class for member: Section
    # {http://buildingsync.net/schemas/bedes-auc/2019}Section
    class Section < ::Array
    end

    # inner class for member: ThermalZone
    # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZone
    class ThermalZone < ::Array
    end

    # inner class for member: Space
    # {http://buildingsync.net/schemas/bedes-auc/2019}Space
    class Space < ::Array
    end

    # inner class for member: System
    # {http://buildingsync.net/schemas/bedes-auc/2019}System
    class System < ::Array
    end

    attr_accessor :facility
    attr_accessor :site
    attr_accessor :building
    attr_accessor :section
    attr_accessor :thermalZone
    attr_accessor :space
    attr_accessor :system

    def initialize(facility = nil, site = nil, building = nil, section = nil, thermalZone = nil, space = nil, system = nil)
      @facility = facility
      @site = site
      @building = building
      @section = section
      @thermalZone = thermalZone
      @space = space
      @system = system
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Address
  #   streetAddressDetail - BuildingSync::Address::StreetAddressDetail
  #   city - SOAP::SOAPString
  #   state - BuildingSync::State
  #   postalCode - SOAP::SOAPString
  #   postalCodePlus4 - SOAP::SOAPString
  #   county - SOAP::SOAPString
  #   country - SOAP::SOAPString
  class Address

    # inner class for member: StreetAddressDetail
    # {http://buildingsync.net/schemas/bedes-auc/2019}StreetAddressDetail
    #   simplified - BuildingSync::Address::StreetAddressDetail::Simplified
    #   complex - BuildingSync::Address::StreetAddressDetail::Complex
    class StreetAddressDetail

      # inner class for member: Simplified
      # {http://buildingsync.net/schemas/bedes-auc/2019}Simplified
      #   streetAddress - SOAP::SOAPString
      #   streetAdditionalInfo - SOAP::SOAPString
      class Simplified
        attr_accessor :streetAddress
        attr_accessor :streetAdditionalInfo

        def initialize(streetAddress = nil, streetAdditionalInfo = nil)
          @streetAddress = streetAddress
          @streetAdditionalInfo = streetAdditionalInfo
        end
      end

      # inner class for member: Complex
      # {http://buildingsync.net/schemas/bedes-auc/2019}Complex
      #   streetNumberPrefix - SOAP::SOAPString
      #   streetNumberNumeric - BuildingSync::Address::StreetAddressDetail::Complex::StreetNumberNumeric
      #   streetNumberSuffix - SOAP::SOAPString
      #   streetDirPrefix - SOAP::SOAPString
      #   streetName - SOAP::SOAPString
      #   streetAdditionalInfo - SOAP::SOAPString
      #   streetSuffix - SOAP::SOAPString
      #   streetSuffixModifier - SOAP::SOAPString
      #   streetDirSuffix - SOAP::SOAPString
      #   subaddressType - SOAP::SOAPString
      #   subaddressIdentifier - SOAP::SOAPString
      class Complex

        # inner class for member: StreetNumberNumeric
        # {http://buildingsync.net/schemas/bedes-auc/2019}StreetNumberNumeric
        #   xmlattr_Source - SOAP::SOAPString
        class StreetNumberNumeric < ::String
          AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_Source
            __xmlattr[AttrSource]
          end

          def xmlattr_Source=(value)
            __xmlattr[AttrSource] = value
          end

          def initialize(*arg)
            super
            @__xmlattr = {}
          end
        end

        attr_accessor :streetNumberPrefix
        attr_accessor :streetNumberNumeric
        attr_accessor :streetNumberSuffix
        attr_accessor :streetDirPrefix
        attr_accessor :streetName
        attr_accessor :streetAdditionalInfo
        attr_accessor :streetSuffix
        attr_accessor :streetSuffixModifier
        attr_accessor :streetDirSuffix
        attr_accessor :subaddressType
        attr_accessor :subaddressIdentifier

        def initialize(streetNumberPrefix = nil, streetNumberNumeric = nil, streetNumberSuffix = nil, streetDirPrefix = nil, streetName = nil, streetAdditionalInfo = nil, streetSuffix = nil, streetSuffixModifier = nil, streetDirSuffix = nil, subaddressType = nil, subaddressIdentifier = nil)
          @streetNumberPrefix = streetNumberPrefix
          @streetNumberNumeric = streetNumberNumeric
          @streetNumberSuffix = streetNumberSuffix
          @streetDirPrefix = streetDirPrefix
          @streetName = streetName
          @streetAdditionalInfo = streetAdditionalInfo
          @streetSuffix = streetSuffix
          @streetSuffixModifier = streetSuffixModifier
          @streetDirSuffix = streetDirSuffix
          @subaddressType = subaddressType
          @subaddressIdentifier = subaddressIdentifier
        end
      end

      attr_accessor :simplified
      attr_accessor :complex

      def initialize(simplified = nil, complex = nil)
        @simplified = simplified
        @complex = complex
      end
    end

    attr_accessor :streetAddressDetail
    attr_accessor :city
    attr_accessor :state
    attr_accessor :postalCode
    attr_accessor :postalCodePlus4
    attr_accessor :county
    attr_accessor :country

    def initialize(streetAddressDetail = nil, city = nil, state = nil, postalCode = nil, postalCodePlus4 = nil, county = nil, country = nil)
      @streetAddressDetail = streetAddressDetail
      @city = city
      @state = state
      @postalCode = postalCode
      @postalCodePlus4 = postalCodePlus4
      @county = county
      @country = country
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ThirdPartyCertification
  class ThirdPartyCertification < ::String
    CEETier1 = new("CEE Tier 1")
    CEETier2 = new("CEE Tier 2")
    CEETier3 = new("CEE Tier 3")
    ENERGYSTAR = new("ENERGY STAR")
    ENERGYSTARMostEfficient = new("ENERGY STAR Most Efficient")
    FEMPDesignated = new("FEMP Designated")
    None = new("None")
    Other = new("Other")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Ownership
  class Ownership < ::String
    CorporationPartnershipLLC = new("Corporation/partnership/LLC")
    FederalGovernment = new("Federal government")
    Franchise = new("Franchise")
    Government = new("Government")
    Individual = new("Individual")
    LocalGovernment = new("Local government")
    NonProfitOrganization = new("Non-profit organization")
    Other = new("Other")
    OtherNonGovernment = new("Other non-government")
    PrivatelyOwned = new("Privately owned")
    PropertyManagementCompany = new("Property management company")
    ReligiousOrganization = new("Religious organization")
    StateGovernment = new("State government")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OwnershipStatus
  class OwnershipStatus < ::String
    Leased = new("Leased")
    Mortgaged = new("Mortgaged")
    OccupiedWithoutPaymentOfRent = new("Occupied without payment of rent")
    Other = new("Other")
    Owned = new("Owned")
    Rented = new("Rented")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}IdentifierLabel
  class IdentifierLabel < ::String
    AssessorParcelNumber = new("Assessor parcel number")
    Custom = new("Custom")
    FederalRealProperty = new("Federal real property")
    Listing = new("Listing")
    Name = new("Name")
    Other = new("Other")
    PortfolioManagerPropertyID = new("Portfolio Manager Property ID")
    PortfolioManagerStandard = new("Portfolio Manager Standard")
    Premises = new("Premises")
    TaxBookNumber = new("Tax book number")
    TaxMapNumber = new("Tax map number")
    TaxParcelLetter = new("Tax parcel letter")
    UBID = new("UBID")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PremisesIdentifiers
  class PremisesIdentifiers < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}PremisesIdentifier
    #   identifierLabel - SOAP::SOAPString
    #   identifierCustomName - SOAP::SOAPString
    #   identifierValue - SOAP::SOAPString
    class PremisesIdentifier
      attr_accessor :identifierLabel
      attr_accessor :identifierCustomName
      attr_accessor :identifierValue

      def initialize(identifierLabel = nil, identifierCustomName = nil, identifierValue = nil)
        @identifierLabel = identifierLabel
        @identifierCustomName = identifierCustomName
        @identifierValue = identifierValue
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TypicalOccupantUsages
  class TypicalOccupantUsages < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}TypicalOccupantUsage
    #   typicalOccupantUsageValue - SOAP::SOAPDecimal
    #   typicalOccupantUsageUnits - SOAP::SOAPString
    class TypicalOccupantUsage
      attr_accessor :typicalOccupantUsageValue
      attr_accessor :typicalOccupantUsageUnits

      def initialize(typicalOccupantUsageValue = nil, typicalOccupantUsageUnits = nil)
        @typicalOccupantUsageValue = typicalOccupantUsageValue
        @typicalOccupantUsageUnits = typicalOccupantUsageUnits
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}UserDefinedFields
  class UserDefinedFields < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}UserDefinedField
    #   fieldName - SOAP::SOAPString
    #   fieldValue - SOAP::SOAPString
    class UserDefinedField
      attr_accessor :fieldName
      attr_accessor :fieldValue

      def initialize(fieldName = nil, fieldValue = nil)
        @fieldName = fieldName
        @fieldValue = fieldValue
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PrimaryContactID
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class PrimaryContactID
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TenantIDs
  #   tenantID - BuildingSync::TenantIDs::TenantID
  class TenantIDs

    # inner class for member: TenantID
    # {http://buildingsync.net/schemas/bedes-auc/2019}TenantID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class TenantID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end

    attr_accessor :tenantID

    def initialize(tenantID = nil)
      @tenantID = tenantID
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FloorAreas
  class FloorAreas < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}FloorArea
    #   floorAreaType - SOAP::SOAPString
    #   floorAreaCustomName - SOAP::SOAPString
    #   floorAreaValue - BuildingSync::FloorAreas::FloorArea::FloorAreaValue
    #   floorAreaPercentage - SOAP::SOAPFloat
    #   story - SOAP::SOAPInt
    #   excludedSectionIDs - BuildingSync::FloorAreas::FloorArea::ExcludedSectionIDs
    class FloorArea

      # inner class for member: FloorAreaValue
      # {http://buildingsync.net/schemas/bedes-auc/2019}FloorAreaValue
      #   xmlattr_Source - SOAP::SOAPString
      class FloorAreaValue < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      # inner class for member: ExcludedSectionIDs
      # {http://buildingsync.net/schemas/bedes-auc/2019}ExcludedSectionIDs
      class ExcludedSectionIDs < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}ExcludedSectionID
        #   xmlattr_IDref - SOAP::SOAPIDREF
        class ExcludedSectionID
          AttrIDref = XSD::QName.new(nil, "IDref")

          def __xmlattr
            @__xmlattr ||= {}
          end

          def xmlattr_IDref
            __xmlattr[AttrIDref]
          end

          def xmlattr_IDref=(value)
            __xmlattr[AttrIDref] = value
          end

          def initialize
            @__xmlattr = {}
          end
        end
      end

      attr_accessor :floorAreaType
      attr_accessor :floorAreaCustomName
      attr_accessor :floorAreaValue
      attr_accessor :floorAreaPercentage
      attr_accessor :story
      attr_accessor :excludedSectionIDs

      def initialize(floorAreaType = nil, floorAreaCustomName = nil, floorAreaValue = nil, floorAreaPercentage = nil, story = nil, excludedSectionIDs = nil)
        @floorAreaType = floorAreaType
        @floorAreaCustomName = floorAreaCustomName
        @floorAreaValue = floorAreaValue
        @floorAreaPercentage = floorAreaPercentage
        @story = story
        @excludedSectionIDs = excludedSectionIDs
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OccupancyLevels
  class OccupancyLevels < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}OccupancyLevel
    #   occupantType - SOAP::SOAPString
    #   occupantQuantityType - SOAP::SOAPString
    #   occupantQuantity - BuildingSync::OccupancyLevels::OccupancyLevel::OccupantQuantity
    class OccupancyLevel

      # inner class for member: OccupantQuantity
      # {http://buildingsync.net/schemas/bedes-auc/2019}OccupantQuantity
      #   xmlattr_Source - SOAP::SOAPString
      class OccupantQuantity < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :occupantType
      attr_accessor :occupantQuantityType
      attr_accessor :occupantQuantity

      def initialize(occupantType = nil, occupantQuantityType = nil, occupantQuantity = nil)
        @occupantType = occupantType
        @occupantQuantityType = occupantQuantityType
        @occupantQuantity = occupantQuantity
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceUnits
  class ResourceUnits < ::String
    Btu = new("Btu")
    CubicMeters = new("Cubic Meters")
    Gallons = new("Gallons")
    KBtu = new("kBtu")
    KWh = new("kWh")
    Kcf = new("kcf")
    Klbs = new("Klbs")
    Lbs = new("lbs")
    MCF = new("MCF")
    MMBtu = new("MMBtu")
    MWh = new("MWh")
    MassTon = new("Mass ton")
    Mlbs = new("Mlbs")
    None = new("None")
    Other = new("Other")
    Therms = new("therms")
    TonHour = new("Ton-hour")
    Unknown = new("Unknown")
    Wh = new("Wh")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DutyCycle
  #   xmlattr_Source - SOAP::SOAPString
  class DutyCycle < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SystemPerformanceRatio
  #   xmlattr_Source - SOAP::SOAPString
  class SystemPerformanceRatio < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyUseByFuelTypes
  #   energyUseByFuelType - BuildingSync::EnergyUseByFuelTypes::EnergyUseByFuelType
  class EnergyUseByFuelTypes

    # inner class for member: EnergyUseByFuelType
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyUseByFuelType
    #   primaryFuel - BuildingSync::FuelTypes
    #   energyUse - BuildingSync::EnergyUse
    class EnergyUseByFuelType
      attr_accessor :primaryFuel
      attr_accessor :energyUse

      def initialize(primaryFuel = nil, energyUse = nil)
        @primaryFuel = primaryFuel
        @energyUse = energyUse
      end
    end

    attr_accessor :energyUseByFuelType

    def initialize(energyUseByFuelType = nil)
      @energyUseByFuelType = energyUseByFuelType
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AssetScoreData
  #   score - BuildingSync::AssetScoreData::Score
  #   siteEnergyUse - BuildingSync::AssetScoreData::SiteEnergyUse
  #   sourceEnergyUse - BuildingSync::AssetScoreData::SourceEnergyUse
  class AssetScoreData

    # inner class for member: Score
    # {http://buildingsync.net/schemas/bedes-auc/2019}Score
    #   xmlattr_Source - SOAP::SOAPString
    class Score < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    # inner class for member: SiteEnergyUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}SiteEnergyUse
    class SiteEnergyUse < ::Array
    end

    # inner class for member: SourceEnergyUse
    # {http://buildingsync.net/schemas/bedes-auc/2019}SourceEnergyUse
    #   energyUseByFuelTypes - BuildingSync::EnergyUseByFuelTypes
    #   sourceEnergyUseIntensity - BuildingSync::SourceEnergyUseIntensity
    class SourceEnergyUse
      attr_accessor :energyUseByFuelTypes
      attr_accessor :sourceEnergyUseIntensity

      def initialize(energyUseByFuelTypes = [], sourceEnergyUseIntensity = nil)
        @energyUseByFuelTypes = energyUseByFuelTypes
        @sourceEnergyUseIntensity = sourceEnergyUseIntensity
      end
    end

    attr_accessor :score
    attr_accessor :siteEnergyUse
    attr_accessor :sourceEnergyUse

    def initialize(score = nil, siteEnergyUse = nil, sourceEnergyUse = nil)
      @score = score
      @siteEnergyUse = siteEnergyUse
      @sourceEnergyUse = sourceEnergyUse
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AssetScore
  #   wholeBuilding - BuildingSync::AssetScore::WholeBuilding
  #   useTypes - BuildingSync::AssetScore::UseTypes
  class AssetScore

    # inner class for member: WholeBuilding
    # {http://buildingsync.net/schemas/bedes-auc/2019}WholeBuilding
    #   assetScoreData - BuildingSync::AssetScoreData
    #   energyUseByEndUses - BuildingSync::AssetScore::WholeBuilding::EnergyUseByEndUses
    #   rankings - BuildingSync::AssetScore::WholeBuilding::Rankings
    class WholeBuilding

      # inner class for member: EnergyUseByEndUses
      # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyUseByEndUses
      class EnergyUseByEndUses < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyUseByEndUse
        #   energyUse - BuildingSync::EnergyUse
        #   endUse - BuildingSync::EndUseType
        class EnergyUseByEndUse
          attr_accessor :energyUse
          attr_accessor :endUse

          def initialize(energyUse = nil, endUse = nil)
            @energyUse = energyUse
            @endUse = endUse
          end
        end
      end

      # inner class for member: Rankings
      # {http://buildingsync.net/schemas/bedes-auc/2019}Rankings
      class Rankings < ::Array

        # {http://buildingsync.net/schemas/bedes-auc/2019}Ranking
        #   type - BuildingSync::AssetScore::WholeBuilding::Rankings::Ranking::Type
        #   rank - BuildingSync::RankType
        class Ranking

          # inner class for member: Type
          # {http://buildingsync.net/schemas/bedes-auc/2019}Type
          #   systemsType - SOAP::SOAPString
          #   envelopeType - SOAP::SOAPString
          class Type
            attr_accessor :systemsType
            attr_accessor :envelopeType

            def initialize(systemsType = nil, envelopeType = nil)
              @systemsType = systemsType
              @envelopeType = envelopeType
            end
          end

          attr_accessor :type
          attr_accessor :rank

          def initialize(type = nil, rank = nil)
            @type = type
            @rank = rank
          end
        end
      end

      attr_accessor :assetScoreData
      attr_accessor :energyUseByEndUses
      attr_accessor :rankings

      def initialize(assetScoreData = nil, energyUseByEndUses = nil, rankings = nil)
        @assetScoreData = assetScoreData
        @energyUseByEndUses = energyUseByEndUses
        @rankings = rankings
      end
    end

    # inner class for member: UseTypes
    # {http://buildingsync.net/schemas/bedes-auc/2019}UseTypes
    class UseTypes < ::Array

      # {http://buildingsync.net/schemas/bedes-auc/2019}UseType
      #   assetScoreData - BuildingSync::AssetScoreData
      #   assetScoreUseType - SOAP::SOAPString
      class UseType
        attr_accessor :assetScoreData
        attr_accessor :assetScoreUseType

        def initialize(assetScoreData = nil, assetScoreUseType = nil)
          @assetScoreData = assetScoreData
          @assetScoreUseType = assetScoreUseType
        end
      end
    end

    attr_accessor :wholeBuilding
    attr_accessor :useTypes

    def initialize(wholeBuilding = nil, useTypes = nil)
      @wholeBuilding = wholeBuilding
      @useTypes = useTypes
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ENERGYSTARScore
  #   xmlattr_Source - SOAP::SOAPString
  class ENERGYSTARScore < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ReferenceCase
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class ReferenceCase
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherDataSource
  class WeatherDataSource < ::String
    CWEC = new("CWEC")
    CZRV2 = new("CZRV2")
    IWEC = new("IWEC")
    OnSiteMeasurement = new("On Site Measurement")
    Other = new("Other")
    TMY = new("TMY")
    TMY2 = new("TMY2")
    TMY3 = new("TMY3")
    WeatherStation = new("Weather Station")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CostEffectivenessScreeningMethod
  class CostEffectivenessScreeningMethod < ::String
    InternalRateOfReturn = new("Internal rate of return")
    LevelizedCostOfEnergy = new("Levelized cost of energy")
    LifecycleCost = new("Lifecycle cost")
    ModifiedInternalRateOfReturn = new("Modified internal rate of return")
    NetPresentValue = new("Net present value")
    Other = new("Other")
    ReturnOnInvestment = new("Return on investment")
    SavingsToInvestmentRatio = new("Savings to investment ratio")
    SimplePayback = new("Simple payback")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualHeatingEfficiencyUnits
  class AnnualHeatingEfficiencyUnits < ::String
    AFUE = new("AFUE")
    COP = new("COP")
    HSPF = new("HSPF")
    Other = new("Other")
    ThermalEfficiency = new("Thermal Efficiency")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BurnerType
  class BurnerType < ::String
    Atmospheric = new("Atmospheric")
    Other = new("Other")
    Power = new("Power")
    RotaryCup = new("Rotary Cup")
    SealedCombustion = new("Sealed Combustion")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BurnerControlType
  class BurnerControlType < ::String
    FullModulationAutomatic = new("Full Modulation Automatic")
    FullModulationManual = new("Full Modulation Manual")
    HighLow = new("High Low")
    OnOff = new("On Off")
    StepModulation = new("Step Modulation")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}IgnitionType
  class IgnitionType < ::String
    IntermittentIgnitionDevice = new("Intermittent ignition device")
    Other = new("Other")
    PilotLight = new("Pilot light")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DraftType
  class DraftType < ::String
    MechanicalForced = new("Mechanical forced")
    MechanicalInduced = new("Mechanical induced")
    Natural = new("Natural")
    Other = new("Other")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CondensingOperation
  class CondensingOperation < ::String
    Condensing = new("Condensing")
    NearCondensing = new("Near-Condensing")
    NonCondensing = new("Non-Condensing")
    Other = new("Other")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HeatingStaging
  class HeatingStaging < ::String
    Modulating = new("Modulating")
    MultipleDiscreteStages = new("Multiple discrete stages")
    Other = new("Other")
    SingleStage = new("Single stage")
    Unknown = new("Unknown")
    Variable = new("Variable")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Priority
  class Priority < ::String
    BackUp = new("Back-up")
    Other = new("Other")
    Primary = new("Primary")
    Secondary = new("Secondary")
    Tertiary = new("Tertiary")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CompressorStaging
  class CompressorStaging < ::String
    Modulating = new("Modulating")
    MultipleDiscreteStages = new("Multiple discrete stages")
    Other = new("Other")
    SingleStage = new("Single stage")
    Unknown = new("Unknown")
    Variable = new("Variable")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualCoolingEfficiencyUnits
  class AnnualCoolingEfficiencyUnits < ::String
    COP = new("COP")
    EER = new("EER")
    KWTon = new("kW/ton")
    Other = new("Other")
    SEER = new("SEER")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterCooledCondenserFlowControl
  class WaterCooledCondenserFlowControl < ::String
    FixedFlow = new("Fixed Flow")
    Other = new("Other")
    TwoPositionFlow = new("Two Position Flow")
    Unknown = new("Unknown")
    VariableFlow = new("Variable Flow")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizerType
  class WaterSideEconomizerType < ::String
    None = new("None")
    Other = new("Other")
    ParallelPlateAndFrameHeatExchanger = new("Parallel Plate and Frame Heat Exchanger")
    SeriesPlateAndFrameHeatExchanger = new("Series Plate and Frame Heat Exchanger")
    StrainerCycle = new("Strainer Cycle")
    ThermoCycle = new("Thermo Cycle")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}VentilationControlMethod
  class VentilationControlMethod < ::String
    CO2Sensors = new("CO2 Sensors")
    Fixed = new("Fixed")
    OccupancySensors = new("Occupancy Sensors")
    Other = new("Other")
    Scheduled = new("Scheduled")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FluorescentStartType
  class FluorescentStartType < ::String
    InstantStart = new("Instant start")
    Other = new("Other")
    ProgrammedStart = new("Programmed start")
    RapidStart = new("Rapid start")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClothesWasherClassification
  class ClothesWasherClassification < ::String
    Commercial = new("Commercial")
    Industrial = new("Industrial")
    Other = new("Other")
    Residential = new("Residential")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClothesWasherLoaderType
  class ClothesWasherLoaderType < ::String
    Front = new("Front")
    Other = new("Other")
    Top = new("Top")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DryerType
  class DryerType < ::String
    Commercial = new("Commercial")
    Industrial = new("Industrial")
    Other = new("Other")
    Residential = new("Residential")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationWallInsulationContinuity
  class FoundationWallInsulationContinuity < ::String
    Cavity = new("Cavity")
    Continuous = new("Continuous")
    None = new("None")
    Other = new("Other")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabInsulationOrientation
  class SlabInsulationOrientation < ::String
    C_12InHorizontal = new("12 in Horizontal")
    C_12InVertical = new("12 in Vertical")
    C_24InHorizontal = new("24 in Horizontal")
    C_24InVertical = new("24 in Vertical")
    C_36InHorizontal = new("36 in Horizontal")
    C_36InVertical = new("36 in Vertical")
    C_48InHorizontal = new("48 in Horizontal")
    C_48InVertical = new("48 in Vertical")
    FullyInsulatedSlab = new("Fully Insulated Slab")
    None = new("None")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabHeating
  class SlabHeating < ::String
    Heated = new("Heated")
    Other = new("Other")
    Unheated = new("Unheated")
    Unknown = new("Unknown")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ResourceBoundary
  class ResourceBoundary < ::String
    Gross = new("Gross")
    Net = new("Net")
    Offsite = new("Offsite")
    Onsite = new("Onsite")
    Other = new("Other")
    Site = new("Site")
    Source = new("Source")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterResource
  class WaterResource < ::String
    AlternativeWater = new("Alternative water")
    CapturedRainwater = new("Captured rainwater")
    Greywater = new("Greywater")
    Other = new("Other")
    PotableWater = new("Potable water")
    ReclaimedWater = new("Reclaimed water")
    Wastewater = new("Wastewater")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}TemporalStatus
  class TemporalStatus < ::String
    AdditionalToLastBillingPeriod = new("Additional to last billing period")
    Baseline = new("Baseline")
    BilledToDate = new("Billed to date")
    Current = new("Current")
    CurrentBillingPeriod = new("Current billing period")
    CurrentDay = new("Current day")
    CurrentDayLastYear = new("Current day last year")
    DesignTarget = new("Design Target")
    LastBillingPeriod = new("Last billing period")
    Other = new("Other")
    PostRetrofit = new("Post retrofit")
    PreRetrofit = new("Pre retrofit")
    PreviousDay = new("Previous day")
    PreviousDayLastYear = new("Previous day last year")
    Target = new("Target")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ControlSystemType
  #   analog - BuildingSync::ControlSystemType::Analog
  #   digital - BuildingSync::ControlSystemType::Digital
  #   pneumatic - BuildingSync::ControlSystemType::Pneumatic
  #   other - BuildingSync::ControlSystemType::Other
  class ControlSystemType

    # inner class for member: Analog
    # {http://buildingsync.net/schemas/bedes-auc/2019}Analog
    #   communicationProtocol - BuildingSync::CommunicationProtocolAnalogType
    class Analog
      attr_accessor :communicationProtocol

      def initialize(communicationProtocol = nil)
        @communicationProtocol = communicationProtocol
      end
    end

    # inner class for member: Digital
    # {http://buildingsync.net/schemas/bedes-auc/2019}Digital
    #   communicationProtocol - BuildingSync::CommunicationProtocolDigitalType
    class Digital
      attr_accessor :communicationProtocol

      def initialize(communicationProtocol = nil)
        @communicationProtocol = communicationProtocol
      end
    end

    # inner class for member: Pneumatic
    # {http://buildingsync.net/schemas/bedes-auc/2019}Pneumatic
    class Pneumatic
      def initialize
      end
    end

    # inner class for member: Other
    # {http://buildingsync.net/schemas/bedes-auc/2019}Other
    #   otherCommunicationProtocolName - SOAP::SOAPString
    class Other
      attr_accessor :otherCommunicationProtocolName

      def initialize(otherCommunicationProtocolName = nil)
        @otherCommunicationProtocolName = otherCommunicationProtocolName
      end
    end

    attr_accessor :analog
    attr_accessor :digital
    attr_accessor :pneumatic
    attr_accessor :other

    def initialize(analog = nil, digital = nil, pneumatic = nil, other = nil)
      @analog = analog
      @digital = digital
      @pneumatic = pneumatic
      @other = other
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DraftBoundary
  class DraftBoundary < ::String
    Direct = new("Direct")
    DirectIndirect = new("Direct indirect")
    Indirect = new("Indirect")
    Other = new("Other")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClimateZoneType
  #   aSHRAE - BuildingSync::ClimateZoneType::ASHRAE
  #   energyStar - BuildingSync::ClimateZoneType::EnergyStar
  #   californiaTitle24 - BuildingSync::ClimateZoneType::CaliforniaTitle24
  #   iECC - BuildingSync::ClimateZoneType::IECC
  #   buildingAmerica - BuildingSync::ClimateZoneType::BuildingAmerica
  #   cBECS - BuildingSync::CBECSType
  #   dOE - BuildingSync::ClimateZoneType::DOE
  #   other - BuildingSync::ClimateZoneType::Other
  class ClimateZoneType

    # inner class for member: ASHRAE
    # {http://buildingsync.net/schemas/bedes-auc/2019}ASHRAE
    #   climateZone - SOAP::SOAPString
    class ASHRAE
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: EnergyStar
    # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyStar
    #   climateZone - SOAP::SOAPString
    class EnergyStar
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: CaliforniaTitle24
    # {http://buildingsync.net/schemas/bedes-auc/2019}CaliforniaTitle24
    #   climateZone - SOAP::SOAPString
    class CaliforniaTitle24
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: IECC
    # {http://buildingsync.net/schemas/bedes-auc/2019}IECC
    #   climateZone - SOAP::SOAPString
    class IECC
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: BuildingAmerica
    # {http://buildingsync.net/schemas/bedes-auc/2019}BuildingAmerica
    #   climateZone - SOAP::SOAPString
    class BuildingAmerica
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: DOE
    # {http://buildingsync.net/schemas/bedes-auc/2019}DOE
    #   climateZone - SOAP::SOAPString
    class DOE
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    # inner class for member: Other
    # {http://buildingsync.net/schemas/bedes-auc/2019}Other
    #   climateZone - SOAP::SOAPString
    class Other
      attr_accessor :climateZone

      def initialize(climateZone = nil)
        @climateZone = climateZone
      end
    end

    attr_accessor :aSHRAE
    attr_accessor :energyStar
    attr_accessor :californiaTitle24
    attr_accessor :iECC
    attr_accessor :buildingAmerica
    attr_accessor :cBECS
    attr_accessor :dOE
    attr_accessor :other

    def initialize(aSHRAE = nil, energyStar = nil, californiaTitle24 = nil, iECC = nil, buildingAmerica = nil, cBECS = nil, dOE = nil, other = nil)
      @aSHRAE = aSHRAE
      @energyStar = energyStar
      @californiaTitle24 = californiaTitle24
      @iECC = iECC
      @buildingAmerica = buildingAmerica
      @cBECS = cBECS
      @dOE = dOE
      @other = other
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}eGRIDRegionCode
  class EGRIDRegionCode < ::String
    AKGD = new("AKGD")
    AKMS = new("AKMS")
    AZNM = new("AZNM")
    CAMX = new("CAMX")
    ERCT = new("ERCT")
    FRCC = new("FRCC")
    HIMS = new("HIMS")
    HIOA = new("HIOA")
    MORE = new("MORE")
    MROE = new("MROE")
    MROW = new("MROW")
    NEWE = new("NEWE")
    NWPP = new("NWPP")
    NYCW = new("NYCW")
    NYLI = new("NYLI")
    NYUP = new("NYUP")
    Other = new("Other")
    PRMS = new("PRMS")
    RFCE = new("RFCE")
    RFCM = new("RFCM")
    RFCW = new("RFCW")
    RMPA = new("RMPA")
    SPNO = new("SPNO")
    SPSO = new("SPSO")
    SRMV = new("SRMV")
    SRMW = new("SRMW")
    SRSO = new("SRSO")
    SRTV = new("SRTV")
    SRVC = new("SRVC")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}eGRIDSubregionCodes
  class EGRIDSubregionCodes < ::Array
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherDataStationID
  class WeatherDataStationID < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherStationName
  class WeatherStationName < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherStationCategory
  class WeatherStationCategory < ::String
    FAA = new("FAA")
    ICAO = new("ICAO")
    NWS = new("NWS")
    Other = new("Other")
    WBAN = new("WBAN")
    WMO = new("WMO")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Longitude
  #   xmlattr_Source - SOAP::SOAPString
  class Longitude < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Latitude
  #   xmlattr_Source - SOAP::SOAPString
  class Latitude < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WallID
  #   wallArea - BuildingSync::WallID::WallArea
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class WallID
    AttrIDref = XSD::QName.new(nil, "IDref")

    # inner class for member: WallArea
    # {http://buildingsync.net/schemas/bedes-auc/2019}WallArea
    #   xmlattr_Source - SOAP::SOAPString
    class WallArea < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :wallArea

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(wallArea = nil)
      @wallArea = wallArea
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DoorID
  #   fenestrationArea - BuildingSync::FenestrationArea
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class DoorID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :fenestrationArea

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(fenestrationArea = nil)
      @fenestrationArea = fenestrationArea
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WindowID
  #   fenestrationArea - BuildingSync::FenestrationArea
  #   windowToWallRatio - BuildingSync::BoundedDecimalZeroToOneWithSourceAttribute
  #   percentOfWindowAreaShaded - BuildingSync::WindowID::PercentOfWindowAreaShaded
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class WindowID
    AttrIDref = XSD::QName.new(nil, "IDref")

    # inner class for member: PercentOfWindowAreaShaded
    # {http://buildingsync.net/schemas/bedes-auc/2019}PercentOfWindowAreaShaded
    #   xmlattr_Source - SOAP::SOAPString
    class PercentOfWindowAreaShaded < ::String
      AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_Source
        __xmlattr[AttrSource]
      end

      def xmlattr_Source=(value)
        __xmlattr[AttrSource] = value
      end

      def initialize(*arg)
        super
        @__xmlattr = {}
      end
    end

    attr_accessor :fenestrationArea
    attr_accessor :windowToWallRatio
    attr_accessor :percentOfWindowAreaShaded

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(fenestrationArea = nil, windowToWallRatio = nil, percentOfWindowAreaShaded = nil)
      @fenestrationArea = fenestrationArea
      @windowToWallRatio = windowToWallRatio
      @percentOfWindowAreaShaded = percentOfWindowAreaShaded
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherStations
  class WeatherStations < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}WeatherStation
    #   weatherDataStationID - BuildingSync::WeatherDataStationID
    #   weatherStationName - BuildingSync::WeatherStationName
    #   weatherStationCategory - SOAP::SOAPString
    #   xmlattr_ID - SOAP::SOAPID
    class WeatherStation
      AttrID = XSD::QName.new(nil, "ID")

      attr_accessor :weatherDataStationID
      attr_accessor :weatherStationName
      attr_accessor :weatherStationCategory

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_ID
        __xmlattr[AttrID]
      end

      def xmlattr_ID=(value)
        __xmlattr[AttrID] = value
      end

      def initialize(weatherDataStationID = nil, weatherStationName = nil, weatherStationCategory = nil)
        @weatherDataStationID = weatherDataStationID
        @weatherStationName = weatherStationName
        @weatherStationCategory = weatherStationCategory
        @__xmlattr = {}
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualCoolingEfficiencyValue
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualCoolingEfficiencyValue < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualDemandSavingsCost
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualDemandSavingsCost < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualHeatingEfficiencyValue
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualHeatingEfficiencyValue < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualPeakElectricityReduction
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualPeakElectricityReduction < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsByFuels
  class AnnualSavingsByFuels < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsByFuel
    #   energyResource - BuildingSync::FuelTypes
    #   resourceUnits - SOAP::SOAPString
    #   annualSavingsNativeUnits - BuildingSync::AnnualSavingsByFuels::AnnualSavingsByFuel::AnnualSavingsNativeUnits
    class AnnualSavingsByFuel

      # inner class for member: AnnualSavingsNativeUnits
      # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsNativeUnits
      #   xmlattr_Source - SOAP::SOAPString
      class AnnualSavingsNativeUnits < ::String
        AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

        def __xmlattr
          @__xmlattr ||= {}
        end

        def xmlattr_Source
          __xmlattr[AttrSource]
        end

        def xmlattr_Source=(value)
          __xmlattr[AttrSource] = value
        end

        def initialize(*arg)
          super
          @__xmlattr = {}
        end
      end

      attr_accessor :energyResource
      attr_accessor :resourceUnits
      attr_accessor :annualSavingsNativeUnits

      def initialize(energyResource = nil, resourceUnits = nil, annualSavingsNativeUnits = nil)
        @energyResource = energyResource
        @resourceUnits = resourceUnits
        @annualSavingsNativeUnits = annualSavingsNativeUnits
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsCost
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsCost < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsSiteEnergy
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsSiteEnergy < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsSourceEnergy
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsSourceEnergy < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualWaterCostSavings
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualWaterCostSavings < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualWaterSavings
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualWaterSavings < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsAverageGHGEmissions
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsAverageGHGEmissions < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsMarginalGHGEmissions
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsMarginalGHGEmissions < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}AnnualSavingsGHGEmissionIntensity
  #   xmlattr_Source - SOAP::SOAPString
  class AnnualSavingsGHGEmissionIntensity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BoilerLWT
  #   xmlattr_Source - SOAP::SOAPString
  class BoilerLWT < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BurnerQuantity
  #   xmlattr_Source - SOAP::SOAPString
  class BurnerQuantity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}BurnerTurndownRatio
  #   xmlattr_Source - SOAP::SOAPString
  class BurnerTurndownRatio < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CDDBaseTemperature
  #   xmlattr_Source - SOAP::SOAPString
  class CDDBaseTemperature < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ChilledWaterSupplyTemperature
  #   xmlattr_Source - SOAP::SOAPString
  class ChilledWaterSupplyTemperature < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClothesWasherCapacity
  #   xmlattr_Source - SOAP::SOAPString
  class ClothesWasherCapacity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClothesWasherModifiedEnergyFactor
  #   xmlattr_Source - SOAP::SOAPString
  class ClothesWasherModifiedEnergyFactor < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ClothesWasherWaterFactor
  #   xmlattr_Source - SOAP::SOAPString
  class ClothesWasherWaterFactor < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Combustion
  #   draftType - SOAP::SOAPString
  #   draftBoundary - SOAP::SOAPString
  #   condensingOperation - SOAP::SOAPString
  class Combustion
    attr_accessor :draftType
    attr_accessor :draftBoundary
    attr_accessor :condensingOperation

    def initialize(draftType = nil, draftBoundary = nil, condensingOperation = nil)
      @draftType = draftType
      @draftBoundary = draftBoundary
      @condensingOperation = condensingOperation
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CombustionEfficiency
  #   xmlattr_Source - SOAP::SOAPString
  class CombustionEfficiency < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CondenserPlantIDs
  class CondenserPlantIDs < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}CondenserPlantID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class CondenserPlantID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CondenserWaterTemperature
  #   xmlattr_Source - SOAP::SOAPString
  class CondenserWaterTemperature < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CondensingTemperature
  #   xmlattr_Source - SOAP::SOAPString
  class CondensingTemperature < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingSourceID
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class CoolingSourceID
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}CoolingStageCapacity
  #   xmlattr_Source - SOAP::SOAPString
  class CoolingStageCapacity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DemandRatchetPercentage
  #   xmlattr_Source - SOAP::SOAPString
  class DemandRatchetPercentage < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DemandRateAdjustment
  #   xmlattr_Source - SOAP::SOAPString
  class DemandRateAdjustment < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DemandWindow
  #   xmlattr_Source - SOAP::SOAPString
  class DemandWindow < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DryerElectricEnergyUsePerLoad
  #   xmlattr_Source - SOAP::SOAPString
  class DryerElectricEnergyUsePerLoad < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}DryerGasEnergyUsePerLoad
  #   xmlattr_Source - SOAP::SOAPString
  class DryerGasEnergyUsePerLoad < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ElectricDemandRate
  #   xmlattr_Source - SOAP::SOAPString
  class ElectricDemandRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyCostRate
  #   xmlattr_Source - SOAP::SOAPString
  class EnergyCostRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyRateAdjustment
  #   xmlattr_Source - SOAP::SOAPString
  class EnergyRateAdjustment < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnergySellRate
  #   xmlattr_Source - SOAP::SOAPString
  class EnergySellRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EnergyUse
  #   xmlattr_Source - SOAP::SOAPString
  class EnergyUse < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}EquipmentDisposalAndSalvageCosts
  #   xmlattr_Source - SOAP::SOAPString
  class EquipmentDisposalAndSalvageCosts < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ExistingScheduleAffected
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class ExistingScheduleAffected
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FenestrationArea
  #   xmlattr_Source - SOAP::SOAPString
  class FenestrationArea < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FloorsAboveGrade
  #   xmlattr_Source - SOAP::SOAPString
  class FloorsAboveGrade < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FloorsBelowGrade
  #   xmlattr_Source - SOAP::SOAPString
  class FloorsBelowGrade < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationHeightAboveGrade
  #   xmlattr_Source - SOAP::SOAPString
  class FoundationHeightAboveGrade < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationWallInsulationThickness
  #   xmlattr_Source - SOAP::SOAPString
  class FoundationWallInsulationThickness < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationWallRValue
  #   xmlattr_Source - SOAP::SOAPString
  class FoundationWallRValue < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FoundationWallUFactor
  #   xmlattr_Source - SOAP::SOAPString
  class FoundationWallUFactor < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FundingFromIncentives
  #   xmlattr_Source - SOAP::SOAPString
  class FundingFromIncentives < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}FundingFromTaxCredits
  #   xmlattr_Source - SOAP::SOAPString
  class FundingFromTaxCredits < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HDDBaseTemperature
  #   xmlattr_Source - SOAP::SOAPString
  class HDDBaseTemperature < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}HotWaterBoilerMaximumFlowRate
  #   xmlattr_Source - SOAP::SOAPString
  class HotWaterBoilerMaximumFlowRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}InputCapacity
  #   xmlattr_Source - SOAP::SOAPString
  class InputCapacity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}InteriorVisibleAbsorptance
  #   xmlattr_Source - SOAP::SOAPString
  class InteriorVisibleAbsorptance < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}InternalRateOfReturn
  #   xmlattr_Source - SOAP::SOAPString
  class InternalRateOfReturn < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LampPower
  #   xmlattr_Source - SOAP::SOAPString
  class LampPower < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedBuildingID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedBuildingID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedFacilityID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedFacilityID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedScheduleIDs
  class LinkedScheduleIDs < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedScheduleID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class LinkedScheduleID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedSectionID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedSectionID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedSiteID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedSiteID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedSpaceID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedSpaceID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedSystemID
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedSystemID
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedSystemIDs
  class LinkedSystemIDs < ::Array
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}LinkedThermalZoneID
  #   linkedScheduleIDs - BuildingSync::LinkedScheduleIDs
  #   floorAreas - BuildingSync::FloorAreas
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class LinkedThermalZoneID
    AttrIDref = XSD::QName.new(nil, "IDref")

    attr_accessor :linkedScheduleIDs
    attr_accessor :floorAreas

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(linkedScheduleIDs = nil, floorAreas = nil)
      @linkedScheduleIDs = linkedScheduleIDs
      @floorAreas = floorAreas
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}MVCost
  #   xmlattr_Source - SOAP::SOAPString
  class MVCost < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}MakeupAirSourceID
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class MakeupAirSourceID < ::String
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ModifiedSchedule
  #   xmlattr_IDref - SOAP::SOAPIDREF
  class ModifiedSchedule
    AttrIDref = XSD::QName.new(nil, "IDref")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDref
      __xmlattr[AttrIDref]
    end

    def xmlattr_IDref=(value)
      __xmlattr[AttrIDref] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NPVofTaxImplications
  #   xmlattr_Source - SOAP::SOAPString
  class NPVofTaxImplications < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NetPresentValue
  #   xmlattr_Source - SOAP::SOAPString
  class NetPresentValue < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfDiscreteCoolingStages
  #   xmlattr_Source - SOAP::SOAPString
  class NumberOfDiscreteCoolingStages < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}NumberOfHeatingStages
  #   xmlattr_Source - SOAP::SOAPString
  class NumberOfHeatingStages < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OMCostAnnualSavings
  #   xmlattr_Source - SOAP::SOAPString
  class OMCostAnnualSavings < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Occupancy
  #   controlSystemType - BuildingSync::ControlSystemType
  #   controlSensor - BuildingSync::ControlSensorOccupancyType
  #   controlStrategy - BuildingSync::ControlStrategyOccupancyType
  #   otherControlStrategyName - SOAP::SOAPString
  class Occupancy
    attr_accessor :controlSystemType
    attr_accessor :controlSensor
    attr_accessor :controlStrategy
    attr_accessor :otherControlStrategyName

    def initialize(controlSystemType = nil, controlSensor = nil, controlStrategy = nil, otherControlStrategyName = nil)
      @controlSystemType = controlSystemType
      @controlSensor = controlSensor
      @controlStrategy = controlStrategy
      @otherControlStrategyName = otherControlStrategyName
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}OutputCapacity
  #   xmlattr_Source - SOAP::SOAPString
  class OutputCapacity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PipeInsulationThickness
  #   xmlattr_Source - SOAP::SOAPString
  class PipeInsulationThickness < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}PipeLocation
  #   xmlattr_Source - SOAP::SOAPString
  class PipeLocation < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}RefrigerantChargeFactor
  #   xmlattr_Source - SOAP::SOAPString
  class RefrigerantChargeFactor < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}RequiredVentilationRate
  #   xmlattr_Source - SOAP::SOAPString
  class RequiredVentilationRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SimplePayback
  #   xmlattr_Source - SOAP::SOAPString
  class SimplePayback < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabArea
  #   xmlattr_Source - SOAP::SOAPString
  class SlabArea < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabExposedPerimeter
  #   xmlattr_Source - SOAP::SOAPString
  class SlabExposedPerimeter < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabInsulationThickness
  #   xmlattr_Source - SOAP::SOAPString
  class SlabInsulationThickness < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SlabPerimeter
  #   xmlattr_Source - SOAP::SOAPString
  class SlabPerimeter < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SourceEnergyUseIntensity
  #   xmlattr_Source - SOAP::SOAPString
  class SourceEnergyUseIntensity < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SpaceIDs
  class SpaceIDs < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}SpaceID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class SpaceID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SteamBoilerMaximumOperatingPressure
  #   xmlattr_Source - SOAP::SOAPString
  class SteamBoilerMaximumOperatingPressure < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SteamBoilerMinimumOperatingPressure
  #   xmlattr_Source - SOAP::SOAPString
  class SteamBoilerMinimumOperatingPressure < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SummerPeakElectricityReduction
  #   xmlattr_Source - SOAP::SOAPString
  class SummerPeakElectricityReduction < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalEfficiency
  #   xmlattr_Source - SOAP::SOAPString
  class ThermalEfficiency < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZoneIDs
  class ThermalZoneIDs < ::Array

    # {http://buildingsync.net/schemas/bedes-auc/2019}ThermalZoneID
    #   xmlattr_IDref - SOAP::SOAPIDREF
    class ThermalZoneID
      AttrIDref = XSD::QName.new(nil, "IDref")

      def __xmlattr
        @__xmlattr ||= {}
      end

      def xmlattr_IDref
        __xmlattr[AttrIDref]
      end

      def xmlattr_IDref=(value)
        __xmlattr[AttrIDref] = value
      end

      def initialize
        @__xmlattr = {}
      end
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}VentilationControlMethods
  class VentilationControlMethods < ::Array
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}VentilationRate
  #   xmlattr_Source - SOAP::SOAPString
  class VentilationRate < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizerDBTemperatureMaximum
  #   xmlattr_Source - SOAP::SOAPString
  class WaterSideEconomizerDBTemperatureMaximum < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WaterSideEconomizerTemperatureMaximum
  #   xmlattr_Source - SOAP::SOAPString
  class WaterSideEconomizerTemperatureMaximum < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WeightedAverageLoad
  #   xmlattr_Source - SOAP::SOAPString
  class WeightedAverageLoad < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}WinterPeakElectricityReduction
  #   xmlattr_Source - SOAP::SOAPString
  class WinterPeakElectricityReduction < ::String
    AttrSource = XSD::QName.new("http://buildingsync.net/schemas/bedes-auc/2019", "Source")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_Source
      __xmlattr[AttrSource]
    end

    def xmlattr_Source=(value)
      __xmlattr[AttrSource] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}SpatialUnits
  class SpatialUnits < ::Array
  end

  # {http://www.gbxml.org/schema}gbXML
  #   aecXML - BuildingSync::AecXML
  #   campus - BuildingSync::Campus
  #   lightingSystem - BuildingSync::LightingSystem
  #   lightingControl - BuildingSync::LightingControl
  #   construction - BuildingSync::Construction
  #   layer - BuildingSync::Layer
  #   material - BuildingSync::Material
  #   windowType - BuildingSync::WindowType
  #   schedule - BuildingSync::Schedule
  #   weekSchedule - BuildingSync::WeekSchedule
  #   daySchedule - BuildingSync::DaySchedule
  #   zone - BuildingSync::Zone
  #   airLoop - BuildingSync::AirLoop
  #   hydronicLoop - BuildingSync::HydronicLoop
  #   intEquip - BuildingSync::IntEquip
  #   extEquip - BuildingSync::ExtEquip
  #   weather - BuildingSync::Weather
  #   meter - BuildingSync::Meter
  #   results - BuildingSync::Results
  #   documentHistory - BuildingSync::DocumentHistory
  #   simulationParameters - BuildingSync::SimulationParameters
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_engine - SOAP::SOAPNMTOKEN
  #   xmlattr_temperatureUnit - SOAP::SOAPNMTOKEN
  #   xmlattr_lengthUnit - SOAP::SOAPNMTOKEN
  #   xmlattr_areaUnit - SOAP::SOAPNMTOKEN
  #   xmlattr_volumeUnit - SOAP::SOAPNMTOKEN
  #   xmlattr_useSIUnitsForResults - SOAP::SOAPBoolean
  #   xmlattr_version - SOAP::SOAPNMTOKEN
  #   xmlattr_SurfaceReferenceLocation - SOAP::SOAPNMTOKEN
  class GbXML
    AttrAreaUnit = XSD::QName.new(nil, "areaUnit")
    AttrEngine = XSD::QName.new(nil, "engine")
    AttrId = XSD::QName.new(nil, "id")
    AttrLengthUnit = XSD::QName.new(nil, "lengthUnit")
    AttrSurfaceReferenceLocation = XSD::QName.new(nil, "SurfaceReferenceLocation")
    AttrTemperatureUnit = XSD::QName.new(nil, "temperatureUnit")
    AttrUseSIUnitsForResults = XSD::QName.new(nil, "useSIUnitsForResults")
    AttrVersion = XSD::QName.new(nil, "version")
    AttrVolumeUnit = XSD::QName.new(nil, "volumeUnit")

    attr_accessor :aecXML
    attr_accessor :campus
    attr_accessor :lightingSystem
    attr_accessor :lightingControl
    attr_accessor :construction
    attr_accessor :layer
    attr_accessor :material
    attr_accessor :windowType
    attr_accessor :schedule
    attr_accessor :weekSchedule
    attr_accessor :daySchedule
    attr_accessor :zone
    attr_accessor :airLoop
    attr_accessor :hydronicLoop
    attr_accessor :intEquip
    attr_accessor :extEquip
    attr_accessor :weather
    attr_accessor :meter
    attr_accessor :results
    attr_accessor :documentHistory
    attr_accessor :simulationParameters

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_engine
      __xmlattr[AttrEngine]
    end

    def xmlattr_engine=(value)
      __xmlattr[AttrEngine] = value
    end

    def xmlattr_temperatureUnit
      __xmlattr[AttrTemperatureUnit]
    end

    def xmlattr_temperatureUnit=(value)
      __xmlattr[AttrTemperatureUnit] = value
    end

    def xmlattr_lengthUnit
      __xmlattr[AttrLengthUnit]
    end

    def xmlattr_lengthUnit=(value)
      __xmlattr[AttrLengthUnit] = value
    end

    def xmlattr_areaUnit
      __xmlattr[AttrAreaUnit]
    end

    def xmlattr_areaUnit=(value)
      __xmlattr[AttrAreaUnit] = value
    end

    def xmlattr_volumeUnit
      __xmlattr[AttrVolumeUnit]
    end

    def xmlattr_volumeUnit=(value)
      __xmlattr[AttrVolumeUnit] = value
    end

    def xmlattr_useSIUnitsForResults
      __xmlattr[AttrUseSIUnitsForResults]
    end

    def xmlattr_useSIUnitsForResults=(value)
      __xmlattr[AttrUseSIUnitsForResults] = value
    end

    def xmlattr_version
      __xmlattr[AttrVersion]
    end

    def xmlattr_version=(value)
      __xmlattr[AttrVersion] = value
    end

    def xmlattr_SurfaceReferenceLocation
      __xmlattr[AttrSurfaceReferenceLocation]
    end

    def xmlattr_SurfaceReferenceLocation=(value)
      __xmlattr[AttrSurfaceReferenceLocation] = value
    end

    def initialize(aecXML = [], campus = [], lightingSystem = [], lightingControl = [], construction = [], layer = [], material = [], windowType = [], schedule = [], weekSchedule = [], daySchedule = [], zone = [], airLoop = [], hydronicLoop = [], intEquip = [], extEquip = [], weather = [], meter = [], results = [], documentHistory = [], simulationParameters = [])
      @aecXML = aecXML
      @campus = campus
      @lightingSystem = lightingSystem
      @lightingControl = lightingControl
      @construction = construction
      @layer = layer
      @material = material
      @windowType = windowType
      @schedule = schedule
      @weekSchedule = weekSchedule
      @daySchedule = daySchedule
      @zone = zone
      @airLoop = airLoop
      @hydronicLoop = hydronicLoop
      @intEquip = intEquip
      @extEquip = extEquip
      @weather = weather
      @meter = meter
      @results = results
      @documentHistory = documentHistory
      @simulationParameters = simulationParameters
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}aecXML
  class AecXML < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://www.gbxml.org/schema}Absorptance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  class Absorptance < ::String
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AdjacentSpaceId
  #   xmlattr_spaceIdRef - SOAP::SOAPIDREF
  #   xmlattr_surfaceType - SOAP::SOAPNMTOKEN
  class AdjacentSpaceId
    AttrSpaceIdRef = XSD::QName.new(nil, "spaceIdRef")
    AttrSurfaceType = XSD::QName.new(nil, "surfaceType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_spaceIdRef
      __xmlattr[AttrSpaceIdRef]
    end

    def xmlattr_spaceIdRef=(value)
      __xmlattr[AttrSpaceIdRef] = value
    end

    def xmlattr_surfaceType
      __xmlattr[AttrSurfaceType]
    end

    def xmlattr_surfaceType=(value)
      __xmlattr[AttrSurfaceType] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Age
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Age < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AirLoop
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   reference - SOAP::SOAPString
  #   airLoopEquipment - BuildingSync::AirLoopEquipment
  #   temperatureControl - BuildingSync::TemperatureControl
  #   pressureControl - BuildingSync::PressureControl
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_controlZoneIdRef - SOAP::SOAPIDREF
  #   xmlattr_systemType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class AirLoop
    AttrControlZoneIdRef = XSD::QName.new(nil, "controlZoneIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrSystemType = XSD::QName.new(nil, "systemType")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :reference
    attr_accessor :airLoopEquipment
    attr_accessor :temperatureControl
    attr_accessor :pressureControl

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_controlZoneIdRef
      __xmlattr[AttrControlZoneIdRef]
    end

    def xmlattr_controlZoneIdRef=(value)
      __xmlattr[AttrControlZoneIdRef] = value
    end

    def xmlattr_systemType
      __xmlattr[AttrSystemType]
    end

    def xmlattr_systemType=(value)
      __xmlattr[AttrSystemType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], reference = [], airLoopEquipment = [], temperatureControl = [], pressureControl = [])
      @name = name
      @description = description
      @reference = reference
      @airLoopEquipment = airLoopEquipment
      @temperatureControl = temperatureControl
      @pressureControl = pressureControl
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AirLoopEquipment
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   model - SOAP::SOAPString
  #   manufacturer - SOAP::SOAPString
  #   ratedFlow - BuildingSync::RatedFlow
  #   minFlow - BuildingSync::MinFlow
  #   maximumFlow - BuildingSync::MaximumFlow
  #   maximumFlowFractionDuringReheat - SOAP::SOAPDecimal
  #   operationSchedule - BuildingSync::OperationSchedule
  #   motorInAirstream - SOAP::SOAPBoolean
  #   temp - BuildingSync::Temp
  #   enthalpy - BuildingSync::Enthalpy
  #   economizerLockout - BuildingSync::EconomizerLockout
  #   resetTemperature - BuildingSync::ResetTemperature
  #   deltaP - BuildingSync::DeltaP
  #   deltaT - BuildingSync::DeltaT
  #   minRelativeHumidity - BuildingSync::MinRelativeHumidity
  #   maxRelativeHumidity - BuildingSync::MaxRelativeHumidity
  #   power - BuildingSync::Power
  #   capacity - BuildingSync::Capacity_
  #   control - BuildingSync::Control
  #   efficiency - BuildingSync::Efficiency
  #   airStreamFraction - BuildingSync::AirStreamFraction
  #   performance - BuildingSync::Performance
  #   cost - BuildingSync::Cost
  #   weight - BuildingSync::Weight
  #   life - BuildingSync::Life
  #   waterLoss - BuildingSync::WaterLoss
  #   energy - BuildingSync::Energy
  #   hydronicLoopId - BuildingSync::HydronicLoopId
  #   reference - SOAP::SOAPString
  #   refrigerantType - SOAP::SOAPString
  #   cADObjectId - BuildingSync::CADObjectId
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   flowType - BuildingSync::FlowType
  #   parallelFanOnFlowFraction - BuildingSync::ParallelFanOnFlowFraction
  #   nightCycleControl - BuildingSync::NightCycleControl
  #   heatRecoveryType - BuildingSync::HeatRecoveryType
  #   sensibleHeatRecoveryEffectiveness - SOAP::SOAPDecimal
  #   latentHeatRecoveryEffectiveness - SOAP::SOAPDecimal
  #   coolingCoilSetpointResetType - BuildingSync::CoolingCoilSetpointResetType
  #   heatingCoilSetpointResetType - BuildingSync::HeatingCoilSetpointResetType
  #   damperHeatingAction - BuildingSync::DamperHeatingAction
  #   heatPumpDefrostControl - BuildingSync::HeatPumpDefrostControl
  #   heatPumpDefrostStrategy - BuildingSync::HeatPumpDefrostStrategy
  #   supplementalHeatingCoilType - BuildingSync::SupplementalHeatingCoilType
  #   supplementalHeatingCoilCapacity - SOAP::SOAPDecimal
  #   supplementalGasHeatingCoilEfficiency - SOAP::SOAPDecimal
  #   supplementalGasHeatingCoilParasiticElectricLoad - SOAP::SOAPDecimal
  #   cyclingRateMax - SOAP::SOAPDecimal
  #   heatPumpTimeConstant - SOAP::SOAPDecimal
  #   fractionOnCyclePowerUse - SOAP::SOAPDecimal
  #   heatPumpFanDelayTime - SOAP::SOAPDecimal
  #   coolingCoilType - BuildingSync::CoolingCoilType
  #   preheatCoilType - BuildingSync::PreheatCoilType
  #   gasPreheatCoilEfficiency - SOAP::SOAPDecimal
  #   gasPreheatCoilParasiticElectricLoad - SOAP::SOAPDecimal
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_equipmentType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class AirLoopEquipment
    AttrEquipmentType = XSD::QName.new(nil, "equipmentType")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :model
    attr_accessor :manufacturer
    attr_accessor :ratedFlow
    attr_accessor :minFlow
    attr_accessor :maximumFlow
    attr_accessor :maximumFlowFractionDuringReheat
    attr_accessor :operationSchedule
    attr_accessor :motorInAirstream
    attr_accessor :temp
    attr_accessor :enthalpy
    attr_accessor :economizerLockout
    attr_accessor :resetTemperature
    attr_accessor :deltaP
    attr_accessor :deltaT
    attr_accessor :minRelativeHumidity
    attr_accessor :maxRelativeHumidity
    attr_accessor :power
    attr_accessor :capacity
    attr_accessor :control
    attr_accessor :efficiency
    attr_accessor :airStreamFraction
    attr_accessor :performance
    attr_accessor :cost
    attr_accessor :weight
    attr_accessor :life
    attr_accessor :waterLoss
    attr_accessor :energy
    attr_accessor :hydronicLoopId
    attr_accessor :reference
    attr_accessor :refrigerantType
    attr_accessor :cADObjectId
    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :flowType
    attr_accessor :parallelFanOnFlowFraction
    attr_accessor :nightCycleControl
    attr_accessor :heatRecoveryType
    attr_accessor :sensibleHeatRecoveryEffectiveness
    attr_accessor :latentHeatRecoveryEffectiveness
    attr_accessor :coolingCoilSetpointResetType
    attr_accessor :heatingCoilSetpointResetType
    attr_accessor :damperHeatingAction
    attr_accessor :heatPumpDefrostControl
    attr_accessor :heatPumpDefrostStrategy
    attr_accessor :supplementalHeatingCoilType
    attr_accessor :supplementalHeatingCoilCapacity
    attr_accessor :supplementalGasHeatingCoilEfficiency
    attr_accessor :supplementalGasHeatingCoilParasiticElectricLoad
    attr_accessor :cyclingRateMax
    attr_accessor :heatPumpTimeConstant
    attr_accessor :fractionOnCyclePowerUse
    attr_accessor :heatPumpFanDelayTime
    attr_accessor :coolingCoilType
    attr_accessor :preheatCoilType
    attr_accessor :gasPreheatCoilEfficiency
    attr_accessor :gasPreheatCoilParasiticElectricLoad

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_equipmentType
      __xmlattr[AttrEquipmentType]
    end

    def xmlattr_equipmentType=(value)
      __xmlattr[AttrEquipmentType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], model = [], manufacturer = [], ratedFlow = [], minFlow = [], maximumFlow = [], maximumFlowFractionDuringReheat = [], operationSchedule = [], motorInAirstream = [], temp = [], enthalpy = [], economizerLockout = [], resetTemperature = [], deltaP = [], deltaT = [], minRelativeHumidity = [], maxRelativeHumidity = [], power = [], capacity = [], control = [], efficiency = [], airStreamFraction = [], performance = [], cost = [], weight = [], life = [], waterLoss = [], energy = [], hydronicLoopId = [], reference = [], refrigerantType = [], cADObjectId = [], generalGeometry = [], shellGeometry = [], flowType = [], parallelFanOnFlowFraction = [], nightCycleControl = [], heatRecoveryType = [], sensibleHeatRecoveryEffectiveness = [], latentHeatRecoveryEffectiveness = [], coolingCoilSetpointResetType = [], heatingCoilSetpointResetType = [], damperHeatingAction = [], heatPumpDefrostControl = [], heatPumpDefrostStrategy = [], supplementalHeatingCoilType = [], supplementalHeatingCoilCapacity = [], supplementalGasHeatingCoilEfficiency = [], supplementalGasHeatingCoilParasiticElectricLoad = [], cyclingRateMax = [], heatPumpTimeConstant = [], fractionOnCyclePowerUse = [], heatPumpFanDelayTime = [], coolingCoilType = [], preheatCoilType = [], gasPreheatCoilEfficiency = [], gasPreheatCoilParasiticElectricLoad = [])
      @name = name
      @description = description
      @model = model
      @manufacturer = manufacturer
      @ratedFlow = ratedFlow
      @minFlow = minFlow
      @maximumFlow = maximumFlow
      @maximumFlowFractionDuringReheat = maximumFlowFractionDuringReheat
      @operationSchedule = operationSchedule
      @motorInAirstream = motorInAirstream
      @temp = temp
      @enthalpy = enthalpy
      @economizerLockout = economizerLockout
      @resetTemperature = resetTemperature
      @deltaP = deltaP
      @deltaT = deltaT
      @minRelativeHumidity = minRelativeHumidity
      @maxRelativeHumidity = maxRelativeHumidity
      @power = power
      @capacity = capacity
      @control = control
      @efficiency = efficiency
      @airStreamFraction = airStreamFraction
      @performance = performance
      @cost = cost
      @weight = weight
      @life = life
      @waterLoss = waterLoss
      @energy = energy
      @hydronicLoopId = hydronicLoopId
      @reference = reference
      @refrigerantType = refrigerantType
      @cADObjectId = cADObjectId
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @flowType = flowType
      @parallelFanOnFlowFraction = parallelFanOnFlowFraction
      @nightCycleControl = nightCycleControl
      @heatRecoveryType = heatRecoveryType
      @sensibleHeatRecoveryEffectiveness = sensibleHeatRecoveryEffectiveness
      @latentHeatRecoveryEffectiveness = latentHeatRecoveryEffectiveness
      @coolingCoilSetpointResetType = coolingCoilSetpointResetType
      @heatingCoilSetpointResetType = heatingCoilSetpointResetType
      @damperHeatingAction = damperHeatingAction
      @heatPumpDefrostControl = heatPumpDefrostControl
      @heatPumpDefrostStrategy = heatPumpDefrostStrategy
      @supplementalHeatingCoilType = supplementalHeatingCoilType
      @supplementalHeatingCoilCapacity = supplementalHeatingCoilCapacity
      @supplementalGasHeatingCoilEfficiency = supplementalGasHeatingCoilEfficiency
      @supplementalGasHeatingCoilParasiticElectricLoad = supplementalGasHeatingCoilParasiticElectricLoad
      @cyclingRateMax = cyclingRateMax
      @heatPumpTimeConstant = heatPumpTimeConstant
      @fractionOnCyclePowerUse = fractionOnCyclePowerUse
      @heatPumpFanDelayTime = heatPumpFanDelayTime
      @coolingCoilType = coolingCoilType
      @preheatCoilType = preheatCoilType
      @gasPreheatCoilEfficiency = gasPreheatCoilEfficiency
      @gasPreheatCoilParasiticElectricLoad = gasPreheatCoilParasiticElectricLoad
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AirLoopEquipmentId
  #   xmlattr_airLoopEquipIdRef - SOAP::SOAPIDREF
  class AirLoopEquipmentId
    AttrAirLoopEquipIdRef = XSD::QName.new(nil, "airLoopEquipIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_airLoopEquipIdRef
      __xmlattr[AttrAirLoopEquipIdRef]
    end

    def xmlattr_airLoopEquipIdRef=(value)
      __xmlattr[AttrAirLoopEquipIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AirLoopId
  #   xmlattr_airLoopIdRef - SOAP::SOAPIDREF
  class AirLoopId
    AttrAirLoopIdRef = XSD::QName.new(nil, "airLoopIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_airLoopIdRef
      __xmlattr[AttrAirLoopIdRef]
    end

    def xmlattr_airLoopIdRef=(value)
      __xmlattr[AttrAirLoopIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AirStreamFraction
  class AirStreamFraction < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://www.gbxml.org/schema}AirTemperature
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  class AirTemperature < ::String
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ResetTemperature
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_resetSchedIdRef - SOAP::SOAPIDREF
  class ResetTemperature < ::String
    AttrResetSchedIdRef = XSD::QName.new(nil, "resetSchedIdRef")
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_resetSchedIdRef
      __xmlattr[AttrResetSchedIdRef]
    end

    def xmlattr_resetSchedIdRef=(value)
      __xmlattr[AttrResetSchedIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Albedo
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Albedo < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}AltEnergySource
  #   meterId - BuildingSync::MeterId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_altEnergyType - SOAP::SOAPNMTOKEN
  #   xmlattr_resourceType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class AltEnergySource
    AttrAltEnergyType = XSD::QName.new(nil, "altEnergyType")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrResourceType = XSD::QName.new(nil, "resourceType")

    attr_accessor :meterId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_altEnergyType
      __xmlattr[AttrAltEnergyType]
    end

    def xmlattr_altEnergyType=(value)
      __xmlattr[AttrAltEnergyType] = value
    end

    def xmlattr_resourceType
      __xmlattr[AttrResourceType]
    end

    def xmlattr_resourceType=(value)
      __xmlattr[AttrResourceType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(meterId = [])
      @meterId = meterId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Area
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Area < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}BaseboardHeatingType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class BaseboardHeatingType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}BiomassDensity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class BiomassDensity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Blind
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   transmittance - BuildingSync::Transmittance
  #   reflectance - BuildingSync::Reflectance
  #   emittance - BuildingSync::Emittance
  #   thickness - BuildingSync::Thickness
  #   conductivity - BuildingSync::Conductivity
  #   xmlattr_id - SOAP::SOAPID
  class Blind
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :transmittance
    attr_accessor :reflectance
    attr_accessor :emittance
    attr_accessor :thickness
    attr_accessor :conductivity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def initialize(name = [], description = [], transmittance = [], reflectance = [], emittance = [], thickness = [], conductivity = [])
      @name = name
      @description = description
      @transmittance = transmittance
      @reflectance = reflectance
      @emittance = emittance
      @thickness = thickness
      @conductivity = conductivity
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}BlowerDoorValue
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class BlowerDoorValue < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Building
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   streetAddress - SOAP::SOAPString
  #   area - BuildingSync::Area
  #   space - BuildingSync::Space
  #   averageNumberOfFloors - SOAP::SOAPDecimal
  #   infiltrationFlow - BuildingSync::InfiltrationFlow
  #   shellGeometry - BuildingSync::ShellGeometry
  #   spaceBoundary - BuildingSync::SpaceBoundary
  #   lighting - BuildingSync::Lighting
  #   intEquipId - BuildingSync::IntEquipId
  #   meterId - BuildingSync::MeterId
  #   peakDomesticHotWaterFlow - BuildingSync::PeakDomesticHotWaterFlow
  #   buildingStorey - BuildingSync::BuildingStorey
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_buildingType - SOAP::SOAPNMTOKEN
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class Building
    AttrBuildingType = XSD::QName.new(nil, "buildingType")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :streetAddress
    attr_accessor :area
    attr_accessor :space
    attr_accessor :averageNumberOfFloors
    attr_accessor :infiltrationFlow
    attr_accessor :shellGeometry
    attr_accessor :spaceBoundary
    attr_accessor :lighting
    attr_accessor :intEquipId
    attr_accessor :meterId
    attr_accessor :peakDomesticHotWaterFlow
    attr_accessor :buildingStorey

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_buildingType
      __xmlattr[AttrBuildingType]
    end

    def xmlattr_buildingType=(value)
      __xmlattr[AttrBuildingType] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], description = [], streetAddress = [], area = [], space = [], averageNumberOfFloors = [], infiltrationFlow = [], shellGeometry = [], spaceBoundary = [], lighting = [], intEquipId = [], meterId = [], peakDomesticHotWaterFlow = [], buildingStorey = [])
      @name = name
      @description = description
      @streetAddress = streetAddress
      @area = area
      @space = space
      @averageNumberOfFloors = averageNumberOfFloors
      @infiltrationFlow = infiltrationFlow
      @shellGeometry = shellGeometry
      @spaceBoundary = spaceBoundary
      @lighting = lighting
      @intEquipId = intEquipId
      @meterId = meterId
      @peakDomesticHotWaterFlow = peakDomesticHotWaterFlow
      @buildingStorey = buildingStorey
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}BuildingStorey
  #   name - SOAP::SOAPString
  #   level - BuildingSync::Level
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class BuildingStorey
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")

    attr_accessor :name
    attr_accessor :level
    attr_accessor :planarGeometry

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], level = [], planarGeometry = [])
      @name = name
      @level = level
      @planarGeometry = planarGeometry
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CADMaterialId
  #   xmlattr_CADMaterialIdRef - SOAP::SOAPString
  class CADMaterialId
    AttrCADMaterialIdRef = XSD::QName.new(nil, "CADMaterialIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_CADMaterialIdRef
      __xmlattr[AttrCADMaterialIdRef]
    end

    def xmlattr_CADMaterialIdRef=(value)
      __xmlattr[AttrCADMaterialIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CADModelId
  #   xmlattr_programIdRef - SOAP::SOAPIDREF
  class CADModelId < ::String
    AttrProgramIdRef = XSD::QName.new(nil, "programIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_programIdRef
      __xmlattr[AttrProgramIdRef]
    end

    def xmlattr_programIdRef=(value)
      __xmlattr[AttrProgramIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CADObjectId
  #   xmlattr_programIdRef - SOAP::SOAPIDREF
  class CADObjectId < ::String
    AttrProgramIdRef = XSD::QName.new(nil, "programIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_programIdRef
      __xmlattr[AttrProgramIdRef]
    end

    def xmlattr_programIdRef=(value)
      __xmlattr[AttrProgramIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Campus
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   location - BuildingSync::Location_
  #   building - BuildingSync::Building
  #   surface - BuildingSync::Surface
  #   yearModeled - BuildingSync::YearModeled
  #   daylightSavings - SOAP::SOAPBoolean
  #   life - BuildingSync::Life
  #   altEnergySource - BuildingSync::AltEnergySource
  #   shellGeometry - BuildingSync::ShellGeometry
  #   vegetation - BuildingSync::Vegetation
  #   transportation - BuildingSync::Transportation
  #   meterId - BuildingSync::MeterId
  #   extEquipId - BuildingSync::ExtEquipId
  #   lighting - BuildingSync::Lighting
  #   lightControlId - BuildingSync::LightControlId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_designHeatWeathIdRef - SOAP::SOAPIDREF
  #   xmlattr_designCoolWeathIdRef - SOAP::SOAPIDREF
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class Campus
    AttrDesignCoolWeathIdRef = XSD::QName.new(nil, "designCoolWeathIdRef")
    AttrDesignHeatWeathIdRef = XSD::QName.new(nil, "designHeatWeathIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :location
    attr_accessor :building
    attr_accessor :surface
    attr_accessor :yearModeled
    attr_accessor :daylightSavings
    attr_accessor :life
    attr_accessor :altEnergySource
    attr_accessor :shellGeometry
    attr_accessor :vegetation
    attr_accessor :transportation
    attr_accessor :meterId
    attr_accessor :extEquipId
    attr_accessor :lighting
    attr_accessor :lightControlId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_designHeatWeathIdRef
      __xmlattr[AttrDesignHeatWeathIdRef]
    end

    def xmlattr_designHeatWeathIdRef=(value)
      __xmlattr[AttrDesignHeatWeathIdRef] = value
    end

    def xmlattr_designCoolWeathIdRef
      __xmlattr[AttrDesignCoolWeathIdRef]
    end

    def xmlattr_designCoolWeathIdRef=(value)
      __xmlattr[AttrDesignCoolWeathIdRef] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], description = [], location = [], building = [], surface = [], yearModeled = [], daylightSavings = [], life = [], altEnergySource = [], shellGeometry = [], vegetation = [], transportation = [], meterId = [], extEquipId = [], lighting = [], lightControlId = [])
      @name = name
      @description = description
      @location = location
      @building = building
      @surface = surface
      @yearModeled = yearModeled
      @daylightSavings = daylightSavings
      @life = life
      @altEnergySource = altEnergySource
      @shellGeometry = shellGeometry
      @vegetation = vegetation
      @transportation = transportation
      @meterId = meterId
      @extEquipId = extEquipId
      @lighting = lighting
      @lightControlId = lightControlId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Capacity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_capacityType - SOAP::SOAPNMTOKEN
  class Capacity_ < ::String
    AttrCapacityType = XSD::QName.new(nil, "capacityType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_capacityType
      __xmlattr[AttrCapacityType]
    end

    def xmlattr_capacityType=(value)
      __xmlattr[AttrCapacityType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CartesianPoint
  class CartesianPoint < ::Array
  end

  # {http://www.gbxml.org/schema}CDD
  #   temperature - BuildingSync::Temperature
  #   cDDValue - SOAP::SOAPDecimal
  class CDD
    attr_accessor :temperature
    attr_accessor :cDDValue

    def initialize(temperature = [], cDDValue = [])
      @temperature = temperature
      @cDDValue = cDDValue
    end
  end

  # {http://www.gbxml.org/schema}ClosedShell
  class ClosedShell < ::Array
  end

  # {http://www.gbxml.org/schema}CLTDParameters
  #   xmlattr_roofASHRAENumber - SOAP::SOAPNMTOKEN
  #   xmlattr_wallASHRAEGroup - SOAP::SOAPNMTOKEN
  #   xmlattr_roofColor - SOAP::SOAPNMTOKEN
  #   xmlattr_roofHasSuspendedCeiling - SOAP::SOAPBoolean
  #   xmlattr_wallColor - SOAP::SOAPNMTOKEN
  class CLTDParameters
    AttrRoofASHRAENumber = XSD::QName.new(nil, "roofASHRAENumber")
    AttrRoofColor = XSD::QName.new(nil, "roofColor")
    AttrRoofHasSuspendedCeiling = XSD::QName.new(nil, "roofHasSuspendedCeiling")
    AttrWallASHRAEGroup = XSD::QName.new(nil, "wallASHRAEGroup")
    AttrWallColor = XSD::QName.new(nil, "wallColor")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_roofASHRAENumber
      __xmlattr[AttrRoofASHRAENumber]
    end

    def xmlattr_roofASHRAENumber=(value)
      __xmlattr[AttrRoofASHRAENumber] = value
    end

    def xmlattr_wallASHRAEGroup
      __xmlattr[AttrWallASHRAEGroup]
    end

    def xmlattr_wallASHRAEGroup=(value)
      __xmlattr[AttrWallASHRAEGroup] = value
    end

    def xmlattr_roofColor
      __xmlattr[AttrRoofColor]
    end

    def xmlattr_roofColor=(value)
      __xmlattr[AttrRoofColor] = value
    end

    def xmlattr_roofHasSuspendedCeiling
      __xmlattr[AttrRoofHasSuspendedCeiling]
    end

    def xmlattr_roofHasSuspendedCeiling=(value)
      __xmlattr[AttrRoofHasSuspendedCeiling] = value
    end

    def xmlattr_wallColor
      __xmlattr[AttrWallColor]
    end

    def xmlattr_wallColor=(value)
      __xmlattr[AttrWallColor] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CoefficientOfUtilization
  #   xmlattr_wallReflectance - SOAP::SOAPDecimal
  #   xmlattr_ceilingCavityReflectance - SOAP::SOAPDecimal
  #   xmlattr_floorReflectance - SOAP::SOAPDecimal
  #   xmlattr_roomCavityRatio - SOAP::SOAPDecimal
  class CoefficientOfUtilization < ::String
    AttrCeilingCavityReflectance = XSD::QName.new(nil, "ceilingCavityReflectance")
    AttrFloorReflectance = XSD::QName.new(nil, "floorReflectance")
    AttrRoomCavityRatio = XSD::QName.new(nil, "roomCavityRatio")
    AttrWallReflectance = XSD::QName.new(nil, "wallReflectance")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_wallReflectance
      __xmlattr[AttrWallReflectance]
    end

    def xmlattr_wallReflectance=(value)
      __xmlattr[AttrWallReflectance] = value
    end

    def xmlattr_ceilingCavityReflectance
      __xmlattr[AttrCeilingCavityReflectance]
    end

    def xmlattr_ceilingCavityReflectance=(value)
      __xmlattr[AttrCeilingCavityReflectance] = value
    end

    def xmlattr_floorReflectance
      __xmlattr[AttrFloorReflectance]
    end

    def xmlattr_floorReflectance=(value)
      __xmlattr[AttrFloorReflectance] = value
    end

    def xmlattr_roomCavityRatio
      __xmlattr[AttrRoomCavityRatio]
    end

    def xmlattr_roomCavityRatio=(value)
      __xmlattr[AttrRoomCavityRatio] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Conductivity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Conductivity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ConductivityFofT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ConductivityFofT < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Construction
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   u_value - BuildingSync::UValue
  #   absorptance - BuildingSync::Absorptance
  #   roughness - BuildingSync::Roughness
  #   albedo - BuildingSync::Albedo
  #   reflectance - BuildingSync::Reflectance
  #   transmittance - BuildingSync::Transmittance
  #   emittance - BuildingSync::Emittance
  #   cost - BuildingSync::Cost
  #   percentExisting - BuildingSync::PercentExisting
  #   fireFace - BuildingSync::FireFace
  #   layerId - BuildingSync::LayerId
  #   extEquipId - BuildingSync::ExtEquipId
  #   loadCalcInputParameters - BuildingSync::LoadCalcInputParameters
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Construction
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :u_value
    attr_accessor :absorptance
    attr_accessor :roughness
    attr_accessor :albedo
    attr_accessor :reflectance
    attr_accessor :transmittance
    attr_accessor :emittance
    attr_accessor :cost
    attr_accessor :percentExisting
    attr_accessor :fireFace
    attr_accessor :layerId
    attr_accessor :extEquipId
    attr_accessor :loadCalcInputParameters

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], u_value = [], absorptance = [], roughness = [], albedo = [], reflectance = [], transmittance = [], emittance = [], cost = [], percentExisting = [], fireFace = [], layerId = [], extEquipId = [], loadCalcInputParameters = [])
      @name = name
      @description = description
      @u_value = u_value
      @absorptance = absorptance
      @roughness = roughness
      @albedo = albedo
      @reflectance = reflectance
      @transmittance = transmittance
      @emittance = emittance
      @cost = cost
      @percentExisting = percentExisting
      @fireFace = fireFace
      @layerId = layerId
      @extEquipId = extEquipId
      @loadCalcInputParameters = loadCalcInputParameters
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Control
  #   xmlattr_controlType - SOAP::SOAPNMTOKEN
  #   xmlattr_stages - SOAP::SOAPNMTOKEN
  #   xmlattr_minPowerRatio - SOAP::SOAPFloat
  #   xmlattr_operationType - SOAP::SOAPNMTOKEN
  #   xmlattr_performanceIdRef - SOAP::SOAPIDREF
  class Control
    AttrControlType = XSD::QName.new(nil, "controlType")
    AttrMinPowerRatio = XSD::QName.new(nil, "minPowerRatio")
    AttrOperationType = XSD::QName.new(nil, "operationType")
    AttrPerformanceIdRef = XSD::QName.new(nil, "performanceIdRef")
    AttrStages = XSD::QName.new(nil, "stages")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_controlType
      __xmlattr[AttrControlType]
    end

    def xmlattr_controlType=(value)
      __xmlattr[AttrControlType] = value
    end

    def xmlattr_stages
      __xmlattr[AttrStages]
    end

    def xmlattr_stages=(value)
      __xmlattr[AttrStages] = value
    end

    def xmlattr_minPowerRatio
      __xmlattr[AttrMinPowerRatio]
    end

    def xmlattr_minPowerRatio=(value)
      __xmlattr[AttrMinPowerRatio] = value
    end

    def xmlattr_operationType
      __xmlattr[AttrOperationType]
    end

    def xmlattr_operationType=(value)
      __xmlattr[AttrOperationType] = value
    end

    def xmlattr_performanceIdRef
      __xmlattr[AttrPerformanceIdRef]
    end

    def xmlattr_performanceIdRef=(value)
      __xmlattr[AttrPerformanceIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ConvergenceLimits
  #   xmlattr_minimumSystemTimeStep - SOAP::SOAPInteger
  #   xmlattr_maximumHVACIterations - SOAP::SOAPInteger
  #   xmlattr_minimumPlantIterations - SOAP::SOAPInteger
  #   xmlattr_maximumPlantIterations - SOAP::SOAPInteger
  class ConvergenceLimits < ::String
    AttrMaximumHVACIterations = XSD::QName.new(nil, "maximumHVACIterations")
    AttrMaximumPlantIterations = XSD::QName.new(nil, "maximumPlantIterations")
    AttrMinimumPlantIterations = XSD::QName.new(nil, "minimumPlantIterations")
    AttrMinimumSystemTimeStep = XSD::QName.new(nil, "minimumSystemTimeStep")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_minimumSystemTimeStep
      __xmlattr[AttrMinimumSystemTimeStep]
    end

    def xmlattr_minimumSystemTimeStep=(value)
      __xmlattr[AttrMinimumSystemTimeStep] = value
    end

    def xmlattr_maximumHVACIterations
      __xmlattr[AttrMaximumHVACIterations]
    end

    def xmlattr_maximumHVACIterations=(value)
      __xmlattr[AttrMaximumHVACIterations] = value
    end

    def xmlattr_minimumPlantIterations
      __xmlattr[AttrMinimumPlantIterations]
    end

    def xmlattr_minimumPlantIterations=(value)
      __xmlattr[AttrMinimumPlantIterations] = value
    end

    def xmlattr_maximumPlantIterations
      __xmlattr[AttrMaximumPlantIterations]
    end

    def xmlattr_maximumPlantIterations=(value)
      __xmlattr[AttrMaximumPlantIterations] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CoolingCoilSetpointResetType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class CoolingCoilSetpointResetType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CoolingCoilType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class CoolingCoilType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Coordinate
  class Coordinate < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://www.gbxml.org/schema}Cost
  #   costValue - BuildingSync::CostValue
  #   reference - SOAP::SOAPString
  #   xmlattr_costType - SOAP::SOAPNMTOKEN
  class Cost
    AttrCostType = XSD::QName.new(nil, "costType")

    attr_accessor :costValue
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_costType
      __xmlattr[AttrCostType]
    end

    def xmlattr_costType=(value)
      __xmlattr[AttrCostType] = value
    end

    def initialize(costValue = [], reference = [])
      @costValue = costValue
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CostValue
  #   xmlattr_currency - SOAP::SOAPNMTOKEN
  #   xmlattr_unit - SOAP::SOAPString
  class CostValue < ::String
    AttrCurrency = XSD::QName.new(nil, "currency")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_currency
      __xmlattr[AttrCurrency]
    end

    def xmlattr_currency=(value)
      __xmlattr[AttrCurrency] = value
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}CreatedBy
  #   cADModelId - BuildingSync::CADModelId
  #   xmlattr_personId - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  #   xmlattr_date - SOAP::SOAPDateTime
  class CreatedBy
    AttrDate = XSD::QName.new(nil, "date")
    AttrPersonId = XSD::QName.new(nil, "personId")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :cADModelId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_personId
      __xmlattr[AttrPersonId]
    end

    def xmlattr_personId=(value)
      __xmlattr[AttrPersonId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def xmlattr_date
      __xmlattr[AttrDate]
    end

    def xmlattr_date=(value)
      __xmlattr[AttrDate] = value
    end

    def initialize(cADModelId = [])
      @cADModelId = cADModelId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DamperHeatingAction
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DamperHeatingAction
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Data
  #   independentValue - SOAP::SOAPDecimal
  #   dependentValue - SOAP::SOAPDecimal
  class C_Data
    attr_accessor :independentValue
    attr_accessor :dependentValue

    def initialize(independentValue = [], dependentValue = [])
      @independentValue = independentValue
      @dependentValue = dependentValue
    end
  end

  # {http://www.gbxml.org/schema}Day
  #   xmlattr_dayScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_dayType - SOAP::SOAPNMTOKEN
  class Day < ::String
    AttrDayScheduleIdRef = XSD::QName.new(nil, "dayScheduleIdRef")
    AttrDayType = XSD::QName.new(nil, "dayType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_dayScheduleIdRef
      __xmlattr[AttrDayScheduleIdRef]
    end

    def xmlattr_dayScheduleIdRef=(value)
      __xmlattr[AttrDayScheduleIdRef] = value
    end

    def xmlattr_dayType
      __xmlattr[AttrDayType]
    end

    def xmlattr_dayType=(value)
      __xmlattr[AttrDayType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DaySchedule
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   scheduleValue - BuildingSync::ScheduleValue
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleType - SOAP::SOAPNMTOKEN
  #   xmlattr_scheduleTypeLimitsId - SOAP::SOAPString
  class DaySchedule
    AttrId = XSD::QName.new(nil, "id")
    AttrScheduleType = XSD::QName.new(nil, "scheduleType")
    AttrScheduleTypeLimitsId = XSD::QName.new(nil, "scheduleTypeLimitsId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :scheduleValue

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleType
      __xmlattr[AttrScheduleType]
    end

    def xmlattr_scheduleType=(value)
      __xmlattr[AttrScheduleType] = value
    end

    def xmlattr_scheduleTypeLimitsId
      __xmlattr[AttrScheduleTypeLimitsId]
    end

    def xmlattr_scheduleTypeLimitsId=(value)
      __xmlattr[AttrScheduleTypeLimitsId] = value
    end

    def initialize(name = [], description = [], scheduleValue = [])
      @name = name
      @description = description
      @scheduleValue = scheduleValue
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDDBCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDDBCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDDBHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDDBHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDDBRangeCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDDBRangeCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDDBRangeHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDDBRangeHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDGroundTCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDGroundTCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDGroundTHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDGroundTHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDPressureCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDPressureCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDPressureHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDPressureHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDSkyClearnessCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDSkyClearnessCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDSkyClearnessHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDSkyClearnessHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWBCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWBCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWBHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWBHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWindDirCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWindDirCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWindDirHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWindDirHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWindSpeedCool
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWindSpeedCool < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DDWindSpeedHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DDWindSpeedHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DeltaP
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_hydronicLoopType - SOAP::SOAPNMTOKEN
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_conditioningType - SOAP::SOAPNMTOKEN
  #   xmlattr_performanceId - SOAP::SOAPIDREF
  class DeltaP < ::String
    AttrConditioningType = XSD::QName.new(nil, "conditioningType")
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrHydronicLoopType = XSD::QName.new(nil, "hydronicLoopType")
    AttrPerformanceId = XSD::QName.new(nil, "performanceId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_hydronicLoopType
      __xmlattr[AttrHydronicLoopType]
    end

    def xmlattr_hydronicLoopType=(value)
      __xmlattr[AttrHydronicLoopType] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_conditioningType
      __xmlattr[AttrConditioningType]
    end

    def xmlattr_conditioningType=(value)
      __xmlattr[AttrConditioningType] = value
    end

    def xmlattr_performanceId
      __xmlattr[AttrPerformanceId]
    end

    def xmlattr_performanceId=(value)
      __xmlattr[AttrPerformanceId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DeltaT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_conditioningType - SOAP::SOAPNMTOKEN
  class DeltaT < ::String
    AttrConditioningType = XSD::QName.new(nil, "conditioningType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_conditioningType
      __xmlattr[AttrConditioningType]
    end

    def xmlattr_conditioningType=(value)
      __xmlattr[AttrConditioningType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Density
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Density < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DensityFofT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DensityFofT < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DependentVariable
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   xmlattr_unit - SOAP::SOAPString
  #   xmlattr_dataType - SOAP::SOAPString
  #   xmlattr_minValue - SOAP::SOAPDecimal
  #   xmlattr_maxValue - SOAP::SOAPDecimal
  class DependentVariable
    AttrDataType = XSD::QName.new(nil, "dataType")
    AttrMaxValue = XSD::QName.new(nil, "maxValue")
    AttrMinValue = XSD::QName.new(nil, "minValue")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :name
    attr_accessor :description

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_dataType
      __xmlattr[AttrDataType]
    end

    def xmlattr_dataType=(value)
      __xmlattr[AttrDataType] = value
    end

    def xmlattr_minValue
      __xmlattr[AttrMinValue]
    end

    def xmlattr_minValue=(value)
      __xmlattr[AttrMinValue] = value
    end

    def xmlattr_maxValue
      __xmlattr[AttrMaxValue]
    end

    def xmlattr_maxValue=(value)
      __xmlattr[AttrMaxValue] = value
    end

    def initialize(name = [], description = [])
      @name = name
      @description = description
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DesignCoolT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class DesignCoolT < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DesignFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DesignFlow < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}RecircFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class RecircFlow < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DesignHeatT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class DesignHeatT < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DesignPressure
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DesignPressure
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}DesignTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class DesignTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Dimensions
  #   height - BuildingSync::Height
  #   width - BuildingSync::Width
  #   length - BuildingSync::Length
  class Dimensions
    attr_accessor :height
    attr_accessor :width
    attr_accessor :length

    def initialize(height = [], width = [], length = [])
      @height = height
      @width = width
      @length = length
    end
  end

  # {http://www.gbxml.org/schema}DocumentHistory
  #   createdBy - BuildingSync::CreatedBy
  #   programInfo - BuildingSync::ProgramInfo
  #   personInfo - BuildingSync::PersonInfo
  #   modifiedBy - BuildingSync::ModifiedBy
  class DocumentHistory
    attr_accessor :createdBy
    attr_accessor :programInfo
    attr_accessor :personInfo
    attr_accessor :modifiedBy

    def initialize(createdBy = [], programInfo = [], personInfo = [], modifiedBy = [])
      @createdBy = createdBy
      @programInfo = programInfo
      @personInfo = personInfo
      @modifiedBy = modifiedBy
    end
  end

  # {http://www.gbxml.org/schema}EconomizerLockout
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class EconomizerLockout
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Efficiency
  #   xmlattr_standardsType - SOAP::SOAPNMTOKEN
  #   xmlattr_efficiencyType - SOAP::SOAPNMTOKEN
  #   xmlattr_operationType - SOAP::SOAPNMTOKEN
  #   xmlattr_performanceId - SOAP::SOAPIDREF
  class Efficiency < ::String
    AttrEfficiencyType = XSD::QName.new(nil, "efficiencyType")
    AttrOperationType = XSD::QName.new(nil, "operationType")
    AttrPerformanceId = XSD::QName.new(nil, "performanceId")
    AttrStandardsType = XSD::QName.new(nil, "standardsType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_standardsType
      __xmlattr[AttrStandardsType]
    end

    def xmlattr_standardsType=(value)
      __xmlattr[AttrStandardsType] = value
    end

    def xmlattr_efficiencyType
      __xmlattr[AttrEfficiencyType]
    end

    def xmlattr_efficiencyType=(value)
      __xmlattr[AttrEfficiencyType] = value
    end

    def xmlattr_operationType
      __xmlattr[AttrOperationType]
    end

    def xmlattr_operationType=(value)
      __xmlattr[AttrOperationType] = value
    end

    def xmlattr_performanceId
      __xmlattr[AttrPerformanceId]
    end

    def xmlattr_performanceId=(value)
      __xmlattr[AttrPerformanceId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ElecLoad
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ElecLoad < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Elevation
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Elevation < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}EmissionRate
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class EmissionRate < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Emittance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_surfaceType - SOAP::SOAPNMTOKEN
  class Emittance < ::String
    AttrSurfaceType = XSD::QName.new(nil, "surfaceType")
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_surfaceType
      __xmlattr[AttrSurfaceType]
    end

    def xmlattr_surfaceType=(value)
      __xmlattr[AttrSurfaceType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Energy
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_valueType - SOAP::SOAPNMTOKEN
  #   xmlattr_timePeriod - SOAP::SOAPNMTOKEN
  #   xmlattr_resourceType - SOAP::SOAPNMTOKEN
  #   xmlattr_meterIdRef - SOAP::SOAPIDREF
  class Energy < ::String
    AttrMeterIdRef = XSD::QName.new(nil, "meterIdRef")
    AttrResourceType = XSD::QName.new(nil, "resourceType")
    AttrTimePeriod = XSD::QName.new(nil, "timePeriod")
    AttrUnit = XSD::QName.new(nil, "unit")
    AttrValueType = XSD::QName.new(nil, "valueType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_valueType
      __xmlattr[AttrValueType]
    end

    def xmlattr_valueType=(value)
      __xmlattr[AttrValueType] = value
    end

    def xmlattr_timePeriod
      __xmlattr[AttrTimePeriod]
    end

    def xmlattr_timePeriod=(value)
      __xmlattr[AttrTimePeriod] = value
    end

    def xmlattr_resourceType
      __xmlattr[AttrResourceType]
    end

    def xmlattr_resourceType=(value)
      __xmlattr[AttrResourceType] = value
    end

    def xmlattr_meterIdRef
      __xmlattr[AttrMeterIdRef]
    end

    def xmlattr_meterIdRef=(value)
      __xmlattr[AttrMeterIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Enthalpy
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_enthalpyType - SOAP::SOAPNMTOKEN
  class Enthalpy < ::String
    AttrEnthalpyType = XSD::QName.new(nil, "enthalpyType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_enthalpyType
      __xmlattr[AttrEnthalpyType]
    end

    def xmlattr_enthalpyType=(value)
      __xmlattr[AttrEnthalpyType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Equation
  #   expression - SOAP::SOAPString
  #   independentVariable - BuildingSync::IndependentVariable
  #   dependentVariable - BuildingSync::DependentVariable
  class Equation
    attr_accessor :expression
    attr_accessor :independentVariable
    attr_accessor :dependentVariable

    def initialize(expression = [], independentVariable = [], dependentVariable = [])
      @expression = expression
      @independentVariable = independentVariable
      @dependentVariable = dependentVariable
    end
  end

  # {http://www.gbxml.org/schema}EquipPowerPerArea
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class EquipPowerPerArea < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ExtEquip
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   manufacturer - SOAP::SOAPString
  #   model - SOAP::SOAPString
  #   elecLoad - BuildingSync::ElecLoad
  #   fuelLoad - BuildingSync::FuelLoad
  #   latentLoad - BuildingSync::LatentLoad
  #   windSpeed - BuildingSync::WindSpeed
  #   efficiency - BuildingSync::Efficiency
  #   performance - BuildingSync::Performance
  #   cost - BuildingSync::Cost
  #   weight - BuildingSync::Weight
  #   wasteWaterHREff - BuildingSync::WasteWaterHREff
  #   waterUsePerCycle - BuildingSync::WaterUsePerCycle
  #   ratedFlow - BuildingSync::RatedFlow
  #   power - BuildingSync::Power
  #   cyclesPerWeek - SOAP::SOAPDecimal
  #   energy - BuildingSync::Energy
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   indoorAirQuality - BuildingSync::IndoorAirQuality
  #   age - BuildingSync::Age
  #   reference - SOAP::SOAPString
  #   cADObjectId - BuildingSync::CADObjectId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterTempScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterMeterIdRef - SOAP::SOAPIDREF
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_airLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class ExtEquip
    AttrAirLoopIdRef = XSD::QName.new(nil, "airLoopIdRef")
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")
    AttrType = XSD::QName.new(nil, "type")
    AttrWaterMeterIdRef = XSD::QName.new(nil, "waterMeterIdRef")
    AttrWaterScheduleIdRef = XSD::QName.new(nil, "waterScheduleIdRef")
    AttrWaterTempScheduleIdRef = XSD::QName.new(nil, "waterTempScheduleIdRef")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :manufacturer
    attr_accessor :model
    attr_accessor :elecLoad
    attr_accessor :fuelLoad
    attr_accessor :latentLoad
    attr_accessor :windSpeed
    attr_accessor :efficiency
    attr_accessor :performance
    attr_accessor :cost
    attr_accessor :weight
    attr_accessor :wasteWaterHREff
    attr_accessor :waterUsePerCycle
    attr_accessor :ratedFlow
    attr_accessor :power
    attr_accessor :cyclesPerWeek
    attr_accessor :energy
    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :indoorAirQuality
    attr_accessor :age
    attr_accessor :reference
    attr_accessor :cADObjectId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def xmlattr_waterTempScheduleIdRef
      __xmlattr[AttrWaterTempScheduleIdRef]
    end

    def xmlattr_waterTempScheduleIdRef=(value)
      __xmlattr[AttrWaterTempScheduleIdRef] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_waterScheduleIdRef
      __xmlattr[AttrWaterScheduleIdRef]
    end

    def xmlattr_waterScheduleIdRef=(value)
      __xmlattr[AttrWaterScheduleIdRef] = value
    end

    def xmlattr_waterMeterIdRef
      __xmlattr[AttrWaterMeterIdRef]
    end

    def xmlattr_waterMeterIdRef=(value)
      __xmlattr[AttrWaterMeterIdRef] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_airLoopIdRef
      __xmlattr[AttrAirLoopIdRef]
    end

    def xmlattr_airLoopIdRef=(value)
      __xmlattr[AttrAirLoopIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], manufacturer = [], model = [], elecLoad = [], fuelLoad = [], latentLoad = [], windSpeed = [], efficiency = [], performance = [], cost = [], weight = [], wasteWaterHREff = [], waterUsePerCycle = [], ratedFlow = [], power = [], cyclesPerWeek = [], energy = [], generalGeometry = [], shellGeometry = [], indoorAirQuality = [], age = [], reference = [], cADObjectId = [])
      @name = name
      @description = description
      @manufacturer = manufacturer
      @model = model
      @elecLoad = elecLoad
      @fuelLoad = fuelLoad
      @latentLoad = latentLoad
      @windSpeed = windSpeed
      @efficiency = efficiency
      @performance = performance
      @cost = cost
      @weight = weight
      @wasteWaterHREff = wasteWaterHREff
      @waterUsePerCycle = waterUsePerCycle
      @ratedFlow = ratedFlow
      @power = power
      @cyclesPerWeek = cyclesPerWeek
      @energy = energy
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @indoorAirQuality = indoorAirQuality
      @age = age
      @reference = reference
      @cADObjectId = cADObjectId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ExtEquipId
  #   xmlattr_extEquipIdRef - SOAP::SOAPIDREF
  class ExtEquipId < ::String
    AttrExtEquipIdRef = XSD::QName.new(nil, "extEquipIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_extEquipIdRef
      __xmlattr[AttrExtEquipIdRef]
    end

    def xmlattr_extEquipIdRef=(value)
      __xmlattr[AttrExtEquipIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Fire
  #   thickness - BuildingSync::Thickness
  #   conductivity - BuildingSync::Conductivity
  #   density - BuildingSync::Density
  #   specificHeat - BuildingSync::SpecificHeat
  class Fire
    attr_accessor :thickness
    attr_accessor :conductivity
    attr_accessor :density
    attr_accessor :specificHeat

    def initialize(thickness = nil, conductivity = nil, density = nil, specificHeat = nil)
      @thickness = thickness
      @conductivity = conductivity
      @density = density
      @specificHeat = specificHeat
    end
  end

  # {http://www.gbxml.org/schema}FireFace
  #   absorptance - BuildingSync::Absorptance
  #   reflectance - BuildingSync::Reflectance
  #   emittance - BuildingSync::Emittance
  class FireFace
    attr_accessor :absorptance
    attr_accessor :reflectance
    attr_accessor :emittance

    def initialize(absorptance = [], reflectance = [], emittance = [])
      @absorptance = absorptance
      @reflectance = reflectance
      @emittance = emittance
    end
  end

  # {http://www.gbxml.org/schema}FloorSlabHeatLossCoefficient
  #   xmlattr_floorSlabPerimeterHeatLossCoefficientUnitTypeEnum - SOAP::SOAPNMTOKEN
  class FloorSlabHeatLossCoefficient < ::String
    AttrFloorSlabPerimeterHeatLossCoefficientUnitTypeEnum = XSD::QName.new(nil, "floorSlabPerimeterHeatLossCoefficientUnitTypeEnum")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_floorSlabPerimeterHeatLossCoefficientUnitTypeEnum
      __xmlattr[AttrFloorSlabPerimeterHeatLossCoefficientUnitTypeEnum]
    end

    def xmlattr_floorSlabPerimeterHeatLossCoefficientUnitTypeEnum=(value)
      __xmlattr[AttrFloorSlabPerimeterHeatLossCoefficientUnitTypeEnum] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Flow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Flow < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}FlowControl
  #   designFlow - BuildingSync::DesignFlow
  #   minimumFlow - BuildingSync::MinimumFlow
  #   maximumFlow - BuildingSync::MaximumFlow
  #   recircFlow - BuildingSync::RecircFlow
  #   xmlattr_processScheduleId - SOAP::SOAPIDREF
  class FlowControl
    AttrProcessScheduleId = XSD::QName.new(nil, "processScheduleId")

    attr_accessor :designFlow
    attr_accessor :minimumFlow
    attr_accessor :maximumFlow
    attr_accessor :recircFlow

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_processScheduleId
      __xmlattr[AttrProcessScheduleId]
    end

    def xmlattr_processScheduleId=(value)
      __xmlattr[AttrProcessScheduleId] = value
    end

    def initialize(designFlow = [], minimumFlow = [], maximumFlow = [], recircFlow = [])
      @designFlow = designFlow
      @minimumFlow = minimumFlow
      @maximumFlow = maximumFlow
      @recircFlow = recircFlow
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}FlowPerArea
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class FlowPerArea < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}FlowPerPerson
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class FlowPerPerson < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}FlowType
  #   xmlattr_flowType - SOAP::SOAPNMTOKEN
  class FlowType
    AttrFlowType = XSD::QName.new(nil, "flowType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_flowType
      __xmlattr[AttrFlowType]
    end

    def xmlattr_flowType=(value)
      __xmlattr[AttrFlowType] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Frame
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   width - BuildingSync::Width
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  class Frame
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :width

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def initialize(name = [], description = [], width = [])
      @name = name
      @description = description
      @width = width
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}FuelLoad
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class FuelLoad < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Gap
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   thickness - BuildingSync::Thickness
  #   density - BuildingSync::Density
  #   densityFofT - BuildingSync::DensityFofT
  #   conductivity - BuildingSync::Conductivity
  #   conductivityFofT - BuildingSync::ConductivityFofT
  #   viscosity - BuildingSync::Viscosity
  #   viscosityFofT - BuildingSync::ViscosityFofT
  #   prandtlNumber - SOAP::SOAPDecimal
  #   prandtlNumberFofT - BuildingSync::PrandtlNumberFofT
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_gas - SOAP::SOAPNMTOKEN
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  class Gap
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrGas = XSD::QName.new(nil, "gas")
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :thickness
    attr_accessor :density
    attr_accessor :densityFofT
    attr_accessor :conductivity
    attr_accessor :conductivityFofT
    attr_accessor :viscosity
    attr_accessor :viscosityFofT
    attr_accessor :prandtlNumber
    attr_accessor :prandtlNumberFofT

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_gas
      __xmlattr[AttrGas]
    end

    def xmlattr_gas=(value)
      __xmlattr[AttrGas] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def initialize(name = [], description = [], thickness = [], density = [], densityFofT = [], conductivity = [], conductivityFofT = [], viscosity = [], viscosityFofT = [], prandtlNumber = [], prandtlNumberFofT = [])
      @name = name
      @description = description
      @thickness = thickness
      @density = density
      @densityFofT = densityFofT
      @conductivity = conductivity
      @conductivityFofT = conductivityFofT
      @viscosity = viscosity
      @viscosityFofT = viscosityFofT
      @prandtlNumber = prandtlNumber
      @prandtlNumberFofT = prandtlNumberFofT
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GapId
  #   xmlattr_gapIdRef - SOAP::SOAPIDREF
  class GapId
    AttrGapIdRef = XSD::QName.new(nil, "gapIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_gapIdRef
      __xmlattr[AttrGapIdRef]
    end

    def xmlattr_gapIdRef=(value)
      __xmlattr[AttrGapIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GeneralGeometry
  class GeneralGeometry
    attr_reader :__xmlele_any

    def set_any(elements)
      @__xmlele_any = elements
    end

    def initialize
      @__xmlele_any = nil
    end
  end

  # {http://www.gbxml.org/schema}Glare
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Glare < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Glaze
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   transmittance - BuildingSync::Transmittance
  #   reflectance - BuildingSync::Reflectance
  #   emittance - BuildingSync::Emittance
  #   thickness - BuildingSync::Thickness
  #   conductivity - BuildingSync::Conductivity
  #   reference - SOAP::SOAPString
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  class Glaze
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :transmittance
    attr_accessor :reflectance
    attr_accessor :emittance
    attr_accessor :thickness
    attr_accessor :conductivity
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def initialize(name = [], description = [], transmittance = [], reflectance = [], emittance = [], thickness = [], conductivity = [], reference = [])
      @name = name
      @description = description
      @transmittance = transmittance
      @reflectance = reflectance
      @emittance = emittance
      @thickness = thickness
      @conductivity = conductivity
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GlazeConductivity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class GlazeConductivity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GlazeId
  #   xmlattr_glazeIdRef - SOAP::SOAPIDREF
  class GlazeId
    AttrGlazeIdRef = XSD::QName.new(nil, "glazeIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_glazeIdRef
      __xmlattr[AttrGlazeIdRef]
    end

    def xmlattr_glazeIdRef=(value)
      __xmlattr[AttrGlazeIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GroundTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class GroundTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}GUID
  #   xmlattr_entity - SOAP::SOAPNMTOKEN
  class GUID < ::String
    AttrEntity = XSD::QName.new(nil, "entity")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_entity
      __xmlattr[AttrEntity]
    end

    def xmlattr_entity=(value)
      __xmlattr[AttrEntity] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HDD
  #   temperature - BuildingSync::Temperature
  #   hDDValue - SOAP::SOAPDecimal
  class HDD
    attr_accessor :temperature
    attr_accessor :hDDValue

    def initialize(temperature = [], hDDValue = [])
      @temperature = temperature
      @hDDValue = hDDValue
    end
  end

  # {http://www.gbxml.org/schema}HeatingCoilSetpointResetType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HeatingCoilSetpointResetType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HeatPumpDefrostControl
  #   xmlattr_defrostControlType - SOAP::SOAPNMTOKEN
  class HeatPumpDefrostControl < ::String
    AttrDefrostControlType = XSD::QName.new(nil, "defrostControlType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_defrostControlType
      __xmlattr[AttrDefrostControlType]
    end

    def xmlattr_defrostControlType=(value)
      __xmlattr[AttrDefrostControlType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HeatPumpDefrostStrategy
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HeatPumpDefrostStrategy
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HeatRecoveryType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HeatRecoveryType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Height
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Height < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HighLimit
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HighLimit < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HighValue
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HighValue < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HorizontalSolar
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HorizontalSolar < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HOutside
  #   xmlattr_hOutsideUnitTypeEnum - SOAP::SOAPNMTOKEN
  class HOutside < ::String
    AttrHOutsideUnitTypeEnum = XSD::QName.new(nil, "hOutsideUnitTypeEnum")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_hOutsideUnitTypeEnum
      __xmlattr[AttrHOutsideUnitTypeEnum]
    end

    def xmlattr_hOutsideUnitTypeEnum=(value)
      __xmlattr[AttrHOutsideUnitTypeEnum] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HydronicLoop
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   cost - BuildingSync::Cost
  #   reference - SOAP::SOAPString
  #   hydronicLoopEquipment - BuildingSync::HydronicLoopEquipment
  #   flowControl - BuildingSync::FlowControl
  #   temperatureControl - BuildingSync::TemperatureControl
  #   designCoolT - BuildingSync::DesignCoolT
  #   xmlattr_loopType - SOAP::SOAPNMTOKEN
  #   xmlattr_controlZoneIdRef - SOAP::SOAPIDREF
  #   xmlattr_primaryLoopId - SOAP::SOAPIDREF
  #   xmlattr_fluidType - SOAP::SOAPNMTOKEN
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_programId - SOAP::SOAPIDREF
  class HydronicLoop
    AttrControlZoneIdRef = XSD::QName.new(nil, "controlZoneIdRef")
    AttrFluidType = XSD::QName.new(nil, "fluidType")
    AttrId = XSD::QName.new(nil, "id")
    AttrLoopType = XSD::QName.new(nil, "loopType")
    AttrPrimaryLoopId = XSD::QName.new(nil, "primaryLoopId")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :cost
    attr_accessor :reference
    attr_accessor :hydronicLoopEquipment
    attr_accessor :flowControl
    attr_accessor :temperatureControl
    attr_accessor :designCoolT

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_loopType
      __xmlattr[AttrLoopType]
    end

    def xmlattr_loopType=(value)
      __xmlattr[AttrLoopType] = value
    end

    def xmlattr_controlZoneIdRef
      __xmlattr[AttrControlZoneIdRef]
    end

    def xmlattr_controlZoneIdRef=(value)
      __xmlattr[AttrControlZoneIdRef] = value
    end

    def xmlattr_primaryLoopId
      __xmlattr[AttrPrimaryLoopId]
    end

    def xmlattr_primaryLoopId=(value)
      __xmlattr[AttrPrimaryLoopId] = value
    end

    def xmlattr_fluidType
      __xmlattr[AttrFluidType]
    end

    def xmlattr_fluidType=(value)
      __xmlattr[AttrFluidType] = value
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], cost = [], reference = [], hydronicLoopEquipment = [], flowControl = [], temperatureControl = [], designCoolT = [])
      @name = name
      @description = description
      @cost = cost
      @reference = reference
      @hydronicLoopEquipment = hydronicLoopEquipment
      @flowControl = flowControl
      @temperatureControl = temperatureControl
      @designCoolT = designCoolT
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HydronicLoopEquipment
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   manufacturer - SOAP::SOAPString
  #   model - SOAP::SOAPString
  #   operationSchedule - BuildingSync::OperationSchedule
  #   temp - BuildingSync::Temp
  #   resetTemperature - BuildingSync::ResetTemperature
  #   hydronicLoopId - BuildingSync::HydronicLoopId
  #   ratedFlow - BuildingSync::RatedFlow
  #   minFlow - BuildingSync::MinFlow
  #   deltaT - BuildingSync::DeltaT
  #   deltaP - BuildingSync::DeltaP
  #   power - BuildingSync::Power
  #   capacity - BuildingSync::Capacity_
  #   efficiency - BuildingSync::Efficiency
  #   control - BuildingSync::Control
  #   performance - BuildingSync::Performance
  #   cost - BuildingSync::Cost
  #   weight - BuildingSync::Weight
  #   life - BuildingSync::Life
  #   refrigerantType - SOAP::SOAPString
  #   energy - BuildingSync::Energy
  #   age - BuildingSync::Age
  #   reference - SOAP::SOAPString
  #   cADObjectId - BuildingSync::CADObjectId
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_equipmentType - SOAP::SOAPNMTOKEN
  #   xmlattr_waterMeterIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_primaryLoopId - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class HydronicLoopEquipment
    AttrEquipmentType = XSD::QName.new(nil, "equipmentType")
    AttrId = XSD::QName.new(nil, "id")
    AttrPrimaryLoopId = XSD::QName.new(nil, "primaryLoopId")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrWaterMeterIdRef = XSD::QName.new(nil, "waterMeterIdRef")
    AttrWaterScheduleIdRef = XSD::QName.new(nil, "waterScheduleIdRef")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :manufacturer
    attr_accessor :model
    attr_accessor :operationSchedule
    attr_accessor :temp
    attr_accessor :resetTemperature
    attr_accessor :hydronicLoopId
    attr_accessor :ratedFlow
    attr_accessor :minFlow
    attr_accessor :deltaT
    attr_accessor :deltaP
    attr_accessor :power
    attr_accessor :capacity
    attr_accessor :efficiency
    attr_accessor :control
    attr_accessor :performance
    attr_accessor :cost
    attr_accessor :weight
    attr_accessor :life
    attr_accessor :refrigerantType
    attr_accessor :energy
    attr_accessor :age
    attr_accessor :reference
    attr_accessor :cADObjectId
    attr_accessor :generalGeometry
    attr_accessor :shellGeometry

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_equipmentType
      __xmlattr[AttrEquipmentType]
    end

    def xmlattr_equipmentType=(value)
      __xmlattr[AttrEquipmentType] = value
    end

    def xmlattr_waterMeterIdRef
      __xmlattr[AttrWaterMeterIdRef]
    end

    def xmlattr_waterMeterIdRef=(value)
      __xmlattr[AttrWaterMeterIdRef] = value
    end

    def xmlattr_waterScheduleIdRef
      __xmlattr[AttrWaterScheduleIdRef]
    end

    def xmlattr_waterScheduleIdRef=(value)
      __xmlattr[AttrWaterScheduleIdRef] = value
    end

    def xmlattr_primaryLoopId
      __xmlattr[AttrPrimaryLoopId]
    end

    def xmlattr_primaryLoopId=(value)
      __xmlattr[AttrPrimaryLoopId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], manufacturer = [], model = [], operationSchedule = [], temp = [], resetTemperature = [], hydronicLoopId = [], ratedFlow = [], minFlow = [], deltaT = [], deltaP = [], power = [], capacity = [], efficiency = [], control = [], performance = [], cost = [], weight = [], life = [], refrigerantType = [], energy = [], age = [], reference = [], cADObjectId = [], generalGeometry = [], shellGeometry = [])
      @name = name
      @description = description
      @manufacturer = manufacturer
      @model = model
      @operationSchedule = operationSchedule
      @temp = temp
      @resetTemperature = resetTemperature
      @hydronicLoopId = hydronicLoopId
      @ratedFlow = ratedFlow
      @minFlow = minFlow
      @deltaT = deltaT
      @deltaP = deltaP
      @power = power
      @capacity = capacity
      @efficiency = efficiency
      @control = control
      @performance = performance
      @cost = cost
      @weight = weight
      @life = life
      @refrigerantType = refrigerantType
      @energy = energy
      @age = age
      @reference = reference
      @cADObjectId = cADObjectId
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HydronicLoopEquipmentId
  #   xmlattr_hydronicLoopEquipIdRef - SOAP::SOAPIDREF
  class HydronicLoopEquipmentId
    AttrHydronicLoopEquipIdRef = XSD::QName.new(nil, "hydronicLoopEquipIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_hydronicLoopEquipIdRef
      __xmlattr[AttrHydronicLoopEquipIdRef]
    end

    def xmlattr_hydronicLoopEquipIdRef=(value)
      __xmlattr[AttrHydronicLoopEquipIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HydronicLoopId
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopType - SOAP::SOAPNMTOKEN
  class HydronicLoopId
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrHydronicLoopType = XSD::QName.new(nil, "hydronicLoopType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_hydronicLoopType
      __xmlattr[AttrHydronicLoopType]
    end

    def xmlattr_hydronicLoopType=(value)
      __xmlattr[AttrHydronicLoopType] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Illuminance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Illuminance < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ImageTexture
  #   xmlattr_url - SOAP::SOAPString
  #   xmlattr_repeatS - SOAP::SOAPBoolean
  #   xmlattr_repeatT - SOAP::SOAPBoolean
  class ImageTexture
    AttrRepeatS = XSD::QName.new(nil, "repeatS")
    AttrRepeatT = XSD::QName.new(nil, "repeatT")
    AttrUrl = XSD::QName.new(nil, "url")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_url
      __xmlattr[AttrUrl]
    end

    def xmlattr_url=(value)
      __xmlattr[AttrUrl] = value
    end

    def xmlattr_repeatS
      __xmlattr[AttrRepeatS]
    end

    def xmlattr_repeatS=(value)
      __xmlattr[AttrRepeatS] = value
    end

    def xmlattr_repeatT
      __xmlattr[AttrRepeatT]
    end

    def xmlattr_repeatT=(value)
      __xmlattr[AttrRepeatT] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}IndependentVariable
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   xmlattr_unit - SOAP::SOAPString
  #   xmlattr_dataType - SOAP::SOAPString
  class IndependentVariable
    AttrDataType = XSD::QName.new(nil, "dataType")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :name
    attr_accessor :description

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_dataType
      __xmlattr[AttrDataType]
    end

    def xmlattr_dataType=(value)
      __xmlattr[AttrDataType] = value
    end

    def initialize(name = [], description = [])
      @name = name
      @description = description
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}IndoorAirQuality
  #   emissionRate - BuildingSync::EmissionRate
  #   sinkRate - BuildingSync::SinkRate
  #   highLimit - BuildingSync::HighLimit
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  class IndoorAirQuality
    AttrId = XSD::QName.new(nil, "id")
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")

    attr_accessor :emissionRate
    attr_accessor :sinkRate
    attr_accessor :highLimit

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def initialize(emissionRate = [], sinkRate = [], highLimit = [])
      @emissionRate = emissionRate
      @sinkRate = sinkRate
      @highLimit = highLimit
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}InfiltrationFlow
  #   blowerDoorValue - BuildingSync::BlowerDoorValue
  #   reference - SOAP::SOAPString
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class InfiltrationFlow
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :blowerDoorValue
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(blowerDoorValue = [], reference = [])
      @blowerDoorValue = blowerDoorValue
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}InputWatts
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class InputWatts < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}InsideAirFilmResistance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class InsideAirFilmResistance < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}IntEquip
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   manufacturer - SOAP::SOAPString
  #   model - SOAP::SOAPString
  #   elecLoad - BuildingSync::ElecLoad
  #   fuelLoad - BuildingSync::FuelLoad
  #   latentLoad - BuildingSync::LatentLoad
  #   efficiency - BuildingSync::Efficiency
  #   performance - BuildingSync::Performance
  #   cost - BuildingSync::Cost
  #   weight - BuildingSync::Weight
  #   wasteWaterHREff - BuildingSync::WasteWaterHREff
  #   waterUsePerCycle - BuildingSync::WaterUsePerCycle
  #   ratedFlow - BuildingSync::RatedFlow
  #   heatRejectedtoSpace - BuildingSync::HeatRejectedtoSpace
  #   power - BuildingSync::Power
  #   cyclesPerWeek - SOAP::SOAPDecimal
  #   energy - BuildingSync::Energy
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   indoorAirQuality - BuildingSync::IndoorAirQuality
  #   age - BuildingSync::Age
  #   reference - SOAP::SOAPString
  #   cADObjectId - BuildingSync::CADObjectId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterTempScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterMeterIdRef - SOAP::SOAPIDREF
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_airLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class IntEquip
    AttrAirLoopIdRef = XSD::QName.new(nil, "airLoopIdRef")
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")
    AttrType = XSD::QName.new(nil, "type")
    AttrWaterMeterIdRef = XSD::QName.new(nil, "waterMeterIdRef")
    AttrWaterScheduleIdRef = XSD::QName.new(nil, "waterScheduleIdRef")
    AttrWaterTempScheduleIdRef = XSD::QName.new(nil, "waterTempScheduleIdRef")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :manufacturer
    attr_accessor :model
    attr_accessor :elecLoad
    attr_accessor :fuelLoad
    attr_accessor :latentLoad
    attr_accessor :efficiency
    attr_accessor :performance
    attr_accessor :cost
    attr_accessor :weight
    attr_accessor :wasteWaterHREff
    attr_accessor :waterUsePerCycle
    attr_accessor :ratedFlow
    attr_accessor :heatRejectedtoSpace
    attr_accessor :power
    attr_accessor :cyclesPerWeek
    attr_accessor :energy
    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :indoorAirQuality
    attr_accessor :age
    attr_accessor :reference
    attr_accessor :cADObjectId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def xmlattr_waterTempScheduleIdRef
      __xmlattr[AttrWaterTempScheduleIdRef]
    end

    def xmlattr_waterTempScheduleIdRef=(value)
      __xmlattr[AttrWaterTempScheduleIdRef] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_waterScheduleIdRef
      __xmlattr[AttrWaterScheduleIdRef]
    end

    def xmlattr_waterScheduleIdRef=(value)
      __xmlattr[AttrWaterScheduleIdRef] = value
    end

    def xmlattr_waterMeterIdRef
      __xmlattr[AttrWaterMeterIdRef]
    end

    def xmlattr_waterMeterIdRef=(value)
      __xmlattr[AttrWaterMeterIdRef] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_airLoopIdRef
      __xmlattr[AttrAirLoopIdRef]
    end

    def xmlattr_airLoopIdRef=(value)
      __xmlattr[AttrAirLoopIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], manufacturer = [], model = [], elecLoad = [], fuelLoad = [], latentLoad = [], efficiency = [], performance = [], cost = [], weight = [], wasteWaterHREff = [], waterUsePerCycle = [], ratedFlow = [], heatRejectedtoSpace = [], power = [], cyclesPerWeek = [], energy = [], generalGeometry = [], shellGeometry = [], indoorAirQuality = [], age = [], reference = [], cADObjectId = [])
      @name = name
      @description = description
      @manufacturer = manufacturer
      @model = model
      @elecLoad = elecLoad
      @fuelLoad = fuelLoad
      @latentLoad = latentLoad
      @efficiency = efficiency
      @performance = performance
      @cost = cost
      @weight = weight
      @wasteWaterHREff = wasteWaterHREff
      @waterUsePerCycle = waterUsePerCycle
      @ratedFlow = ratedFlow
      @heatRejectedtoSpace = heatRejectedtoSpace
      @power = power
      @cyclesPerWeek = cyclesPerWeek
      @energy = energy
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @indoorAirQuality = indoorAirQuality
      @age = age
      @reference = reference
      @cADObjectId = cADObjectId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}IntEquipId
  #   xmlattr_intEquipIdRef - SOAP::SOAPIDREF
  class IntEquipId
    AttrIntEquipIdRef = XSD::QName.new(nil, "intEquipIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_intEquipIdRef
      __xmlattr[AttrIntEquipIdRef]
    end

    def xmlattr_intEquipIdRef=(value)
      __xmlattr[AttrIntEquipIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LatentLoad
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class LatentLoad < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Layer
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   cost - BuildingSync::Cost
  #   insideAirFilmResistance - BuildingSync::InsideAirFilmResistance
  #   materialId - BuildingSync::MaterialId
  #   hOutside - BuildingSync::HOutside
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  class Layer
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :cost
    attr_accessor :insideAirFilmResistance
    attr_accessor :materialId
    attr_accessor :hOutside

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def initialize(name = [], description = [], cost = [], insideAirFilmResistance = [], materialId = [], hOutside = [])
      @name = name
      @description = description
      @cost = cost
      @insideAirFilmResistance = insideAirFilmResistance
      @materialId = materialId
      @hOutside = hOutside
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LayerId
  #   xmlattr_layerIdRef - SOAP::SOAPIDREF
  class LayerId
    AttrLayerIdRef = XSD::QName.new(nil, "layerIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_layerIdRef
      __xmlattr[AttrLayerIdRef]
    end

    def xmlattr_layerIdRef=(value)
      __xmlattr[AttrLayerIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Length
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Length < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Level
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Level < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Life
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Life < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LightControlId
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  class LightControlId < ::String
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LightId
  #   xmlattr_lightIdRef - SOAP::SOAPIDREF
  class LightId
    AttrLightIdRef = XSD::QName.new(nil, "lightIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_lightIdRef
      __xmlattr[AttrLightIdRef]
    end

    def xmlattr_lightIdRef=(value)
      __xmlattr[AttrLightIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Lighting
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   coefficientOfUtilization - BuildingSync::CoefficientOfUtilization
  #   photometryOrientation - BuildingSync::PhotometryOrientation
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_lightingSystemIdRef - SOAP::SOAPIDREF
  #   xmlattr_lightingControlIdRef - SOAP::SOAPIDREF
  #   xmlattr_meterIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Lighting
    AttrId = XSD::QName.new(nil, "id")
    AttrLightingControlIdRef = XSD::QName.new(nil, "lightingControlIdRef")
    AttrLightingSystemIdRef = XSD::QName.new(nil, "lightingSystemIdRef")
    AttrMeterIdRef = XSD::QName.new(nil, "meterIdRef")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :coefficientOfUtilization
    attr_accessor :photometryOrientation

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_lightingSystemIdRef
      __xmlattr[AttrLightingSystemIdRef]
    end

    def xmlattr_lightingSystemIdRef=(value)
      __xmlattr[AttrLightingSystemIdRef] = value
    end

    def xmlattr_lightingControlIdRef
      __xmlattr[AttrLightingControlIdRef]
    end

    def xmlattr_lightingControlIdRef=(value)
      __xmlattr[AttrLightingControlIdRef] = value
    end

    def xmlattr_meterIdRef
      __xmlattr[AttrMeterIdRef]
    end

    def xmlattr_meterIdRef=(value)
      __xmlattr[AttrMeterIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(generalGeometry = [], shellGeometry = [], coefficientOfUtilization = [], photometryOrientation = [])
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @coefficientOfUtilization = coefficientOfUtilization
      @photometryOrientation = photometryOrientation
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LightingControl
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   illuminance - BuildingSync::Illuminance
  #   cartesianPoint - BuildingSync::CartesianPoint
  #   minPowerFrac - SOAP::SOAPDecimal
  #   minLightFrac - SOAP::SOAPDecimal
  #   percentAreaDaylitControlled - BuildingSync::PercentAreaDaylitControlled
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_lightingSystemIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class LightingControl
    AttrId = XSD::QName.new(nil, "id")
    AttrLightingSystemIdRef = XSD::QName.new(nil, "lightingSystemIdRef")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :illuminance
    attr_accessor :cartesianPoint
    attr_accessor :minPowerFrac
    attr_accessor :minLightFrac
    attr_accessor :percentAreaDaylitControlled

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_lightingSystemIdRef
      __xmlattr[AttrLightingSystemIdRef]
    end

    def xmlattr_lightingSystemIdRef=(value)
      __xmlattr[AttrLightingSystemIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(generalGeometry = [], shellGeometry = [], illuminance = [], cartesianPoint = [], minPowerFrac = [], minLightFrac = [], percentAreaDaylitControlled = [])
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @illuminance = illuminance
      @cartesianPoint = cartesianPoint
      @minPowerFrac = minPowerFrac
      @minLightFrac = minLightFrac
      @percentAreaDaylitControlled = percentAreaDaylitControlled
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LightingSystem
  #   manufacturer - SOAP::SOAPString
  #   numberOfLamps - SOAP::SOAPInteger
  #   lumensPerLamp - SOAP::SOAPDecimal
  #   dimensions - BuildingSync::Dimensions
  #   inputWatts - BuildingSync::InputWatts
  #   ballast - SOAP::SOAPString
  #   lamp - SOAP::SOAPString
  #   luminaire - SOAP::SOAPString
  #   photometry - SOAP::SOAPString
  #   coefficientOfUtilization - BuildingSync::CoefficientOfUtilization
  #   cost - BuildingSync::Cost
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   reference - SOAP::SOAPString
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_programId - SOAP::SOAPIDREF
  class LightingSystem
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :manufacturer
    attr_accessor :numberOfLamps
    attr_accessor :lumensPerLamp
    attr_accessor :dimensions
    attr_accessor :inputWatts
    attr_accessor :ballast
    attr_accessor :lamp
    attr_accessor :luminaire
    attr_accessor :photometry
    attr_accessor :coefficientOfUtilization
    attr_accessor :cost
    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(manufacturer = [], numberOfLamps = [], lumensPerLamp = [], dimensions = [], inputWatts = [], ballast = [], lamp = [], luminaire = [], photometry = [], coefficientOfUtilization = [], cost = [], generalGeometry = [], shellGeometry = [], reference = [])
      @manufacturer = manufacturer
      @numberOfLamps = numberOfLamps
      @lumensPerLamp = lumensPerLamp
      @dimensions = dimensions
      @inputWatts = inputWatts
      @ballast = ballast
      @lamp = lamp
      @luminaire = luminaire
      @photometry = photometry
      @coefficientOfUtilization = coefficientOfUtilization
      @cost = cost
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LightPowerPerArea
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class LightPowerPerArea < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}LoadCalcInputParameters
  #   rTSParameters - BuildingSync::RTSParameters
  #   cLTDParameters - BuildingSync::CLTDParameters
  #   manualJ8Parameters - BuildingSync::ManualJ8Parameters
  #   floorSlabHeatLossCoefficient - BuildingSync::FloorSlabHeatLossCoefficient
  class LoadCalcInputParameters
    attr_accessor :rTSParameters
    attr_accessor :cLTDParameters
    attr_accessor :manualJ8Parameters
    attr_accessor :floorSlabHeatLossCoefficient

    def initialize(rTSParameters = [], cLTDParameters = [], manualJ8Parameters = [], floorSlabHeatLossCoefficient = [])
      @rTSParameters = rTSParameters
      @cLTDParameters = cLTDParameters
      @manualJ8Parameters = manualJ8Parameters
      @floorSlabHeatLossCoefficient = floorSlabHeatLossCoefficient
    end
  end

  # {http://www.gbxml.org/schema}Location
  #   stationId - BuildingSync::StationId
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   zipcodeOrPostalCode - SOAP::SOAPString
  #   longitude - SOAP::SOAPDecimal
  #   latitude - SOAP::SOAPDecimal
  #   elevation - BuildingSync::Elevation
  #   cADModelAzimuth - SOAP::SOAPDouble
  class Location_
    attr_accessor :stationId
    attr_accessor :name
    attr_accessor :description
    attr_accessor :zipcodeOrPostalCode
    attr_accessor :longitude
    attr_accessor :latitude
    attr_accessor :elevation
    attr_accessor :cADModelAzimuth

    def initialize(stationId = nil, name = nil, description = nil, zipcodeOrPostalCode = nil, longitude = nil, latitude = nil, elevation = nil, cADModelAzimuth = nil)
      @stationId = stationId
      @name = name
      @description = description
      @zipcodeOrPostalCode = zipcodeOrPostalCode
      @longitude = longitude
      @latitude = latitude
      @elevation = elevation
      @cADModelAzimuth = cADModelAzimuth
    end
  end

  # {http://www.gbxml.org/schema}LowValue
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class LowValue < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ManualJ8Parameters
  #   xmlattr_wallGroupManualJ - SOAP::SOAPNMTOKEN
  #   xmlattr_roofCLTDIndex - SOAP::SOAPNMTOKEN
  #   xmlattr_floorIsRadiant - SOAP::SOAPBoolean
  #   xmlattr_floorCrawlSpaceWallUValue - SOAP::SOAPFloat
  #   xmlattr_floorCrawlSpaceIsSealed - SOAP::SOAPBoolean
  #   xmlattr_floorCategory - SOAP::SOAPNMTOKEN
  class ManualJ8Parameters
    AttrFloorCategory = XSD::QName.new(nil, "floorCategory")
    AttrFloorCrawlSpaceIsSealed = XSD::QName.new(nil, "floorCrawlSpaceIsSealed")
    AttrFloorCrawlSpaceWallUValue = XSD::QName.new(nil, "floorCrawlSpaceWallUValue")
    AttrFloorIsRadiant = XSD::QName.new(nil, "floorIsRadiant")
    AttrRoofCLTDIndex = XSD::QName.new(nil, "roofCLTDIndex")
    AttrWallGroupManualJ = XSD::QName.new(nil, "wallGroupManualJ")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_wallGroupManualJ
      __xmlattr[AttrWallGroupManualJ]
    end

    def xmlattr_wallGroupManualJ=(value)
      __xmlattr[AttrWallGroupManualJ] = value
    end

    def xmlattr_roofCLTDIndex
      __xmlattr[AttrRoofCLTDIndex]
    end

    def xmlattr_roofCLTDIndex=(value)
      __xmlattr[AttrRoofCLTDIndex] = value
    end

    def xmlattr_floorIsRadiant
      __xmlattr[AttrFloorIsRadiant]
    end

    def xmlattr_floorIsRadiant=(value)
      __xmlattr[AttrFloorIsRadiant] = value
    end

    def xmlattr_floorCrawlSpaceWallUValue
      __xmlattr[AttrFloorCrawlSpaceWallUValue]
    end

    def xmlattr_floorCrawlSpaceWallUValue=(value)
      __xmlattr[AttrFloorCrawlSpaceWallUValue] = value
    end

    def xmlattr_floorCrawlSpaceIsSealed
      __xmlattr[AttrFloorCrawlSpaceIsSealed]
    end

    def xmlattr_floorCrawlSpaceIsSealed=(value)
      __xmlattr[AttrFloorCrawlSpaceIsSealed] = value
    end

    def xmlattr_floorCategory
      __xmlattr[AttrFloorCategory]
    end

    def xmlattr_floorCategory=(value)
      __xmlattr[AttrFloorCategory] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Material
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   absorptance - BuildingSync::Absorptance
  #   roughness - BuildingSync::Roughness
  #   albedo - BuildingSync::Albedo
  #   reflectance - BuildingSync::Reflectance
  #   transmittance - BuildingSync::Transmittance
  #   emittance - BuildingSync::Emittance
  #   imageTexture - BuildingSync::ImageTexture
  #   r_value - BuildingSync::RValue
  #   thickness - BuildingSync::Thickness
  #   conductivity - BuildingSync::Conductivity
  #   density - BuildingSync::Density
  #   specificHeat - BuildingSync::SpecificHeat
  #   permeance - BuildingSync::Permeance
  #   porosity - BuildingSync::Porosity
  #   recycledContent - BuildingSync::RecycledContent
  #   fire - BuildingSync::Fire
  #   cost - BuildingSync::Cost
  #   indoorAirQuality - BuildingSync::IndoorAirQuality
  #   cADMaterialId - BuildingSync::CADMaterialId
  #   reference - SOAP::SOAPString
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  class Material
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :absorptance
    attr_accessor :roughness
    attr_accessor :albedo
    attr_accessor :reflectance
    attr_accessor :transmittance
    attr_accessor :emittance
    attr_accessor :imageTexture
    attr_accessor :r_value
    attr_accessor :thickness
    attr_accessor :conductivity
    attr_accessor :density
    attr_accessor :specificHeat
    attr_accessor :permeance
    attr_accessor :porosity
    attr_accessor :recycledContent
    attr_accessor :fire
    attr_accessor :cost
    attr_accessor :indoorAirQuality
    attr_accessor :cADMaterialId
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def initialize(name = [], description = [], absorptance = [], roughness = [], albedo = [], reflectance = [], transmittance = [], emittance = [], imageTexture = [], r_value = [], thickness = [], conductivity = [], density = [], specificHeat = [], permeance = [], porosity = [], recycledContent = [], fire = [], cost = [], indoorAirQuality = [], cADMaterialId = [], reference = [])
      @name = name
      @description = description
      @absorptance = absorptance
      @roughness = roughness
      @albedo = albedo
      @reflectance = reflectance
      @transmittance = transmittance
      @emittance = emittance
      @imageTexture = imageTexture
      @r_value = r_value
      @thickness = thickness
      @conductivity = conductivity
      @density = density
      @specificHeat = specificHeat
      @permeance = permeance
      @porosity = porosity
      @recycledContent = recycledContent
      @fire = fire
      @cost = cost
      @indoorAirQuality = indoorAirQuality
      @cADMaterialId = cADMaterialId
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaterialId
  #   xmlattr_materialIdRef - SOAP::SOAPIDREF
  #   xmlattr_percentOfLayer - SOAP::SOAPDouble
  class MaterialId
    AttrMaterialIdRef = XSD::QName.new(nil, "materialIdRef")
    AttrPercentOfLayer = XSD::QName.new(nil, "percentOfLayer")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_materialIdRef
      __xmlattr[AttrMaterialIdRef]
    end

    def xmlattr_materialIdRef=(value)
      __xmlattr[AttrMaterialIdRef] = value
    end

    def xmlattr_percentOfLayer
      __xmlattr[AttrPercentOfLayer]
    end

    def xmlattr_percentOfLayer=(value)
      __xmlattr[AttrPercentOfLayer] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaxOAFlowPerZone
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class MaxOAFlowPerZone < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaxPressure
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MaxPressure < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaxRelativeHumidity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MaxRelativeHumidity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaxTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MaxTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MaximumFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MaximumFlow < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Meter
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   utilityRate - BuildingSync::UtilityRate
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_resourceType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Meter
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrResourceType = XSD::QName.new(nil, "resourceType")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :utilityRate
    attr_reader :__xmlele_any

    def set_any(elements)
      @__xmlele_any = elements
    end

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_resourceType
      __xmlattr[AttrResourceType]
    end

    def xmlattr_resourceType=(value)
      __xmlattr[AttrResourceType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], utilityRate = [])
      @name = name
      @description = description
      @utilityRate = utilityRate
      @__xmlele_any = nil
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MeterId
  #   xmlattr_meterIdRef - SOAP::SOAPIDREF
  class MeterId
    AttrMeterIdRef = XSD::QName.new(nil, "meterIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_meterIdRef
      __xmlattr[AttrMeterIdRef]
    end

    def xmlattr_meterIdRef=(value)
      __xmlattr[AttrMeterIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinFlow
  #   xmlattr_unit - (any)
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopType - SOAP::SOAPNMTOKEN
  class MinFlow < ::String
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrHydronicLoopType = XSD::QName.new(nil, "hydronicLoopType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_hydronicLoopType
      __xmlattr[AttrHydronicLoopType]
    end

    def xmlattr_hydronicLoopType=(value)
      __xmlattr[AttrHydronicLoopType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinimumFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MinimumFlow < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinOAFlowPerZone
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class MinOAFlowPerZone < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinimumOutdoorAirControlType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MinimumOutdoorAirControlType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinRelativeHumidity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MinRelativeHumidity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinPressure
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MinPressure
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}MinTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class MinTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ModifiedBy
  #   xmlattr_personId - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  #   xmlattr_date - SOAP::SOAPDateTime
  class ModifiedBy
    AttrDate = XSD::QName.new(nil, "date")
    AttrPersonId = XSD::QName.new(nil, "personId")
    AttrProgramId = XSD::QName.new(nil, "programId")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_personId
      __xmlattr[AttrPersonId]
    end

    def xmlattr_personId=(value)
      __xmlattr[AttrPersonId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def xmlattr_date
      __xmlattr[AttrDate]
    end

    def xmlattr_date=(value)
      __xmlattr[AttrDate] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}NaturalVentHiTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class NaturalVentHiTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}NaturalVentLoTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class NaturalVentLoTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}NightCycleControl
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class NightCycleControl
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}OAFlowPerArea
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class OAFlowPerArea < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}OAFlowPerPerson
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class OAFlowPerPerson < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}OAFlowPerZone
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class OAFlowPerZone < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Opening
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   shadeControl - BuildingSync::ShadeControl
  #   u_value - BuildingSync::UValue
  #   shadingCoeff - BuildingSync::ShadingCoeff
  #   solarHeatGainCoeff - BuildingSync::SolarHeatGainCoeff
  #   transmittance - BuildingSync::Transmittance
  #   reflectance - BuildingSync::Reflectance
  #   glazeConductivity - BuildingSync::GlazeConductivity
  #   emittance - BuildingSync::Emittance
  #   setback - BuildingSync::Setback
  #   naturalVentHiTemp - BuildingSync::NaturalVentHiTemp
  #   naturalVentLoTemp - BuildingSync::NaturalVentLoTemp
  #   naturalVentOccDep - SOAP::SOAPBoolean
  #   rectangularGeometry - BuildingSync::RectangularGeometry
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   cADObjectId - BuildingSync::CADObjectId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_coordinatesAbsolute - SOAP::SOAPBoolean
  #   xmlattr_interiorShadeType - SOAP::SOAPNMTOKEN
  #   xmlattr_exteriorShadeType - SOAP::SOAPNMTOKEN
  #   xmlattr_windowTypeIdRef - SOAP::SOAPIDREF
  #   xmlattr_constructionIdRef - SOAP::SOAPIDREF
  #   xmlattr_openingType - SOAP::SOAPNMTOKEN
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class Opening
    AttrConstructionIdRef = XSD::QName.new(nil, "constructionIdRef")
    AttrCoordinatesAbsolute = XSD::QName.new(nil, "coordinatesAbsolute")
    AttrExteriorShadeType = XSD::QName.new(nil, "exteriorShadeType")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")
    AttrInteriorShadeType = XSD::QName.new(nil, "interiorShadeType")
    AttrOpeningType = XSD::QName.new(nil, "openingType")
    AttrWindowTypeIdRef = XSD::QName.new(nil, "windowTypeIdRef")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :shadeControl
    attr_accessor :u_value
    attr_accessor :shadingCoeff
    attr_accessor :solarHeatGainCoeff
    attr_accessor :transmittance
    attr_accessor :reflectance
    attr_accessor :glazeConductivity
    attr_accessor :emittance
    attr_accessor :setback
    attr_accessor :naturalVentHiTemp
    attr_accessor :naturalVentLoTemp
    attr_accessor :naturalVentOccDep
    attr_accessor :rectangularGeometry
    attr_accessor :planarGeometry
    attr_accessor :cADObjectId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_coordinatesAbsolute
      __xmlattr[AttrCoordinatesAbsolute]
    end

    def xmlattr_coordinatesAbsolute=(value)
      __xmlattr[AttrCoordinatesAbsolute] = value
    end

    def xmlattr_interiorShadeType
      __xmlattr[AttrInteriorShadeType]
    end

    def xmlattr_interiorShadeType=(value)
      __xmlattr[AttrInteriorShadeType] = value
    end

    def xmlattr_exteriorShadeType
      __xmlattr[AttrExteriorShadeType]
    end

    def xmlattr_exteriorShadeType=(value)
      __xmlattr[AttrExteriorShadeType] = value
    end

    def xmlattr_windowTypeIdRef
      __xmlattr[AttrWindowTypeIdRef]
    end

    def xmlattr_windowTypeIdRef=(value)
      __xmlattr[AttrWindowTypeIdRef] = value
    end

    def xmlattr_constructionIdRef
      __xmlattr[AttrConstructionIdRef]
    end

    def xmlattr_constructionIdRef=(value)
      __xmlattr[AttrConstructionIdRef] = value
    end

    def xmlattr_openingType
      __xmlattr[AttrOpeningType]
    end

    def xmlattr_openingType=(value)
      __xmlattr[AttrOpeningType] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], description = [], shadeControl = [], u_value = [], shadingCoeff = [], solarHeatGainCoeff = [], transmittance = [], reflectance = [], glazeConductivity = [], emittance = [], setback = [], naturalVentHiTemp = [], naturalVentLoTemp = [], naturalVentOccDep = [], rectangularGeometry = [], planarGeometry = [], cADObjectId = [])
      @name = name
      @description = description
      @shadeControl = shadeControl
      @u_value = u_value
      @shadingCoeff = shadingCoeff
      @solarHeatGainCoeff = solarHeatGainCoeff
      @transmittance = transmittance
      @reflectance = reflectance
      @glazeConductivity = glazeConductivity
      @emittance = emittance
      @setback = setback
      @naturalVentHiTemp = naturalVentHiTemp
      @naturalVentLoTemp = naturalVentLoTemp
      @naturalVentOccDep = naturalVentOccDep
      @rectangularGeometry = rectangularGeometry
      @planarGeometry = planarGeometry
      @cADObjectId = cADObjectId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}OperationRange
  #   lowValue - BuildingSync::LowValue
  #   highValue - BuildingSync::HighValue
  class OperationRange
    attr_accessor :lowValue
    attr_accessor :highValue

    def initialize(lowValue = [], highValue = [])
      @lowValue = lowValue
      @highValue = highValue
    end
  end

  # {http://www.gbxml.org/schema}OperationSchedule
  #   operationRange - BuildingSync::OperationRange
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  class OperationSchedule
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")

    attr_accessor :operationRange

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def initialize(operationRange = [])
      @operationRange = operationRange
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ParallelFanOnFlowFraction
  class ParallelFanOnFlowFraction < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://www.gbxml.org/schema}PeakDomesticHotWaterFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterUseScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class PeakDomesticHotWaterFlow < ::String
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")
    AttrWaterUseScheduleIdRef = XSD::QName.new(nil, "waterUseScheduleIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_waterUseScheduleIdRef
      __xmlattr[AttrWaterUseScheduleIdRef]
    end

    def xmlattr_waterUseScheduleIdRef=(value)
      __xmlattr[AttrWaterUseScheduleIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PeopleNumber
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class PeopleNumber < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PeopleHeatGain
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_heatGainType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class PeopleHeatGain < ::String
    AttrHeatGainType = XSD::QName.new(nil, "heatGainType")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_heatGainType
      __xmlattr[AttrHeatGainType]
    end

    def xmlattr_heatGainType=(value)
      __xmlattr[AttrHeatGainType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PercentAreaDaylitControlled
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class PercentAreaDaylitControlled < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PercentExisting
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class PercentExisting < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Performance
  #   pointData - BuildingSync::PointData
  #   equation - BuildingSync::Equation
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_performanceType - SOAP::SOAPString
  class Performance
    AttrId = XSD::QName.new(nil, "id")
    AttrPerformanceType = XSD::QName.new(nil, "performanceType")

    attr_accessor :pointData
    attr_accessor :equation

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_performanceType
      __xmlattr[AttrPerformanceType]
    end

    def xmlattr_performanceType=(value)
      __xmlattr[AttrPerformanceType] = value
    end

    def initialize(pointData = [], equation = [])
      @pointData = pointData
      @equation = equation
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Permeance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Permeance < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PersonInfo
  #   firstName - SOAP::SOAPString
  #   lastName - SOAP::SOAPString
  #   middleName - SOAP::SOAPString
  #   address1 - SOAP::SOAPString
  #   address2 - SOAP::SOAPString
  #   city - SOAP::SOAPString
  #   state - SOAP::SOAPString
  #   zipCode - SOAP::SOAPString
  #   country - SOAP::SOAPString
  #   phoneNumber - SOAP::SOAPString
  #   email1Address - SOAP::SOAPString
  #   webPage - SOAP::SOAPString
  #   companyName - SOAP::SOAPString
  #   xmlattr_id - SOAP::SOAPID
  class PersonInfo
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :firstName
    attr_accessor :lastName
    attr_accessor :middleName
    attr_accessor :address1
    attr_accessor :address2
    attr_accessor :city
    attr_accessor :state
    attr_accessor :zipCode
    attr_accessor :country
    attr_accessor :phoneNumber
    attr_accessor :email1Address
    attr_accessor :webPage
    attr_accessor :companyName

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def initialize(firstName = [], lastName = [], middleName = [], address1 = [], address2 = [], city = [], state = [], zipCode = [], country = [], phoneNumber = [], email1Address = [], webPage = [], companyName = [])
      @firstName = firstName
      @lastName = lastName
      @middleName = middleName
      @address1 = address1
      @address2 = address2
      @city = city
      @state = state
      @zipCode = zipCode
      @country = country
      @phoneNumber = phoneNumber
      @email1Address = email1Address
      @webPage = webPage
      @companyName = companyName
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PhotometryOrientation
  class PhotometryOrientation < ::Array
  end

  # {http://www.gbxml.org/schema}PlanarGeometry
  #   polyLoop - BuildingSync::PolyLoop
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class PlanarGeometry
    AttrId = XSD::QName.new(nil, "id")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :polyLoop

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(polyLoop = [])
      @polyLoop = polyLoop
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PointData
  #   independentVariable - BuildingSync::IndependentVariable
  #   dependentVariable - BuildingSync::DependentVariable
  #   data - BuildingSync::C_Data
  class PointData
    attr_accessor :independentVariable
    attr_accessor :dependentVariable
    attr_accessor :data

    def initialize(independentVariable = [], dependentVariable = [], data = [])
      @independentVariable = independentVariable
      @dependentVariable = dependentVariable
      @data = data
    end
  end

  # {http://www.gbxml.org/schema}PolyLoop
  class PolyLoop < ::Array
  end

  # {http://www.gbxml.org/schema}Porosity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Porosity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Power
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_powerType - SOAP::SOAPNMTOKEN
  #   xmlattr_useType - SOAP::SOAPNMTOKEN
  #   xmlattr_meterIdRef - SOAP::SOAPIDREF
  class Power < ::String
    AttrMeterIdRef = XSD::QName.new(nil, "meterIdRef")
    AttrPowerType = XSD::QName.new(nil, "powerType")
    AttrUnit = XSD::QName.new(nil, "unit")
    AttrUseType = XSD::QName.new(nil, "useType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_powerType
      __xmlattr[AttrPowerType]
    end

    def xmlattr_powerType=(value)
      __xmlattr[AttrPowerType] = value
    end

    def xmlattr_useType
      __xmlattr[AttrUseType]
    end

    def xmlattr_useType=(value)
      __xmlattr[AttrUseType] = value
    end

    def xmlattr_meterIdRef
      __xmlattr[AttrMeterIdRef]
    end

    def xmlattr_meterIdRef=(value)
      __xmlattr[AttrMeterIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PrandtlNumberFofT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class PrandtlNumberFofT < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PreheatCoilType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class PreheatCoilType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}PressureControl
  #   designPressure - BuildingSync::DesignPressure
  #   minPressure - BuildingSync::MinPressure
  #   maxPressure - BuildingSync::MaxPressure
  class PressureControl
    attr_accessor :designPressure
    attr_accessor :minPressure
    attr_accessor :maxPressure

    def initialize(designPressure = [], minPressure = [], maxPressure = [])
      @designPressure = designPressure
      @minPressure = minPressure
      @maxPressure = maxPressure
    end
  end

  # {http://www.gbxml.org/schema}ProductName
  class ProductName < ::String
    def initialize(*arg)
      super
    end
  end

  # {http://www.gbxml.org/schema}ProjectEntity
  #   fileName - SOAP::SOAPString
  #   uRI - SOAP::SOAPString
  #   gUID - BuildingSync::GUID
  class ProjectEntity
    attr_accessor :fileName
    attr_accessor :uRI
    attr_accessor :gUID

    def initialize(fileName = [], uRI = [], gUID = [])
      @fileName = fileName
      @uRI = uRI
      @gUID = gUID
    end
  end

  # {http://www.gbxml.org/schema}ProgramInfo
  #   companyName - SOAP::SOAPString
  #   productName - BuildingSync::ProductName
  #   version - SOAP::SOAPString
  #   platform - SOAP::SOAPString
  #   projectEntity - BuildingSync::ProjectEntity
  #   xmlattr_id - SOAP::SOAPID
  class ProgramInfo
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :companyName
    attr_accessor :productName
    attr_accessor :version
    attr_accessor :platform
    attr_accessor :projectEntity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def initialize(companyName = [], productName = [], version = [], platform = [], projectEntity = [])
      @companyName = companyName
      @productName = productName
      @version = version
      @platform = platform
      @projectEntity = projectEntity
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}RatedFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopType - SOAP::SOAPNMTOKEN
  class RatedFlow < ::String
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrHydronicLoopType = XSD::QName.new(nil, "hydronicLoopType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def xmlattr_hydronicLoopType
      __xmlattr[AttrHydronicLoopType]
    end

    def xmlattr_hydronicLoopType=(value)
      __xmlattr[AttrHydronicLoopType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}RectangularGeometry
  #   azimuth - SOAP::SOAPDouble
  #   cartesianPoint - BuildingSync::CartesianPoint
  #   tilt - SOAP::SOAPDouble
  #   height - BuildingSync::Height
  #   width - BuildingSync::Width
  #   polyLoop - BuildingSync::PolyLoop
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class RectangularGeometry
    AttrId = XSD::QName.new(nil, "id")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :azimuth
    attr_accessor :cartesianPoint
    attr_accessor :tilt
    attr_accessor :height
    attr_accessor :width
    attr_accessor :polyLoop

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(azimuth = [], cartesianPoint = [], tilt = [], height = [], width = [], polyLoop = [])
      @azimuth = azimuth
      @cartesianPoint = cartesianPoint
      @tilt = tilt
      @height = height
      @width = width
      @polyLoop = polyLoop
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}RecycledContent
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class RecycledContent < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Reflectance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_surfaceType - SOAP::SOAPNMTOKEN
  class Reflectance < ::String
    AttrSurfaceType = XSD::QName.new(nil, "surfaceType")
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_surfaceType
      __xmlattr[AttrSurfaceType]
    end

    def xmlattr_surfaceType=(value)
      __xmlattr[AttrSurfaceType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Results
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   value - SOAP::SOAPDecimal
  #   objectId - SOAP::SOAPString
  #   cADObjectId - BuildingSync::CADObjectId
  #   cartesianPoint - BuildingSync::CartesianPoint
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_unit - (any)
  #   xmlattr_currency - SOAP::SOAPNMTOKEN
  #   xmlattr_resultsType - SOAP::SOAPNMTOKEN
  #   xmlattr_resourceType - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  #   xmlattr_valueType - SOAP::SOAPNMTOKEN
  #   xmlattr_startTime - SOAP::SOAPDateTime
  #   xmlattr_timeIncrement - SOAP::SOAPDuration
  class Results
    AttrCurrency = XSD::QName.new(nil, "currency")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrResourceType = XSD::QName.new(nil, "resourceType")
    AttrResultsType = XSD::QName.new(nil, "resultsType")
    AttrStartTime = XSD::QName.new(nil, "startTime")
    AttrTimeIncrement = XSD::QName.new(nil, "timeIncrement")
    AttrUnit = XSD::QName.new(nil, "unit")
    AttrValueType = XSD::QName.new(nil, "valueType")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :value
    attr_accessor :objectId
    attr_accessor :cADObjectId
    attr_accessor :cartesianPoint

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_currency
      __xmlattr[AttrCurrency]
    end

    def xmlattr_currency=(value)
      __xmlattr[AttrCurrency] = value
    end

    def xmlattr_resultsType
      __xmlattr[AttrResultsType]
    end

    def xmlattr_resultsType=(value)
      __xmlattr[AttrResultsType] = value
    end

    def xmlattr_resourceType
      __xmlattr[AttrResourceType]
    end

    def xmlattr_resourceType=(value)
      __xmlattr[AttrResourceType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def xmlattr_valueType
      __xmlattr[AttrValueType]
    end

    def xmlattr_valueType=(value)
      __xmlattr[AttrValueType] = value
    end

    def xmlattr_startTime
      __xmlattr[AttrStartTime]
    end

    def xmlattr_startTime=(value)
      __xmlattr[AttrStartTime] = value
    end

    def xmlattr_timeIncrement
      __xmlattr[AttrTimeIncrement]
    end

    def xmlattr_timeIncrement=(value)
      __xmlattr[AttrTimeIncrement] = value
    end

    def initialize(name = [], description = [], value = [], objectId = [], cADObjectId = [], cartesianPoint = [])
      @name = name
      @description = description
      @value = value
      @objectId = objectId
      @cADObjectId = cADObjectId
      @cartesianPoint = cartesianPoint
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Roughness
  #   xmlattr_value - SOAP::SOAPNMTOKEN
  class Roughness
    AttrValue = XSD::QName.new(nil, "value")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_value
      __xmlattr[AttrValue]
    end

    def xmlattr_value=(value)
      __xmlattr[AttrValue] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}RTSParameters
  #   hOutside - BuildingSync::HOutside
  #   xmlattr_roofCTSType - SOAP::SOAPNMTOKEN
  #   xmlattr_wallCTSType - SOAP::SOAPNMTOKEN
  class RTSParameters
    AttrRoofCTSType = XSD::QName.new(nil, "roofCTSType")
    AttrWallCTSType = XSD::QName.new(nil, "wallCTSType")

    attr_accessor :hOutside

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_roofCTSType
      __xmlattr[AttrRoofCTSType]
    end

    def xmlattr_roofCTSType=(value)
      __xmlattr[AttrRoofCTSType] = value
    end

    def xmlattr_wallCTSType
      __xmlattr[AttrWallCTSType]
    end

    def xmlattr_wallCTSType=(value)
      __xmlattr[AttrWallCTSType] = value
    end

    def initialize(hOutside = nil)
      @hOutside = hOutside
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}R-value
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class RValue < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ShadeControl
  #   shadeSchedule - BuildingSync::ShadeSchedule
  #   solarOnOpening - BuildingSync::SolarOnOpening
  #   horizontalSolar - BuildingSync::HorizontalSolar
  #   airTemperature - BuildingSync::AirTemperature
  #   zoneCoolingLoad - BuildingSync::ZoneCoolingLoad
  #   glare - BuildingSync::Glare
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class ShadeControl
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :shadeSchedule
    attr_accessor :solarOnOpening
    attr_accessor :horizontalSolar
    attr_accessor :airTemperature
    attr_accessor :zoneCoolingLoad
    attr_accessor :glare

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(shadeSchedule = [], solarOnOpening = [], horizontalSolar = [], airTemperature = [], zoneCoolingLoad = [], glare = [])
      @shadeSchedule = shadeSchedule
      @solarOnOpening = solarOnOpening
      @horizontalSolar = horizontalSolar
      @airTemperature = airTemperature
      @zoneCoolingLoad = zoneCoolingLoad
      @glare = glare
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ShadeSchedule
  #   xmlattr_scheduleIdRef - SOAP::SOAPID
  class ShadeSchedule
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Schedule
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   yearSchedule - BuildingSync::YearSchedule
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Schedule
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :yearSchedule

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], yearSchedule = [])
      @name = name
      @description = description
      @yearSchedule = yearSchedule
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ScheduleTypeLimits
  #   lowerLimitValue - SOAP::SOAPDecimal
  #   upperLimitValue - SOAP::SOAPDecimal
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  class ScheduleTypeLimits
    AttrId = XSD::QName.new(nil, "id")
    AttrType = XSD::QName.new(nil, "type")

    attr_accessor :lowerLimitValue
    attr_accessor :upperLimitValue

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def initialize(lowerLimitValue = [], upperLimitValue = [])
      @lowerLimitValue = lowerLimitValue
      @upperLimitValue = upperLimitValue
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ScheduleValue
  #   xmlattr_OutsideHighReset - SOAP::SOAPDecimal
  #   xmlattr_OutsideLowReset - SOAP::SOAPDecimal
  #   xmlattr_SupplyHighReset - SOAP::SOAPDecimal
  #   xmlattr_SupplyLowReset - SOAP::SOAPDecimal
  class ScheduleValue < ::String
    AttrOutsideHighReset = XSD::QName.new(nil, "OutsideHighReset")
    AttrOutsideLowReset = XSD::QName.new(nil, "OutsideLowReset")
    AttrSupplyHighReset = XSD::QName.new(nil, "SupplyHighReset")
    AttrSupplyLowReset = XSD::QName.new(nil, "SupplyLowReset")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_OutsideHighReset
      __xmlattr[AttrOutsideHighReset]
    end

    def xmlattr_OutsideHighReset=(value)
      __xmlattr[AttrOutsideHighReset] = value
    end

    def xmlattr_OutsideLowReset
      __xmlattr[AttrOutsideLowReset]
    end

    def xmlattr_OutsideLowReset=(value)
      __xmlattr[AttrOutsideLowReset] = value
    end

    def xmlattr_SupplyHighReset
      __xmlattr[AttrSupplyHighReset]
    end

    def xmlattr_SupplyHighReset=(value)
      __xmlattr[AttrSupplyHighReset] = value
    end

    def xmlattr_SupplyLowReset
      __xmlattr[AttrSupplyLowReset]
    end

    def xmlattr_SupplyLowReset=(value)
      __xmlattr[AttrSupplyLowReset] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SecondaryFlow
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class SecondaryFlow < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Setback
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Setback < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ShadingCoeff
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ShadingCoeff < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ShellGeometry
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   closedShell - BuildingSync::ClosedShell
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ShellGeometry
    AttrId = XSD::QName.new(nil, "id")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :closedShell

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(name = [], description = [], closedShell = [])
      @name = name
      @description = description
      @closedShell = closedShell
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SimulationParameters
  #   convergenceLimits - BuildingSync::ConvergenceLimits
  #   xmlattr_version - SOAP::SOAPString
  #   xmlattr_timestep - SOAP::SOAPDecimal
  class SimulationParameters
    AttrTimestep = XSD::QName.new(nil, "timestep")
    AttrVersion = XSD::QName.new(nil, "version")

    attr_accessor :convergenceLimits

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_version
      __xmlattr[AttrVersion]
    end

    def xmlattr_version=(value)
      __xmlattr[AttrVersion] = value
    end

    def xmlattr_timestep
      __xmlattr[AttrTimestep]
    end

    def xmlattr_timestep=(value)
      __xmlattr[AttrTimestep] = value
    end

    def initialize(convergenceLimits = nil)
      @convergenceLimits = convergenceLimits
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SinkRate
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class SinkRate < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SolarHeatGainCoeff
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_solarIncidentAngle - SOAP::SOAPDecimal
  class SolarHeatGainCoeff < ::String
    AttrSolarIncidentAngle = XSD::QName.new(nil, "solarIncidentAngle")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_solarIncidentAngle
      __xmlattr[AttrSolarIncidentAngle]
    end

    def xmlattr_solarIncidentAngle=(value)
      __xmlattr[AttrSolarIncidentAngle] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SolarOnOpening
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class SolarOnOpening < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Space
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   lighting - BuildingSync::Lighting
  #   lightingControl - BuildingSync::LightingControl
  #   infiltrationFlow - BuildingSync::InfiltrationFlow
  #   peopleNumber - BuildingSync::PeopleNumber
  #   peopleHeatGain - BuildingSync::PeopleHeatGain
  #   lightPowerPerArea - BuildingSync::LightPowerPerArea
  #   equipPowerPerArea - BuildingSync::EquipPowerPerArea
  #   airChangesPerHour - SOAP::SOAPDecimal
  #   area - BuildingSync::Area
  #   temperature - BuildingSync::Temperature
  #   volume - BuildingSync::Volume
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   airLoopId - BuildingSync::AirLoopId
  #   hydronicLoopId - BuildingSync::HydronicLoopId
  #   meterId - BuildingSync::MeterId
  #   intEquipId - BuildingSync::IntEquipId
  #   airLoopEquipmentId - BuildingSync::AirLoopEquipmentId
  #   hydronicLoopEquipmentId - BuildingSync::HydronicLoopEquipmentId
  #   cADObjectId - BuildingSync::CADObjectId
  #   typeCode - SOAP::SOAPString
  #   spaceBoundary - BuildingSync::SpaceBoundary
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_spaceType - SOAP::SOAPNMTOKEN
  #   xmlattr_zoneIdRef - SOAP::SOAPIDREF
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_lightScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_equipmentScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_peopleScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_conditionType - SOAP::SOAPNMTOKEN
  #   xmlattr_buildingStoreyIdRef - SOAP::SOAPIDREF
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class Space
    AttrBuildingStoreyIdRef = XSD::QName.new(nil, "buildingStoreyIdRef")
    AttrConditionType = XSD::QName.new(nil, "conditionType")
    AttrEquipmentScheduleIdRef = XSD::QName.new(nil, "equipmentScheduleIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")
    AttrLightScheduleIdRef = XSD::QName.new(nil, "lightScheduleIdRef")
    AttrPeopleScheduleIdRef = XSD::QName.new(nil, "peopleScheduleIdRef")
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")
    AttrSpaceType = XSD::QName.new(nil, "spaceType")
    AttrZoneIdRef = XSD::QName.new(nil, "zoneIdRef")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :lighting
    attr_accessor :lightingControl
    attr_accessor :infiltrationFlow
    attr_accessor :peopleNumber
    attr_accessor :peopleHeatGain
    attr_accessor :lightPowerPerArea
    attr_accessor :equipPowerPerArea
    attr_accessor :airChangesPerHour
    attr_accessor :area
    attr_accessor :temperature
    attr_accessor :volume
    attr_accessor :planarGeometry
    attr_accessor :shellGeometry
    attr_accessor :airLoopId
    attr_accessor :hydronicLoopId
    attr_accessor :meterId
    attr_accessor :intEquipId
    attr_accessor :airLoopEquipmentId
    attr_accessor :hydronicLoopEquipmentId
    attr_accessor :cADObjectId
    attr_accessor :typeCode
    attr_accessor :spaceBoundary

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_spaceType
      __xmlattr[AttrSpaceType]
    end

    def xmlattr_spaceType=(value)
      __xmlattr[AttrSpaceType] = value
    end

    def xmlattr_zoneIdRef
      __xmlattr[AttrZoneIdRef]
    end

    def xmlattr_zoneIdRef=(value)
      __xmlattr[AttrZoneIdRef] = value
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def xmlattr_lightScheduleIdRef
      __xmlattr[AttrLightScheduleIdRef]
    end

    def xmlattr_lightScheduleIdRef=(value)
      __xmlattr[AttrLightScheduleIdRef] = value
    end

    def xmlattr_equipmentScheduleIdRef
      __xmlattr[AttrEquipmentScheduleIdRef]
    end

    def xmlattr_equipmentScheduleIdRef=(value)
      __xmlattr[AttrEquipmentScheduleIdRef] = value
    end

    def xmlattr_peopleScheduleIdRef
      __xmlattr[AttrPeopleScheduleIdRef]
    end

    def xmlattr_peopleScheduleIdRef=(value)
      __xmlattr[AttrPeopleScheduleIdRef] = value
    end

    def xmlattr_conditionType
      __xmlattr[AttrConditionType]
    end

    def xmlattr_conditionType=(value)
      __xmlattr[AttrConditionType] = value
    end

    def xmlattr_buildingStoreyIdRef
      __xmlattr[AttrBuildingStoreyIdRef]
    end

    def xmlattr_buildingStoreyIdRef=(value)
      __xmlattr[AttrBuildingStoreyIdRef] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], description = [], lighting = [], lightingControl = [], infiltrationFlow = [], peopleNumber = [], peopleHeatGain = [], lightPowerPerArea = [], equipPowerPerArea = [], airChangesPerHour = [], area = [], temperature = [], volume = [], planarGeometry = [], shellGeometry = [], airLoopId = [], hydronicLoopId = [], meterId = [], intEquipId = [], airLoopEquipmentId = [], hydronicLoopEquipmentId = [], cADObjectId = [], typeCode = [], spaceBoundary = [])
      @name = name
      @description = description
      @lighting = lighting
      @lightingControl = lightingControl
      @infiltrationFlow = infiltrationFlow
      @peopleNumber = peopleNumber
      @peopleHeatGain = peopleHeatGain
      @lightPowerPerArea = lightPowerPerArea
      @equipPowerPerArea = equipPowerPerArea
      @airChangesPerHour = airChangesPerHour
      @area = area
      @temperature = temperature
      @volume = volume
      @planarGeometry = planarGeometry
      @shellGeometry = shellGeometry
      @airLoopId = airLoopId
      @hydronicLoopId = hydronicLoopId
      @meterId = meterId
      @intEquipId = intEquipId
      @airLoopEquipmentId = airLoopEquipmentId
      @hydronicLoopEquipmentId = hydronicLoopEquipmentId
      @cADObjectId = cADObjectId
      @typeCode = typeCode
      @spaceBoundary = spaceBoundary
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SpaceBoundary
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   xmlattr_ifcGUID - SOAP::SOAPString
  #   xmlattr_isSecondLevelBoundary - SOAP::SOAPBoolean
  #   xmlattr_surfaceIdRef - SOAP::SOAPIDREF
  #   xmlattr_oppositeIdRef - SOAP::SOAPIDREF
  class SpaceBoundary
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")
    AttrIsSecondLevelBoundary = XSD::QName.new(nil, "isSecondLevelBoundary")
    AttrOppositeIdRef = XSD::QName.new(nil, "oppositeIdRef")
    AttrSurfaceIdRef = XSD::QName.new(nil, "surfaceIdRef")

    attr_accessor :planarGeometry

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def xmlattr_isSecondLevelBoundary
      __xmlattr[AttrIsSecondLevelBoundary]
    end

    def xmlattr_isSecondLevelBoundary=(value)
      __xmlattr[AttrIsSecondLevelBoundary] = value
    end

    def xmlattr_surfaceIdRef
      __xmlattr[AttrSurfaceIdRef]
    end

    def xmlattr_surfaceIdRef=(value)
      __xmlattr[AttrSurfaceIdRef] = value
    end

    def xmlattr_oppositeIdRef
      __xmlattr[AttrOppositeIdRef]
    end

    def xmlattr_oppositeIdRef=(value)
      __xmlattr[AttrOppositeIdRef] = value
    end

    def initialize(planarGeometry = nil)
      @planarGeometry = planarGeometry
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SpecificHeat
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class SpecificHeat < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}StationId
  #   xmlattr_IDType - SOAP::SOAPNMTOKEN
  class StationId < ::String
    AttrIDType = XSD::QName.new(nil, "IDType")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_IDType
      __xmlattr[AttrIDType]
    end

    def xmlattr_IDType=(value)
      __xmlattr[AttrIDType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}SupplementalHeatingCoilType
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class SupplementalHeatingCoilType
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Surface
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   familyName - SOAP::SOAPString
  #   adjacentSpaceId - BuildingSync::AdjacentSpaceId
  #   rectangularGeometry - BuildingSync::RectangularGeometry
  #   planarGeometry - BuildingSync::PlanarGeometry
  #   opening - BuildingSync::Opening
  #   cADObjectId - BuildingSync::CADObjectId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_surfaceType - SOAP::SOAPNMTOKEN
  #   xmlattr_constructionIdRef - SOAP::SOAPIDREF
  #   xmlattr_scheduleShadeIdRef - SOAP::SOAPIDREF
  #   xmlattr_exposedToSun - SOAP::SOAPBoolean
  #   xmlattr_ifcGUID - SOAP::SOAPString
  class Surface
    AttrConstructionIdRef = XSD::QName.new(nil, "constructionIdRef")
    AttrExposedToSun = XSD::QName.new(nil, "exposedToSun")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")
    AttrScheduleShadeIdRef = XSD::QName.new(nil, "scheduleShadeIdRef")
    AttrSurfaceType = XSD::QName.new(nil, "surfaceType")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :familyName
    attr_accessor :adjacentSpaceId
    attr_accessor :rectangularGeometry
    attr_accessor :planarGeometry
    attr_accessor :opening
    attr_accessor :cADObjectId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_surfaceType
      __xmlattr[AttrSurfaceType]
    end

    def xmlattr_surfaceType=(value)
      __xmlattr[AttrSurfaceType] = value
    end

    def xmlattr_constructionIdRef
      __xmlattr[AttrConstructionIdRef]
    end

    def xmlattr_constructionIdRef=(value)
      __xmlattr[AttrConstructionIdRef] = value
    end

    def xmlattr_scheduleShadeIdRef
      __xmlattr[AttrScheduleShadeIdRef]
    end

    def xmlattr_scheduleShadeIdRef=(value)
      __xmlattr[AttrScheduleShadeIdRef] = value
    end

    def xmlattr_exposedToSun
      __xmlattr[AttrExposedToSun]
    end

    def xmlattr_exposedToSun=(value)
      __xmlattr[AttrExposedToSun] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def initialize(name = [], description = [], familyName = [], adjacentSpaceId = [], rectangularGeometry = [], planarGeometry = [], opening = [], cADObjectId = [])
      @name = name
      @description = description
      @familyName = familyName
      @adjacentSpaceId = adjacentSpaceId
      @rectangularGeometry = rectangularGeometry
      @planarGeometry = planarGeometry
      @opening = opening
      @cADObjectId = cADObjectId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Temp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_tempType - SOAP::SOAPNMTOKEN
  class Temp < ::String
    AttrTempType = XSD::QName.new(nil, "tempType")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_tempType
      __xmlattr[AttrTempType]
    end

    def xmlattr_tempType=(value)
      __xmlattr[AttrTempType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Temperature
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Temperature < ::String
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}TemperatureControl
  #   designTemp - BuildingSync::DesignTemp
  #   minTemp - BuildingSync::MinTemp
  #   maxTemp - BuildingSync::MaxTemp
  #   resetTemperature - BuildingSync::ResetTemperature
  class TemperatureControl
    attr_accessor :designTemp
    attr_accessor :minTemp
    attr_accessor :maxTemp
    attr_accessor :resetTemperature

    def initialize(designTemp = [], minTemp = [], maxTemp = [], resetTemperature = [])
      @designTemp = designTemp
      @minTemp = minTemp
      @maxTemp = maxTemp
      @resetTemperature = resetTemperature
    end
  end

  # {http://www.gbxml.org/schema}Thickness
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Thickness < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}TimeIncrement
  #   xmlattr_timeUnit - SOAP::SOAPNMTOKEN
  class TimeIncrement < ::String
    AttrTimeUnit = XSD::QName.new(nil, "timeUnit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_timeUnit
      __xmlattr[AttrTimeUnit]
    end

    def xmlattr_timeUnit=(value)
      __xmlattr[AttrTimeUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Transmittance
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  #   xmlattr_surfaceType - SOAP::SOAPNMTOKEN
  class Transmittance < ::String
    AttrSurfaceType = XSD::QName.new(nil, "surfaceType")
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def xmlattr_surfaceType
      __xmlattr[AttrSurfaceType]
    end

    def xmlattr_surfaceType=(value)
      __xmlattr[AttrSurfaceType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Transportation
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   cost - BuildingSync::Cost
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_transportationType - SOAP::SOAPNMTOKEN
  #   xmlattr_scheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Transportation
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrScheduleIdRef = XSD::QName.new(nil, "scheduleIdRef")
    AttrTransportationType = XSD::QName.new(nil, "transportationType")

    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :cost

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_transportationType
      __xmlattr[AttrTransportationType]
    end

    def xmlattr_transportationType=(value)
      __xmlattr[AttrTransportationType] = value
    end

    def xmlattr_scheduleIdRef
      __xmlattr[AttrScheduleIdRef]
    end

    def xmlattr_scheduleIdRef=(value)
      __xmlattr[AttrScheduleIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(generalGeometry = [], shellGeometry = [], cost = [])
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @cost = cost
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}UtilityRate
  class UtilityRate
    def initialize
    end
  end

  # {http://www.gbxml.org/schema}U-value
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class UValue < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Vegetation
  #   generalGeometry - BuildingSync::GeneralGeometry
  #   shellGeometry - BuildingSync::ShellGeometry
  #   waterRate - BuildingSync::WaterRate
  #   biomassDensity - BuildingSync::BiomassDensity
  #   cost - BuildingSync::Cost
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_vegetationType - SOAP::SOAPNMTOKEN
  #   xmlattr_waterScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_waterMeterIdRef - SOAP::SOAPIDREF
  #   xmlattr_shadeScheduleIdRef - SOAP::SOAPIDREF
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Vegetation
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")
    AttrShadeScheduleIdRef = XSD::QName.new(nil, "shadeScheduleIdRef")
    AttrVegetationType = XSD::QName.new(nil, "vegetationType")
    AttrWaterMeterIdRef = XSD::QName.new(nil, "waterMeterIdRef")
    AttrWaterScheduleIdRef = XSD::QName.new(nil, "waterScheduleIdRef")

    attr_accessor :generalGeometry
    attr_accessor :shellGeometry
    attr_accessor :waterRate
    attr_accessor :biomassDensity
    attr_accessor :cost

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_vegetationType
      __xmlattr[AttrVegetationType]
    end

    def xmlattr_vegetationType=(value)
      __xmlattr[AttrVegetationType] = value
    end

    def xmlattr_waterScheduleIdRef
      __xmlattr[AttrWaterScheduleIdRef]
    end

    def xmlattr_waterScheduleIdRef=(value)
      __xmlattr[AttrWaterScheduleIdRef] = value
    end

    def xmlattr_waterMeterIdRef
      __xmlattr[AttrWaterMeterIdRef]
    end

    def xmlattr_waterMeterIdRef=(value)
      __xmlattr[AttrWaterMeterIdRef] = value
    end

    def xmlattr_shadeScheduleIdRef
      __xmlattr[AttrShadeScheduleIdRef]
    end

    def xmlattr_shadeScheduleIdRef=(value)
      __xmlattr[AttrShadeScheduleIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(generalGeometry = [], shellGeometry = [], waterRate = [], biomassDensity = [], cost = [])
      @generalGeometry = generalGeometry
      @shellGeometry = shellGeometry
      @waterRate = waterRate
      @biomassDensity = biomassDensity
      @cost = cost
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Viscosity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Viscosity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ViscosityFofT
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ViscosityFofT < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Volume
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Volume < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WasteWaterHREff
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_airLoopIdRef - SOAP::SOAPIDREF
  #   xmlattr_hydronicLoopIdRef - SOAP::SOAPIDREF
  class WasteWaterHREff < ::String
    AttrAirLoopIdRef = XSD::QName.new(nil, "airLoopIdRef")
    AttrHydronicLoopIdRef = XSD::QName.new(nil, "hydronicLoopIdRef")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_airLoopIdRef
      __xmlattr[AttrAirLoopIdRef]
    end

    def xmlattr_airLoopIdRef=(value)
      __xmlattr[AttrAirLoopIdRef] = value
    end

    def xmlattr_hydronicLoopIdRef
      __xmlattr[AttrHydronicLoopIdRef]
    end

    def xmlattr_hydronicLoopIdRef=(value)
      __xmlattr[AttrHydronicLoopIdRef] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WaterLoss
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WaterLoss < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WaterRate
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WaterRate < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WaterUsePerCycle
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WaterUsePerCycle < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HeatRejectedtoSpace
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class HeatRejectedtoSpace < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Weather
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   location - BuildingSync::Location_
  #   city - SOAP::SOAPString
  #   stateOrProvince - SOAP::SOAPString
  #   country - SOAP::SOAPString
  #   hDD - BuildingSync::HDD
  #   cDD - BuildingSync::CDD
  #   dDDBCool - BuildingSync::DDDBCool
  #   dDHiHrCool - SOAP::SOAPDecimal
  #   dDWBCool - BuildingSync::DDWBCool
  #   dDDBRangeCool - BuildingSync::DDDBRangeCool
  #   dDLoHrCool - SOAP::SOAPDecimal
  #   dDPressureCool - BuildingSync::DDPressureCool
  #   dDWindSpeedCool - BuildingSync::DDWindSpeedCool
  #   dDWindDirCool - BuildingSync::DDWindDirCool
  #   dDSkyClearnessCool - BuildingSync::DDSkyClearnessCool
  #   dDRainCool - SOAP::SOAPInteger
  #   dDSnowCool - SOAP::SOAPInteger
  #   dDMonthCool - SOAP::SOAPInteger
  #   dDDayCool - SOAP::SOAPInteger
  #   dDDaylightCool - SOAP::SOAPInteger
  #   dDGroundTCool - BuildingSync::DDGroundTCool
  #   dDDBHeat - BuildingSync::DDDBHeat
  #   dDHiHrHeat - SOAP::SOAPDecimal
  #   dDWBHeat - BuildingSync::DDWBHeat
  #   dDDBRangeHeat - BuildingSync::DDDBRangeHeat
  #   dDLoHrHeat - SOAP::SOAPDecimal
  #   dDPressureHeat - BuildingSync::DDPressureHeat
  #   dDWindSpeedHeat - BuildingSync::DDWindSpeedHeat
  #   dDWindDirHeat - BuildingSync::DDWindDirHeat
  #   dDSkyClearnessHeat - BuildingSync::DDSkyClearnessHeat
  #   dDRainHeat - SOAP::SOAPInteger
  #   dDSnowHeat - SOAP::SOAPInteger
  #   dDMonthHeat - SOAP::SOAPInteger
  #   dDDayHeat - SOAP::SOAPInteger
  #   dDDaylightHeat - SOAP::SOAPInteger
  #   dDGroundTHeat - BuildingSync::DDGroundTHeat
  #   groundTemp - BuildingSync::GroundTemp
  #   wFTDTemp - BuildingSync::WFTDTemp
  #   wFTDRelHumidity - BuildingSync::WFTDRelHumidity
  #   wFTDWindSpeed - BuildingSync::WFTDWindSpeed
  #   wFTDWindDir - BuildingSync::WFTDWindDir
  #   wFTDPressure - BuildingSync::WFTDPressure
  #   reference - SOAP::SOAPString
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Weather
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :location
    attr_accessor :city
    attr_accessor :stateOrProvince
    attr_accessor :country
    attr_accessor :hDD
    attr_accessor :cDD
    attr_accessor :dDDBCool
    attr_accessor :dDHiHrCool
    attr_accessor :dDWBCool
    attr_accessor :dDDBRangeCool
    attr_accessor :dDLoHrCool
    attr_accessor :dDPressureCool
    attr_accessor :dDWindSpeedCool
    attr_accessor :dDWindDirCool
    attr_accessor :dDSkyClearnessCool
    attr_accessor :dDRainCool
    attr_accessor :dDSnowCool
    attr_accessor :dDMonthCool
    attr_accessor :dDDayCool
    attr_accessor :dDDaylightCool
    attr_accessor :dDGroundTCool
    attr_accessor :dDDBHeat
    attr_accessor :dDHiHrHeat
    attr_accessor :dDWBHeat
    attr_accessor :dDDBRangeHeat
    attr_accessor :dDLoHrHeat
    attr_accessor :dDPressureHeat
    attr_accessor :dDWindSpeedHeat
    attr_accessor :dDWindDirHeat
    attr_accessor :dDSkyClearnessHeat
    attr_accessor :dDRainHeat
    attr_accessor :dDSnowHeat
    attr_accessor :dDMonthHeat
    attr_accessor :dDDayHeat
    attr_accessor :dDDaylightHeat
    attr_accessor :dDGroundTHeat
    attr_accessor :groundTemp
    attr_accessor :wFTDTemp
    attr_accessor :wFTDRelHumidity
    attr_accessor :wFTDWindSpeed
    attr_accessor :wFTDWindDir
    attr_accessor :wFTDPressure
    attr_accessor :reference

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], location = [], city = [], stateOrProvince = [], country = [], hDD = [], cDD = [], dDDBCool = [], dDHiHrCool = [], dDWBCool = [], dDDBRangeCool = [], dDLoHrCool = [], dDPressureCool = [], dDWindSpeedCool = [], dDWindDirCool = [], dDSkyClearnessCool = [], dDRainCool = [], dDSnowCool = [], dDMonthCool = [], dDDayCool = [], dDDaylightCool = [], dDGroundTCool = [], dDDBHeat = [], dDHiHrHeat = [], dDWBHeat = [], dDDBRangeHeat = [], dDLoHrHeat = [], dDPressureHeat = [], dDWindSpeedHeat = [], dDWindDirHeat = [], dDSkyClearnessHeat = [], dDRainHeat = [], dDSnowHeat = [], dDMonthHeat = [], dDDayHeat = [], dDDaylightHeat = [], dDGroundTHeat = [], groundTemp = [], wFTDTemp = [], wFTDRelHumidity = [], wFTDWindSpeed = [], wFTDWindDir = [], wFTDPressure = [], reference = [])
      @name = name
      @description = description
      @location = location
      @city = city
      @stateOrProvince = stateOrProvince
      @country = country
      @hDD = hDD
      @cDD = cDD
      @dDDBCool = dDDBCool
      @dDHiHrCool = dDHiHrCool
      @dDWBCool = dDWBCool
      @dDDBRangeCool = dDDBRangeCool
      @dDLoHrCool = dDLoHrCool
      @dDPressureCool = dDPressureCool
      @dDWindSpeedCool = dDWindSpeedCool
      @dDWindDirCool = dDWindDirCool
      @dDSkyClearnessCool = dDSkyClearnessCool
      @dDRainCool = dDRainCool
      @dDSnowCool = dDSnowCool
      @dDMonthCool = dDMonthCool
      @dDDayCool = dDDayCool
      @dDDaylightCool = dDDaylightCool
      @dDGroundTCool = dDGroundTCool
      @dDDBHeat = dDDBHeat
      @dDHiHrHeat = dDHiHrHeat
      @dDWBHeat = dDWBHeat
      @dDDBRangeHeat = dDDBRangeHeat
      @dDLoHrHeat = dDLoHrHeat
      @dDPressureHeat = dDPressureHeat
      @dDWindSpeedHeat = dDWindSpeedHeat
      @dDWindDirHeat = dDWindDirHeat
      @dDSkyClearnessHeat = dDSkyClearnessHeat
      @dDRainHeat = dDRainHeat
      @dDSnowHeat = dDSnowHeat
      @dDMonthHeat = dDMonthHeat
      @dDDayHeat = dDDayHeat
      @dDDaylightHeat = dDDaylightHeat
      @dDGroundTHeat = dDGroundTHeat
      @groundTemp = groundTemp
      @wFTDTemp = wFTDTemp
      @wFTDRelHumidity = wFTDRelHumidity
      @wFTDWindSpeed = wFTDWindSpeed
      @wFTDWindDir = wFTDWindDir
      @wFTDPressure = wFTDPressure
      @reference = reference
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WeekSchedule
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   day - BuildingSync::Day
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleType - SOAP::SOAPNMTOKEN
  #   xmlattr_scheduleTypeLimitsId - SOAP::SOAPString
  class WeekSchedule
    AttrId = XSD::QName.new(nil, "id")
    AttrScheduleType = XSD::QName.new(nil, "scheduleType")
    AttrScheduleTypeLimitsId = XSD::QName.new(nil, "scheduleTypeLimitsId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :day

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleType
      __xmlattr[AttrScheduleType]
    end

    def xmlattr_scheduleType=(value)
      __xmlattr[AttrScheduleType] = value
    end

    def xmlattr_scheduleTypeLimitsId
      __xmlattr[AttrScheduleTypeLimitsId]
    end

    def xmlattr_scheduleTypeLimitsId=(value)
      __xmlattr[AttrScheduleTypeLimitsId] = value
    end

    def initialize(name = [], description = [], day = [])
      @name = name
      @description = description
      @day = day
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WeekScheduleId
  #   xmlattr_weekScheduleIdRef - SOAP::SOAPIDREF
  class WeekScheduleId
    AttrWeekScheduleIdRef = XSD::QName.new(nil, "weekScheduleIdRef")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_weekScheduleIdRef
      __xmlattr[AttrWeekScheduleIdRef]
    end

    def xmlattr_weekScheduleIdRef=(value)
      __xmlattr[AttrWeekScheduleIdRef] = value
    end

    def initialize
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Weight
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Weight < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WFTDPressure
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WFTDPressure < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WFTDRelHumidity
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WFTDRelHumidity < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WFTDTemp
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WFTDTemp < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WFTDWindDir
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WFTDWindDir < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WFTDWindSpeed
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class WFTDWindSpeed < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WindSpeed
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  #   xmlattr_type - SOAP::SOAPNMTOKEN
  class WindSpeed < ::String
    AttrType = XSD::QName.new(nil, "type")
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_type
      __xmlattr[AttrType]
    end

    def xmlattr_type=(value)
      __xmlattr[AttrType] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Width
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class Width < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}WindowType
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   u_value - BuildingSync::UValue
  #   shadingCoeff - BuildingSync::ShadingCoeff
  #   solarHeatGainCoeff - BuildingSync::SolarHeatGainCoeff
  #   transmittance - BuildingSync::Transmittance
  #   reflectance - BuildingSync::Reflectance
  #   emittance - BuildingSync::Emittance
  #   blind - BuildingSync::Blind
  #   frame - BuildingSync::Frame
  #   gap - BuildingSync::Gap
  #   glaze - BuildingSync::Glaze
  #   cost - BuildingSync::Cost
  #   extEquipId - BuildingSync::ExtEquipId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_DOELibIdRef - SOAP::SOAPString
  #   xmlattr_programId - SOAP::SOAPIDREF
  class WindowType
    AttrDOELibIdRef = XSD::QName.new(nil, "DOELibIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :u_value
    attr_accessor :shadingCoeff
    attr_accessor :solarHeatGainCoeff
    attr_accessor :transmittance
    attr_accessor :reflectance
    attr_accessor :emittance
    attr_accessor :blind
    attr_accessor :frame
    attr_accessor :gap
    attr_accessor :glaze
    attr_accessor :cost
    attr_accessor :extEquipId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_DOELibIdRef
      __xmlattr[AttrDOELibIdRef]
    end

    def xmlattr_DOELibIdRef=(value)
      __xmlattr[AttrDOELibIdRef] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], u_value = [], shadingCoeff = [], solarHeatGainCoeff = [], transmittance = [], reflectance = [], emittance = [], blind = [], frame = [], gap = [], glaze = [], cost = [], extEquipId = [])
      @name = name
      @description = description
      @u_value = u_value
      @shadingCoeff = shadingCoeff
      @solarHeatGainCoeff = solarHeatGainCoeff
      @transmittance = transmittance
      @reflectance = reflectance
      @emittance = emittance
      @blind = blind
      @frame = frame
      @gap = gap
      @glaze = glaze
      @cost = cost
      @extEquipId = extEquipId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}XAxis
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   xmlattr_unit - SOAP::SOAPString
  #   xmlattr_dataType - SOAP::SOAPString
  class XAxis
    AttrDataType = XSD::QName.new(nil, "dataType")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :name
    attr_accessor :description

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_dataType
      __xmlattr[AttrDataType]
    end

    def xmlattr_dataType=(value)
      __xmlattr[AttrDataType] = value
    end

    def initialize(name = [], description = [])
      @name = name
      @description = description
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}YAxis
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   xmlattr_unit - SOAP::SOAPString
  #   xmlattr_dataType - SOAP::SOAPString
  class YAxis
    AttrDataType = XSD::QName.new(nil, "dataType")
    AttrUnit = XSD::QName.new(nil, "unit")

    attr_accessor :name
    attr_accessor :description

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def xmlattr_dataType
      __xmlattr[AttrDataType]
    end

    def xmlattr_dataType=(value)
      __xmlattr[AttrDataType] = value
    end

    def initialize(name = [], description = [])
      @name = name
      @description = description
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}YearModeled
  #   beginDate - SOAP::SOAPDate
  #   endDate - SOAP::SOAPDate
  #   holidaysModeled - BuildingSync::HolidaysModeled
  class YearModeled
    attr_accessor :beginDate
    attr_accessor :endDate
    attr_accessor :holidaysModeled

    def initialize(beginDate = [], endDate = [], holidaysModeled = [])
      @beginDate = beginDate
      @endDate = endDate
      @holidaysModeled = holidaysModeled
    end
  end

  # {http://www.gbxml.org/schema}YearSchedule
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   beginDate - SOAP::SOAPDate
  #   endDate - SOAP::SOAPDate
  #   weekScheduleId - BuildingSync::WeekScheduleId
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_scheduleTypeLimitsId - SOAP::SOAPString
  class YearSchedule
    AttrId = XSD::QName.new(nil, "id")
    AttrScheduleTypeLimitsId = XSD::QName.new(nil, "scheduleTypeLimitsId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :beginDate
    attr_accessor :endDate
    attr_accessor :weekScheduleId

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_scheduleTypeLimitsId
      __xmlattr[AttrScheduleTypeLimitsId]
    end

    def xmlattr_scheduleTypeLimitsId=(value)
      __xmlattr[AttrScheduleTypeLimitsId] = value
    end

    def initialize(name = [], description = [], beginDate = [], endDate = [], weekScheduleId = [])
      @name = name
      @description = description
      @beginDate = beginDate
      @endDate = endDate
      @weekScheduleId = weekScheduleId
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}HolidaysModeled
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   holidayDate - SOAP::SOAPDate
  #   xmlattr_id - SOAP::SOAPID
  class HolidaysModeled
    AttrId = XSD::QName.new(nil, "id")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :holidayDate

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def initialize(name = nil, description = nil, holidayDate = nil)
      @name = name
      @description = description
      @holidayDate = holidayDate
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}Zone
  #   name - SOAP::SOAPString
  #   description - SOAP::SOAPString
  #   flow - BuildingSync::Flow
  #   secondaryFlow - BuildingSync::SecondaryFlow
  #   airChangesPerHour - SOAP::SOAPDecimal
  #   flowPerArea - BuildingSync::FlowPerArea
  #   flowPerPerson - BuildingSync::FlowPerPerson
  #   oAFlowPerArea - BuildingSync::OAFlowPerArea
  #   oAFlowPerPerson - BuildingSync::OAFlowPerPerson
  #   oAFlowPerZone - BuildingSync::OAFlowPerZone
  #   maxOAFlowPerZone - BuildingSync::MaxOAFlowPerZone
  #   minOAFlowPerZone - BuildingSync::MinOAFlowPerZone
  #   minimumOutdoorAirControlType - BuildingSync::MinimumOutdoorAirControlType
  #   designHeatT - BuildingSync::DesignHeatT
  #   designCoolT - BuildingSync::DesignCoolT
  #   indoorAirQuality - BuildingSync::IndoorAirQuality
  #   hydronicLoopId - BuildingSync::HydronicLoopId
  #   airLoopId - BuildingSync::AirLoopId
  #   cADObjectId - BuildingSync::CADObjectId
  #   typeCode - SOAP::SOAPString
  #   coolingSizingFactor - SOAP::SOAPDecimal
  #   heatingSizingFactor - SOAP::SOAPDecimal
  #   baseboardHeatingType - BuildingSync::BaseboardHeatingType
  #   baseboardHeatingCapacity - SOAP::SOAPDecimal
  #   xmlattr_id - SOAP::SOAPID
  #   xmlattr_heatSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_coolSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_outAirSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_airChangesSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_fanSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_fanTempSchedIdRef - SOAP::SOAPIDREF
  #   xmlattr_ifcGUID - SOAP::SOAPString
  #   xmlattr_programId - SOAP::SOAPIDREF
  class Zone
    AttrAirChangesSchedIdRef = XSD::QName.new(nil, "airChangesSchedIdRef")
    AttrCoolSchedIdRef = XSD::QName.new(nil, "coolSchedIdRef")
    AttrFanSchedIdRef = XSD::QName.new(nil, "fanSchedIdRef")
    AttrFanTempSchedIdRef = XSD::QName.new(nil, "fanTempSchedIdRef")
    AttrHeatSchedIdRef = XSD::QName.new(nil, "heatSchedIdRef")
    AttrId = XSD::QName.new(nil, "id")
    AttrIfcGUID = XSD::QName.new(nil, "ifcGUID")
    AttrOutAirSchedIdRef = XSD::QName.new(nil, "outAirSchedIdRef")
    AttrProgramId = XSD::QName.new(nil, "programId")

    attr_accessor :name
    attr_accessor :description
    attr_accessor :flow
    attr_accessor :secondaryFlow
    attr_accessor :airChangesPerHour
    attr_accessor :flowPerArea
    attr_accessor :flowPerPerson
    attr_accessor :oAFlowPerArea
    attr_accessor :oAFlowPerPerson
    attr_accessor :oAFlowPerZone
    attr_accessor :maxOAFlowPerZone
    attr_accessor :minOAFlowPerZone
    attr_accessor :minimumOutdoorAirControlType
    attr_accessor :designHeatT
    attr_accessor :designCoolT
    attr_accessor :indoorAirQuality
    attr_accessor :hydronicLoopId
    attr_accessor :airLoopId
    attr_accessor :cADObjectId
    attr_accessor :typeCode
    attr_accessor :coolingSizingFactor
    attr_accessor :heatingSizingFactor
    attr_accessor :baseboardHeatingType
    attr_accessor :baseboardHeatingCapacity

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_id
      __xmlattr[AttrId]
    end

    def xmlattr_id=(value)
      __xmlattr[AttrId] = value
    end

    def xmlattr_heatSchedIdRef
      __xmlattr[AttrHeatSchedIdRef]
    end

    def xmlattr_heatSchedIdRef=(value)
      __xmlattr[AttrHeatSchedIdRef] = value
    end

    def xmlattr_coolSchedIdRef
      __xmlattr[AttrCoolSchedIdRef]
    end

    def xmlattr_coolSchedIdRef=(value)
      __xmlattr[AttrCoolSchedIdRef] = value
    end

    def xmlattr_outAirSchedIdRef
      __xmlattr[AttrOutAirSchedIdRef]
    end

    def xmlattr_outAirSchedIdRef=(value)
      __xmlattr[AttrOutAirSchedIdRef] = value
    end

    def xmlattr_airChangesSchedIdRef
      __xmlattr[AttrAirChangesSchedIdRef]
    end

    def xmlattr_airChangesSchedIdRef=(value)
      __xmlattr[AttrAirChangesSchedIdRef] = value
    end

    def xmlattr_fanSchedIdRef
      __xmlattr[AttrFanSchedIdRef]
    end

    def xmlattr_fanSchedIdRef=(value)
      __xmlattr[AttrFanSchedIdRef] = value
    end

    def xmlattr_fanTempSchedIdRef
      __xmlattr[AttrFanTempSchedIdRef]
    end

    def xmlattr_fanTempSchedIdRef=(value)
      __xmlattr[AttrFanTempSchedIdRef] = value
    end

    def xmlattr_ifcGUID
      __xmlattr[AttrIfcGUID]
    end

    def xmlattr_ifcGUID=(value)
      __xmlattr[AttrIfcGUID] = value
    end

    def xmlattr_programId
      __xmlattr[AttrProgramId]
    end

    def xmlattr_programId=(value)
      __xmlattr[AttrProgramId] = value
    end

    def initialize(name = [], description = [], flow = [], secondaryFlow = [], airChangesPerHour = [], flowPerArea = [], flowPerPerson = [], oAFlowPerArea = [], oAFlowPerPerson = [], oAFlowPerZone = [], maxOAFlowPerZone = [], minOAFlowPerZone = [], minimumOutdoorAirControlType = [], designHeatT = [], designCoolT = [], indoorAirQuality = [], hydronicLoopId = [], airLoopId = [], cADObjectId = [], typeCode = [], coolingSizingFactor = [], heatingSizingFactor = [], baseboardHeatingType = [], baseboardHeatingCapacity = [])
      @name = name
      @description = description
      @flow = flow
      @secondaryFlow = secondaryFlow
      @airChangesPerHour = airChangesPerHour
      @flowPerArea = flowPerArea
      @flowPerPerson = flowPerPerson
      @oAFlowPerArea = oAFlowPerArea
      @oAFlowPerPerson = oAFlowPerPerson
      @oAFlowPerZone = oAFlowPerZone
      @maxOAFlowPerZone = maxOAFlowPerZone
      @minOAFlowPerZone = minOAFlowPerZone
      @minimumOutdoorAirControlType = minimumOutdoorAirControlType
      @designHeatT = designHeatT
      @designCoolT = designCoolT
      @indoorAirQuality = indoorAirQuality
      @hydronicLoopId = hydronicLoopId
      @airLoopId = airLoopId
      @cADObjectId = cADObjectId
      @typeCode = typeCode
      @coolingSizingFactor = coolingSizingFactor
      @heatingSizingFactor = heatingSizingFactor
      @baseboardHeatingType = baseboardHeatingType
      @baseboardHeatingCapacity = baseboardHeatingCapacity
      @__xmlattr = {}
    end
  end

  # {http://www.gbxml.org/schema}ZoneCoolingLoad
  #   xmlattr_unit - SOAP::SOAPNMTOKEN
  class ZoneCoolingLoad < ::String
    AttrUnit = XSD::QName.new(nil, "unit")

    def __xmlattr
      @__xmlattr ||= {}
    end

    def xmlattr_unit
      __xmlattr[AttrUnit]
    end

    def xmlattr_unit=(value)
      __xmlattr[AttrUnit] = value
    end

    def initialize(*arg)
      super
      @__xmlattr = {}
    end
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Source
  class Source < ::String
    ASHRAE = new("ASHRAE")
    Agent = new("Agent")
    Arch2030 = new("Arch2030")
    Assessor = new("Assessor")
    Auditor = new("Auditor")
    BuildingComponentLibrary = new("Building Component Library")
    Default = new("Default")
    DesignFiles = new("Design files")
    DirectMeasurement = new("Direct measurement")
    Drawings = new("Drawings")
    ENERGYSTARPortfolioManager = new("ENERGY STAR Portfolio Manager")
    EnergyManagementSystem = new("Energy Management System")
    Estimate = new("Estimate")
    GovernmentRecord = new("Government record")
    Other = new("Other")
    ProductSpecification = new("Product specification")
    Simulation = new("Simulation")
    TargetFinder = new("Target Finder")
    USEIA = new("US EIA")
    USEPA = new("US EPA")
    Utility = new("Utility")
    UtilityTransfer = new("Utility transfer")
  end

  # {http://buildingsync.net/schemas/bedes-auc/2019}Status
  class Status < ::String
    Existing = new("Existing")
    Other = new("Other")
    Past = new("Past")
    Proposed = new("Proposed")
    Reference = new("Reference")
  end
end
